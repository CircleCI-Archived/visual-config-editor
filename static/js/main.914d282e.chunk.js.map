{"version":3,"sources":["icons/ui/CircleCI.tsx","icons/ui/Loading.tsx","icons/components/CommandIcon.tsx","components/atoms/summaries/CommandSummary.tsx","icons/ui/AddIcon.tsx","components/atoms/AddButton.tsx","components/atoms/Empty.tsx","icons/ui/InfoIcon.tsx","components/atoms/Info.tsx","icons/ui/ExpandIcon.tsx","components/containers/DropdownContainer.tsx","components/atoms/Select.tsx","components/atoms/form/InspectorProperty.tsx","icons/ui/DeleteItemIcon.tsx","icons/ui/DragItemIcon.tsx","components/containers/CollapsibleList.tsx","components/atoms/form/ListProperty.tsx","components/atoms/Button.tsx","components/atoms/Footer.tsx","icons/ui/BreadCrumbArrowIcon.tsx","components/containers/BreadCrumbs.tsx","components/containers/inspector/subtypes/CommandSubtypes.tsx","icons/ui/Switch.tsx","components/atoms/form/MatrixProperty.tsx","components/containers/ParamListContainer.tsx","components/menus/TabbedMenu.tsx","components/menus/definitions/StepDefinitionMenu.tsx","components/atoms/form/StepListItem.tsx","icons/components/ExecutorIcon.tsx","components/atoms/summaries/ExecutorSummary.tsx","components/containers/inspector/subtypes/ExecutorSubtypes.tsx","components/containers/inspector/ExecutorInspector.tsx","components/containers/inspector/subtypes/ParameterSubtypes.tsx","components/atoms/Card.tsx","components/menus/definitions/subtypes/ExecutorTypePage.tsx","icons/components/JobIcon.tsx","icons/components/JobOnHoldIcon.tsx","icons/ui/MinusIcon.tsx","icons/ui/PlusIcon.tsx","components/atoms/form/AdjacentStepListItem.tsx","icons/ui/BranchIcon.tsx","icons/ui/EditIcon.tsx","icons/ui/FilterIcon.tsx","icons/ui/TagIcon.tsx","components/menus/stage/StagedFilterMenu.tsx","components/containers/FilterPreviewContainer.tsx","components/menus/SubTypeMenu.tsx","components/menus/stage/StagedJobMenu.tsx","icons/components/ParameterIcon.tsx","mappings/components/ParameterMapping.tsx","components/menus/definitions/subtypes/ParameterTypePage.tsx","components/atoms/summaries/ParameterSummary.tsx","components/containers/inspector/ParameterInspector.tsx","components/containers/ParametersContainer.tsx","components/menus/definitions/InspectorDefinitionMenu.tsx","components/atoms/Definition.tsx","components/atoms/nodes/JobNode.tsx","icons/components/WorkflowIcon.tsx","components/containers/inspector/JobInspector.tsx","mappings/components/JobMapping.tsx","components/atoms/summaries/JobSummary.tsx","mappings/components/ExecutorMapping.tsx","mappings/components/WorkflowMapping.tsx","state/DefinitionStore.tsx","icons/components/OrbIcon.tsx","components/menus/definitions/subtypes/StepTypePage.tsx","mappings/components/CommandMapping.tsx","components/containers/inspector/CommandInspector.tsx","mappings/GenerableMapping.tsx","components/atoms/ComponentInfo.tsx","components/menus/definitions/OrbDefinitionsMenu.tsx","state/Hooks.tsx","components/atoms/Toast.tsx","icons/ui/ToolTipPointerIcon.tsx","components/atoms/Tooltip.tsx","components/containers/ConfirmationModal.tsx","components/containers/KBarList.tsx","icons/ui/CopyIcon.tsx","icons/ui/OpenIcon.tsx","components/atoms/OpenConfig.tsx","examples/index.ts","components/panes/EditorPane.tsx","components/panes/NavigationPane.tsx","icons/ui/Logo.tsx","icons/ui/MoreIcon.tsx","components/containers/ExternalLinks.tsx","components/containers/PreviewToolbox.tsx","components/containers/HeaderMenu.tsx","components/atoms/ConnectionLine.tsx","components/atoms/Edge.tsx","components/containers/WorkflowContainer.tsx","components/panes/WorkflowsPane.tsx","components/atoms/WorkflowSelector.tsx","components/containers/GuideContainer.tsx","components/containers/DefinitionsContainer.tsx","components/menus/definitions/OrbImportMenu.tsx","components/containers/OrbImportsContainer.tsx","components/menus/definitions/DefinitionsMenu.tsx","state/Store.tsx","App.tsx","index.tsx"],"names":["CircleCI","className","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","Loading","props","CommandIcon","stroke","color","strokeLinecap","strokeLinejoin","strokeWidth","CommandSummary","data","name","AddIcon","AddButton","type","disabled","Empty","label","Logo","description","InfoIcon","Info","updateTooltip","useStoreActions","actions","ref","useRef","onMouseEnter","facing","onMouseLeave","undefined","ExpandIcon","expanded","DropdownContainer","useState","isExtended","setExtended","buttonRef","contentsRef","pos","setPos","clickListener","useCallback","useEffect","alignLeft","padding","current","main","getBoundingClientRect","contents","left","x","top","y","minWidth","getDropDownStyle","space","dontCollapse","window","addEventListener","removeEventListener","React","Children","toArray","children","first","onClick","event","stopPropagation","hidden","style","marginLeft","SelectField","field","meta","helper","value","initialValue","setValue","onChange","transform","Select","defaultSelected","findIndex","child","selected","setSelected","borderless","icon","placeholder","dropdownClassName","map","i","getField","error","as","FieldlessInspectorProperty","pinned","input","touched","labelStyle","required","dependent","InspectorProperty","useField","DeleteItemIcon","DragItemIcon","CollapsibleList","titleFont","setExpanded","classNameExpanded","e","newExpanded","title","titleExpanded","alwaysShowPinned","ListItem","index","arrayHelper","values","lastRemaining","labels","updateConfirmation","triggerConfirmation","draggableId","provided","_","minHeight","innerRef","draggableProps","dragHandleProps","modalDialogue","onConfirm","remove","FieldlessListProperty","empty","listItem","ListChild","addButton","length","onDragEnd","result","destination","move","source","droppableId","droppableProps","item","replace","defaultValue","target","ListProperty","render","styles","dangerous","default","active","secondary","flat","primary","Button","variant","margin","Footer","centered","inspectorWidth","BreadCrumbArrowIcon","BreadCrumbs","navigation","useStoreState","state","navigateBack","components","navAt","depth","curDepth","push","distance","component","Label","Icon","from","reverse","sourceURL","commandSubtypes","run","summary","command","parameters","docsLink","fields","checkout","add_ssh_keys","persist_to_workspace","attach_workspace","store_artifacts","store_test_results","save_cache","restore_cache","Switch","MatrixProperty","namePrefix","params","matrix","useMemo","matrixField","defaultField","inputDef","helperDef","inputMatrix","helperMatrix","isMatrix","setMatrix","callback","switchButton","subtypes","integer","parameter","enum","enumValues","string","boolean","executor","steps","env_var_name","ParamListContainer","paramList","parent","TabbedMenu","tabKey","id","setId","activeTab","setActiveTab","tabs","tab","Array","isArray","defaultGetter","defaultSetter","StepDefinitionMenu","customCommand","definitions","subtype","valueGetter","getter","valueSetter","setter","isName","builtIn","builtInSubtype","Object","commands","find","initialValues","enableReinitialize","onSubmit","step","toast","content","status","applyValues","newStep","editing","console","formikProps","selectSubtype","StepDefinitionMenuNav","Component","StepListItem","navigateTo","commandName","keys","commandValues","icons","docker","path","macos","windows","machine","ExecutorIcon","ExecutorSummary","executorSubtypes","text","executors","DockerExecutor","resourceClasses","MachineExecutor","MacOSExecutor","WindowsExecutor","ExecutorInspector","resourceClass","parameterSubtypes","Boolean","componentParametersSubtypes","pipeline","types","job","Card","truncate","slice","ExecutorTypePageNav","setSubtype","JobIcon","JobOnHoldIcon","role","focusable","MinusIcon","filled","PlusIcon","maskUnits","mask","AdjacentStepListItem","BranchIcon","EditIcon","FilterIcon","TagIcon","FilterItem","rows","getInitialValues","filters","branches","tags","only","ignore","FilterList","toLowerCase","StagedFilterMenuNav","currentValues","strip","list","filtered","filter","hasBranches","hasTags","FilterTargetList","FilterConditionList","condition","combineFilters","FilterPreviewContainer","filterSum","SubTypeMenuNav","nonce","SubTypeSelectPage","typePage","SubTypeMenuPage","menuPage","previous","menuProps","typeProps","navSubTypeMenu","subscriptions","v4","ContextItem","AdjacentSteps","StepTypePageNav","StagedJobMenuNav","updateWorkflowElement","context","newParameters","update","parsers","parseWorkflowJob","assign","entries","key","definitionsAsArray","jobs","orbs","reusable","ParameterizedJob","orb","OrbRef","ParameterIcon","ParameterMapping","singular","plural","defaults","parseParameter","store","add","define_parameters","update_parameters","delete_parameters","href","getSubtype","inspector","docsInfo","link","ParameterContainer","InspectorDefinitionMenuNav","dataType","passBackKey","dataMapping","InspectorDefinitionMenu","getDependencies","mapping","definition","observers","count","forEach","observer","reduce","acc","setGuideStep","guideStep","submitToStore","deleteDefinition","unpacked","iconComponent","getIcon","validateOnBlur","validate","errors","dupIndex","trim","newDefinition","submitData","old","new","guide","parentValues","args","nestedValues","DefinitionIcon","flattenGenerable","nested","generated","generate","Definition","Summary","setDragging","draggable","onDragStart","dragTarget","flattened","formatPattern","pattern","startsWith","endsWith","ConnectorIcon","subtraction","JobNode","elements","workflows","selectedWorkflowId","dragging","updateJob","update_jobs","setConnecting","toolbox","previewToolbox","selectedWorkflow","altAction","removeWorkflowElement","connecting","updateConnecting","handles","node","requiredBy","requires","hovering","setHovering","workflowJob","preview","jobFilter","sample","ignoreFilter","some","match","onlyFilter","warn","trackHovering","entering","leaving","postEnter","postLeave","n","nodeRef","startConnecting","side","connectionNodeId","connectionHandleType","connectionHandleId","preventDefault","start","onDragOver","JobMapping","onDrop","applyToNode","applyToData","element","isNode","updateWorkflowJob","overrideRoot","origin","isApproval","classNameValue","jobIcon","position","Position","Right","Left","WorkflowIcon","EmbeddedExecutor","embeddedExecutor","defineExecutor","define_executors","triggerToast","embeddedHelper","deletedExecutor","UNDEFINED_EXECUTOR","Executor","asReusable","body","button","buttonVariant","header","prev","cur","j","ReusableCommand","reuse","resolveObservables","reusedExecutor","ReusedExecutor","orbExec","orbCommands","includes","parseJob","define_jobs","delete_jobs","stagedNames","Set","has","newName","newParams","workflow","WorkflowJob","stagedJobMap","stagedJobs","setSubscriptions","executorKeys","getEmbeddedExecutor","subscription","subs","executorName","splitName","split","mapDefinitions","passThrough","requirements","message","test","hasExecs","orbWithExecs","ExecutorMapping","image","resource_class","xcode","parseReusableExecutor","update_executors","delete_executors","Job","param","reusableExec","reusableExecsKeys","WorkflowStage","when","Workflow","setWorkflowDefinition","WorkflowMapping","define_workflows","update_workflows","delete_workflows","storeHooks","w","updates","stagedJob","createSubscription","observerType","observable","observableType","observableDefs","observableTarget","observerSub","otherObservers","setDefinitions","generable","updateRecord","defType","oldState","observables","observerDefinitions","oneOrMore","o","subscribeToObservables","otherObservables","recordUpdate","createDefinitionActions","hooks","action","payload","oldDefinition","res","cleanup","createObserverSubscriptions","subType","extra","thunkOn","mainSub","extraActions","a","change","getState","observerSubs","observerUpdate","typeToMapping","Promise","all","then","observerCleanup","createObservableThunks","observerTypes","DefinitionStore","OrbIcon","version","src","logo_url","alt","namespace","CommandMapping","c","CustomCommand","parseCustomCommand","define_commands","update_commands","delete_commands","dataMappings","CustomParameter","componentType","ComponentInfo","docInfo","parts","OrbImportWithMeta","alias","manifest","url","display","OrbImport","loadOrb","fetch","resp","rej","json","catch","err","orbDefinitions","OrbDefinitionContainer","OrbDefinitionMenuNav","importOrb","unimportOrb","setOrb","setError","inProject","importedOrb","typedHooks","createTypedHooks","useStoreDispatch","getWindowDimensions","innerWidth","innerHeight","parseConfigHook","yml","setConfig","orbImports","parseResult","config","parseConfig","manifests","configBlob","parse","orbPromises","stanza","parsedOrb","parseOrbImport","Error","loadedOrbs","useConfigParser","Toast","ToolTipPointerIcon","size","direction","right","bottom","horizontal","getPos","tooltip","tipRect","rect","ToolTip","targetCur","confirmDialogue","save","delete","ConfirmationModal","confirm","dialogue","dialogueBox","closeHandler","handleUserKeyPress","populatePlaceholders","part","background","contain","autoFocus","RenderResults","useMatches","results","rootActionId","items","onRender","ResultItem","currentRootActionId","ancestors","ancestor","flexDirection","opacity","marginRight","subtitle","fontSize","shortcut","gridAutoFlow","gap","sc","borderRadius","KBarList","initialActions","keywords","section","perform","focus","document","getElementById","click","scrollIntoView","createAction","open","options","enableHistory","CopyIcon","OpenIcon","OpenConfig","inputFile","loadConfig","accept","files","templates","blogpost","readme","EditorPane","configError","example","setExample","editingConfig","URLSearchParams","location","search","queryConfig","get","template","JSON","stringify","configYAML","matchSDKComment","comment","endOfSDKComment","substring","editorText","navigator","clipboard","writeText","theme","language","original","modified","wrapperProps","NavigationPane","NavPage","navigationPane","MoreIcon","ExternalLinks","PreviewToolbox","updateToolbox","updatePreviewToolBox","setFilter","updateFilter","HeaderMenu","isSource","bounds","ConnectionLine","targetX","targetY","flowState","handle","end","dist","invalid","snapTo","snapToBounds","cx","cy","r","Edge","sourceX","sourceY","sourcePosition","targetPosition","arrowHeadType","markerEndId","WorkflowContainer","bgClassName","zoom","setTransform","cooldown","setCooldown","addWorkflowElement","setWorkflowElements","setAltAction","connectingTo","setConnectingTo","shiftKey","setTimeout","targetJob","handleMouseUp","startName","intent","addEdge","sourceHandle","targetHandle","animated","updatedRequires","requirement","edge","NodeGraph","flowActions","setConnectionNodeId","setConnectingPosition","setConnectionPosition","onDrag","onMouseMove","containerBounds","closest","clientX","clientY","nodeMapping","round","val","Math","floor","workflowNode","connectable","dragHandle","onMove","selectNodesOnDrag","nodeTypes","edgeTypes","snapToGrid","minZoom","connectionMode","ConnectionMode","Loose","connectionLineComponent","BackgroundVariant","Dots","WorkflowsPane","WorkflowSelector","selectWorkflow","addWorkflow","GuideContainer","DefinitionsContainer","hasDefinitions","info","Pagination","usePagination","pages","refine","nbPages","useInstantSearch","hits","page","SearchBox","useSearchBox","clear","OrbImportMenuNav","InstantSearch","searchClient","indexName","HitsPerPage","Hits","hitComponent","hit","full_name","OrbImportsContainer","DefinitionsMenuNav","workflowGraphs","updateWorkflow","updateConfig","generateConfig","persistProps","isExpanded","curProps","Actions","curNav","jumpedFrom","root","travelTo","DefinitionsMenu","onToastEvent","thunk","incomingToast","currentToast","timeout","clearTimeout","setToast","duration","workflowDef","wf","jobData","jobName","curWorkflow","concat","connection","changedName","staged","req","WorkflowJobApproval","observeWorkflowSources","oldName","wfJob","pre_steps","post_steps","loadDefinitions","parameterList","rest","defineParameter","defineAction","agindex","initIndex","findObject","objectID","agdata","object","gens","g","define","getJobName","baseName","workflowJobCounts","flow","sourceJobCounts","jobTable","requiredJobs","sourceJobName","requiredJob","endJobs","columns","solved","solve","col","row","greatestColumn","greatestRow","requiredJobProps","max","merge","defs","defRecord","defArrays","payloadArrays","pipelineParameters","CustomParametersList","Config","triggerConfigRefresh","lifecycle","generateLifeCycleMatrix","Store","createStore","algoliasearch","Pinned","App","appWidth","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","editorPane","reference","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.914d282e.chunk.js","sourcesContent":["import { IconProps } from '../IconProps';\n\nconst CircleCI = ({ className }: IconProps) => (\n  <svg\n    width=\"20\"\n    height=\"20\"\n    viewBox=\"0 0 20 20\"\n    className={className}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M0.0234839 7.51039C1.14085 3.1963 5.11269 0.00461578 9.84978 0.00461578C15.446 0.00461578 19.9906 4.47113 19.9906 9.98152C19.9906 15.4919 15.4507 19.9584 9.84978 19.9584C5.11269 19.9584 1.14085 16.7667 0.0234839 12.4527C0.0140942 12.4203 0.00939941 12.388 0.00939941 12.3557C0.00939941 12.0924 0.225362 11.8799 0.492967 11.8799H4.58217C4.77466 11.8799 4.94367 11.9954 5.01879 12.157C5.85447 13.9538 7.69954 15.2055 9.84508 15.2055C12.7747 15.2055 15.1549 12.8684 15.1549 9.98152C15.1549 7.0993 12.7794 4.7575 9.84508 4.7575C7.70424 4.7575 5.85916 6.00923 5.01879 7.806C4.94367 7.96766 4.77466 8.08314 4.58217 8.08314H0.492967C0.225362 8.08314 0.00939941 7.87067 0.00939941 7.60739C0.00939941 7.57505 0.0140942 7.54272 0.0234839 7.51039ZM9.84508 7.60739C8.51175 7.60739 7.43193 8.66974 7.43193 9.98152C7.43193 11.2933 8.51175 12.3557 9.84508 12.3557C11.1784 12.3557 12.2582 11.2933 12.2582 9.98152C12.2582 8.66974 11.1784 7.60739 9.84508 7.60739Z\"\n      fill=\"#161616\"\n    />\n  </svg>\n);\n\nexport default CircleCI;\n","import { IconProps } from '../IconProps';\nimport CircleLogo from './CircleCI';\n\nconst Loading = (props: IconProps) => (\n  <div className={`flex flex-row ${props.className} w-36 h-6`}>\n    <CircleLogo className=\"my-auto\" />\n    <h3 className=\"font-bold px-2\">Loading</h3>\n\n    <span className=\"border-r mx-2 py-3\"></span>\n    <svg\n      width=\"24\"\n      height=\"24\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      className=\"my-auto animate-spin-slow\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M2 12C2 6.47715 6.47715 2 12 2V12V22C6.47715 22 2 17.5228 2 12Z\"\n        fill=\"#B6E6FF\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M22 12C22 17.5228 17.5228 22 12 22V2C17.5228 2 22 6.47715 22 12Z\"\n        fill=\"#0078CA\"\n      />\n    </svg>\n  </div>\n);\n\nexport default Loading;\n","import { IconProps } from '../IconProps';\n\nconst CommandIcon = (props: IconProps) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    className={props.className}\n    fill=\"none\"\n    stroke={props.color || 'black'}\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\"\n    />\n  </svg>\n);\n\nexport default CommandIcon;\n","import { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport CommandIcon from '../../../icons/components/CommandIcon';\n\nconst CommandSummary: React.FunctionComponent<{ data: CustomCommand }> = (\n  props,\n) => {\n  return (\n    <div className=\"flex flex-row\">\n      <CommandIcon className=\"mr-4 w-6 h-6\" />\n      <h3 className=\"my-auto\">{props.data.name}</h3>\n    </div>\n  );\n};\n\nexport default CommandSummary;\n","import { IconProps } from '../IconProps';\n\nconst AddIcon = (props: IconProps) => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    className={props.className}\n    fill=\"none\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M7 7V1C7 0.447715 7.44772 0 8 0C8.55229 0 9 0.447715 9 1V7H15C15.5523 7 16 7.44772 16 8C16 8.55229 15.5523 9 15 9H9V15C9 15.5523 8.55229 16 8 16C7.44772 16 7 15.5523 7 15V9H1C0.447715 9 0 8.55229 0 8C0 7.44772 0.447715 7 1 7H7Z\"\n      fill=\"#343434\"\n    />\n  </svg>\n);\n\nexport default AddIcon;\n","import { ButtonHTMLAttributes } from 'react';\nimport AddIcon from '../../icons/ui/AddIcon';\n\nconst AddButton = (props: ButtonHTMLAttributes<HTMLButtonElement>) => {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={\n        `bg-circle-gray-300 transition-colors h-8 w-8 rounded ${props.className} \n      ${props.disabled ? 'opacity-50 cursor-default' : 'hover:bg-circle-gray-400 '}`\n      }\n    >\n      <AddIcon className=\"m-auto\"></AddIcon>\n    </button>\n  );\n};\n\nexport default AddButton;\n","import { ReactElement } from 'react';\nimport { IconProps } from '../../icons/IconProps';\n\nexport type EmptyProps = {\n  label: string;\n  Logo?: React.FunctionComponent<IconProps>;\n  description?: string | ReactElement;\n};\n\nexport const Empty = ({ label, Logo, description }: EmptyProps) => {\n  return (\n    <div>\n      {Logo && <Logo className=\"w-5 h-5 mx-auto\" color=\"#161616\" />}\n      <h2 className=\"text-sm font-bold text-center text-circle-black p-1\">{label}</h2>\n      {description && (\n        <div className=\"text-sm text-center text-circle-black\">{description}</div>\n      )}\n    </div>\n  );\n};\n","import { IconProps } from '../IconProps';\n\nconst InfoIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 20 20\" className={props.className}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M10 1.81818C5.4839 1.81818 1.81818 5.4839 1.81818 10C1.81818 14.5161 5.4839 18.1818 10 18.1818C14.5161 18.1818 18.1818 14.5161 18.1818 10C18.1818 5.4839 14.5161 1.81818 10 1.81818ZM0 10C0 4.47974 4.47974 0 10 0C15.5203 0 20 4.47974 20 10C20 15.5203 15.5203 20 10 20C4.47974 20 0 15.5203 0 10ZM10 4.54546C9.49796 4.54546 9.09094 4.95248 9.09094 5.45455C9.09094 5.95663 9.49796 6.36364 10 6.36364C10.5021 6.36364 10.9091 5.95663 10.9091 5.45455C10.9091 4.95248 10.5021 4.54546 10 4.54546ZM10 8.18182C9.49796 8.18182 9.09094 8.58883 9.09094 9.09091V14.5455C9.09094 15.0475 9.49796 15.4545 10 15.4545C10.5021 15.4545 10.9091 15.0475 10.9091 14.5455V9.09091C10.9091 8.58883 10.5021 8.18182 10 8.18182Z\"\n      fill={props.color}\n    />\n  </svg>\n);\n\nexport default InfoIcon;\n","import { useRef } from 'react';\nimport InfoIcon from '../../icons/ui/InfoIcon';\nimport { useStoreActions } from '../../state/Hooks';\n\nexport const Info = ({ description }: { description: string }) => {\n  const updateTooltip = useStoreActions((actions) => actions.updateTooltip);\n  const ref = useRef(null);\n\n  return (\n    <div\n      ref={ref}\n      className=\"my-auto flex ml-1\"\n      onMouseEnter={() => {\n        updateTooltip({ description, ref, facing: 'bottom' });\n      }}\n      onMouseLeave={() => updateTooltip(undefined)}\n    >\n      <InfoIcon className=\"w-5 h-5 p-1\" color=\"#6A6A6A\" />\n    </div>\n  );\n};\n","import { IconProps } from '../IconProps';\n\nconst ExpandIcon = (props: IconProps & { expanded: boolean }) => (\n  <svg viewBox=\"0 0 14 14\" className={props.className}>\n    <path\n      d={\n        props.expanded\n          ? 'M4.20710678,6 L11.7928932,6 C12.0690356,6 12.2928932,6.22385763 12.2928932,6.5 C12.2928932,6.63260824 12.2402148,6.7597852 12.1464466,6.85355339 L8.35355339,10.6464466 C8.15829124,10.8417088 7.84170876,10.8417088 7.64644661,10.6464466 L3.85355339,6.85355339 C3.65829124,6.65829124 3.65829124,6.34170876 3.85355339,6.14644661 C3.94732158,6.05267842 4.07449854,6 4.20710678,6 Z'\n          : 'M6,11.7928932 L6,4.20710678 C6,3.93096441 6.22385763,3.70710678 6.5,3.70710678 C6.63260824,3.70710678 6.7597852,3.7597852 6.85355339,3.85355339 L10.6464466,7.64644661 C10.8417088,7.84170876 10.8417088,8.15829124 10.6464466,8.35355339 L6.85355339,12.1464466 C6.65829124,12.3417088 6.34170876,12.3417088 6.14644661,12.1464466 C6.05267842,12.0526784 6,11.9255015 6,11.7928932 Z'\n      }\n    ></path>\n  </svg>\n);\n\nexport default ExpandIcon;\n","import React, {\n  ReactChild,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\n\nconst getDropDownStyle = (\n  buttonRef: RefObject<HTMLButtonElement>,\n  contentsRef: RefObject<HTMLDivElement>,\n  alignLeft?: boolean,\n  padding?: number,\n) => {\n  if (!buttonRef.current || !contentsRef.current) {\n    return undefined;\n  }\n\n  const main = buttonRef.current?.getBoundingClientRect();\n  const contents = contentsRef.current?.getBoundingClientRect();\n\n  return {\n    left: main.x + (alignLeft ? -contents.width + main.width : 0),\n    top: main.y + main.height + (padding || 4),\n    minWidth: main.width,\n  };\n};\n\nconst DropdownContainer = (props: {\n  className?: string;\n  space?: number;\n  alignLeft?: boolean;\n  dontCollapse?: boolean;\n  onClick?: () => void;\n  children: ReactChild[] | ReactChild;\n}) => {\n  const [isExtended, setExtended] = useState(false);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const contentsRef = useRef<HTMLDivElement>(null);\n  const [pos, setPos] = useState<\n    | {\n        left: number;\n        top: number;\n        minWidth: number;\n      }\n    | undefined\n  >(undefined);\n\n  const clickListener = useCallback(() => {\n    setExtended(false);\n  }, []);\n\n  useEffect(() => {\n    setPos(\n      getDropDownStyle(buttonRef, contentsRef, props.alignLeft, props.space),\n    );\n\n    if (!props.dontCollapse) {\n      window.addEventListener('click', clickListener);\n\n      return () => {\n        window.removeEventListener('click', clickListener);\n      };\n    }\n  }, [\n    isExtended,\n    clickListener,\n    props.alignLeft,\n    props.space,\n    props.dontCollapse,\n  ]);\n\n  const [first, ...children] = React.Children.toArray(props.children);\n\n  return (\n    <>\n      <button\n        className={props.className}\n        ref={buttonRef}\n        type=\"button\"\n        onClick={(event) => {\n          setExtended(!isExtended);\n          // prevent the click event from bubbling up to event that will close the drawer\n          event.stopPropagation();\n          props.onClick && props.onClick();\n        }}\n      >\n        {first}\n      </button>\n      {isExtended && (\n        <div\n          ref={contentsRef}\n          hidden={!pos}\n          className=\"fixed w-max h-max z-20 flex flex-col\"\n          style={{ ...pos, marginLeft: 0 }}\n        >\n          {children}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default DropdownContainer;\n","import { FieldHelperProps, FieldInputProps, FieldMetaProps } from 'formik';\nimport React, { OptionHTMLAttributes, ReactElement, useState } from 'react';\nimport ExpandIcon from '../../icons/ui/ExpandIcon';\nimport DropdownContainer from '../containers/DropdownContainer';\n\ntype OptionElement = ReactElement<OptionHTMLAttributes<HTMLHtmlElement>>;\n\ntype SelectProps = {\n  placeholder?: string;\n  value?: any;\n  className?: string;\n  dropdownClassName?: string;\n  onChange?: (value: any) => void;\n  children: OptionElement[] | OptionElement;\n  icon?: ReactElement;\n  borderless?: boolean;\n};\n\ntype SelectFieldProps = SelectProps & {\n  name: string;\n  field: FieldInputProps<any>;\n  meta: FieldMetaProps<any>;\n  helper: FieldHelperProps<any>;\n  transform?: (value: any) => any;\n};\n\nconst SelectField = ({\n  name,\n  field,\n  meta,\n  helper,\n  ...props\n}: SelectFieldProps) => {\n  const { value, initialValue } = meta;\n  const { setValue } = helper;\n\n  return (\n    <Select\n      {...field}\n      {...props}\n      value={value || initialValue}\n      onChange={(value) => {\n        setValue(props.transform ? props.transform(value) : value);\n\n        props.onChange && props.onChange(value);\n      }}\n    />\n  );\n};\n\nconst Select = (props: SelectProps) => {\n  const children = React.Children.toArray(props.children) as OptionElement[];\n  const defaultSelected = children.findIndex(\n    (child) => `${child.props.value}` === `${props.value}`,\n  );\n  const [selected, setSelected] = useState(defaultSelected);\n\n  return (\n    <DropdownContainer\n      className={`rounded ${\n        props.borderless\n          ? 'border-transparent'\n          : ' border-circle-gray-300 shadow-sm'\n      } px-2 hover:border-circle-gray-700 border w-auto \n        ${props.className}`}\n    >\n      <div className=\"flex flex-row\">\n        {props.icon}\n        <div\n          className={`${\n            selected === -1 ? 'text-circle-gray-500' : 'text-circle-black'\n          } ml-2 leading-10`}\n        >\n          {selected > -1\n            ? children[selected].props.children\n            : props.placeholder}\n        </div>\n        <div className=\"ml-auto py-2\">\n          <ExpandIcon className=\"w-3 h-5 mr-3 ml-3\" expanded={true} />\n        </div>\n      </div>\n      <div className={'bg-white py-2 shadow-lg flex flex-col ' + props.dropdownClassName}>\n        {children.map((child, i) => {\n          return (\n            <button\n              className={`px-3 py-1 text-left hover:bg-circle-gray-200 ${\n                i > 0 && 'border-t border-circle-gray-300'\n              }`}\n              key={i}\n              onClick={() => {\n                setSelected(i);\n\n                if (props.onChange) {\n                  props.onChange(children[i].props.value);\n                }\n              }}\n            >\n              {child.props.children}\n            </button>\n          );\n        })}\n      </div>\n    </DropdownContainer>\n  );\n};\n\nexport { Select, SelectField };\n","import {\n  Field,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldMetaProps,\n  useField,\n} from 'formik';\nimport { ReactElement, useEffect } from 'react';\nimport { Info } from '../Info';\nimport { SelectField } from '../Select';\n\nexport type InspectorFieldProps = {\n  label: string;\n  name: any;\n  as?: string;\n  type?: string;\n  value?: any;\n  labelStyle?: string;\n  hidden?: boolean;\n  className?: string;\n  required?: boolean;\n  description?: string;\n  beEmpty?: boolean;\n  placeholder?: string;\n  transform?: (value: any) => any;\n  onChange?: (e: any) => void;\n  children?: ReactElement[] | ReactElement;\n  dependent?: (value: any) => ReactElement;\n  pinned?: ReactElement;\n};\n\nconst getField = (\n  props: Partial<InspectorFieldProps>,\n  field: FieldInputProps<any>,\n  meta: FieldMetaProps<any>,\n  helper: FieldHelperProps<any>,\n  error?: string,\n) => {\n  if (props.children && props.as === 'select') {\n    return (\n      <SelectField\n        {...props}\n        name={props.name}\n        meta={meta}\n        field={field}\n        helper={helper}\n        placeholder={props.placeholder}\n        transform={props.transform}\n        onChange={props.onChange}\n        className={'w-full ' + props.className}\n      >\n        {props.children}\n      </SelectField>\n    );\n  }\n\n  return (\n    props.children ?? (\n      <Field\n        {...field}\n        {...props}\n        className={`${props.type !== 'checkbox' ? 'w-full' : 'ml-auto'} \n        border rounded p-2 px-4 shadow-sm hover:border-circle-black placeholder-circle-gray-500 ${\n          !field.value && 'bg-circle-gray-100'\n        } ${error ? 'border-circle-red' : 'border-circle-gray-300'}`}\n      ></Field>\n    )\n  );\n};\n\nconst InspectorProperty = (props: InspectorFieldProps) => {\n  const field = useField(props);\n  return <FieldlessInspectorProperty {...props} field={field} />;\n};\n\nexport const FieldlessInspectorProperty = ({\n  label,\n  field,\n  description,\n  pinned,\n  ...props\n}: InspectorFieldProps & {\n  field: [FieldInputProps<any>, FieldMetaProps<any>, FieldHelperProps<any>];\n}) => {\n  const [input, meta, helper] = field;\n  const { touched, error, value } = meta;\n\n  // Sync form value to the prop value on mount\n  useEffect(() => {\n    if (props.value && value !== props.value) {\n      helper.setValue(props.value);\n    }\n  }, [helper, value, props.value]);\n\n  return (\n    <>\n      <div\n        className={`${props.type === 'checkbox' && `flex flex-row`} mb-4 ${\n          props.className\n        }`}\n        hidden={props.hidden}\n      >\n        <div className={`flex flex-row mb-2 ${props.labelStyle}`}>\n          <h3 className=\"font-medium text-sm my-auto text-circle-black\">\n            {label}\n          </h3>\n          {description && <Info description={description} />}\n          <div className=\"ml-auto \">\n            {props.required && (\n              <span className=\"leading-5 text-xs text-circle-black px-2 bg-circle-gray-300 rounded-full font-medium\">\n                required\n              </span>\n            )}\n            {pinned}\n          </div>\n        </div>\n        {getField(props, input, meta, helper, error)}\n        {touched && error && (\n          <span className=\"text-sm text-circle-red\">{error}</span>\n        )}\n      </div>\n      {props.dependent && props.dependent(value)}\n    </>\n  );\n};\n\nexport default InspectorProperty;\n","import { IconProps } from '../IconProps';\n\nconst DeleteItemIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 12 12\" className={props.className}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M7.42616 6L11.7046 10.2785C12.0985 10.6723 12.0985 11.3108 11.7046 11.7046C11.3108 12.0985 10.6723 12.0985 10.2785 11.7046L6 7.42616L1.72153 11.7046C1.3277 12.0985 0.68919 12.0985 0.295367 11.7046C-0.0984557 11.3108 -0.0984557 10.6723 0.295367 10.2785L4.57384 6L0.295367 1.72153C-0.0984557 1.3277 -0.0984557 0.68919 0.295367 0.295367C0.68919 -0.0984557 1.3277 -0.0984557 1.72153 0.295367L6 4.57384L10.2785 0.295367C10.6723 -0.0984557 11.3108 -0.0984557 11.7046 0.295367C12.0985 0.68919 12.0985 1.3277 11.7046 1.72153L7.42616 6V6Z\"\n      fill={props.color}\n    />\n  </svg>\n);\n\nexport default DeleteItemIcon;\n","import { IconProps } from '../IconProps';\n\nconst DragItemIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 16 6\" className={props.className} fill={props.color}>\n    <path d=\"M16 1C16 0.447715 15.5523 0 15 0H1C0.447715 0 0 0.447715 0 1C0 1.55228 0.447715 2 1 2H15C15.5523 2 16 1.55228 16 1ZM0 5C0 5.55228 0.447715 6 1 6H15C15.5523 6 16 5.55228 16 5C16 4.44772 15.5523 4 15 4H1C0.447715 4 0 4.44772 0 5Z\"></path>\n  </svg>\n);\n\nexport default DragItemIcon;\n","import { ReactElement, useState } from 'react';\nimport ExpandIcon from '../../icons/ui/ExpandIcon';\n\nexport interface CollapsibleListProps {\n  title: string | ReactElement;\n  titleExpanded?: ReactElement;\n  titleFont?: string;\n  children: ReactElement;\n  expanded?: boolean;\n  classNameExpanded?: string;\n  className?: string;\n  onChange?: (expanded: boolean) => void;\n  pinned?: ReactElement;\n  alwaysShowPinned?: boolean;\n}\n\nconst CollapsibleList = ({ titleFont, ...props }: CollapsibleListProps) => {\n  const [expanded, setExpanded] = useState(props.expanded || false);\n\n  return (\n    <div\n      className={`transition-all ${\n        props.classNameExpanded && expanded\n          ? props.classNameExpanded\n          : props.className\n      }`}\n    >\n      <div className=\"flex flex-row\">\n        <div className=\"w-10/12 my-auto\">\n          <div className=\"flex flex-row h-8\">\n            <button\n              onClick={(e) => {\n                const newExpanded = !expanded;\n\n                setExpanded(newExpanded);\n                props.onChange && props.onChange(newExpanded);\n              }}\n              type=\"button\"\n              style={{ width: 22, height: 22 }}\n              className={`flex hover:bg-circle-gray-250 border-white border rounded px-1`}\n            >\n              <ExpandIcon className=\"w-3 h-5 mx-auto\" expanded={expanded} />\n            </button>\n            <h1\n              className={`mx-2 ${\n                titleFont ? titleFont : 'font-medium text-base'\n              } leading-6 tracking-wide`}\n            >\n              {props.title}\n            </h1>\n          </div>\n          {expanded && props.titleExpanded}\n        </div>\n        {(expanded || props.alwaysShowPinned) && props.pinned}\n      </div>\n      {expanded && <div className=\"ml-4\">{props.children}</div>}\n    </div>\n  );\n};\n\nexport default CollapsibleList;\n","import {\n  ArrayHelpers,\n  FieldArray,\n  FieldArrayRenderProps,\n  FieldHelperProps,\n  FieldInputProps,\n  FieldMetaProps,\n  useField,\n} from 'formik';\nimport { ReactElement } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport DeleteItemIcon from '../../../icons/ui/DeleteItemIcon';\nimport DragListIcon from '../../../icons/ui/DragItemIcon';\nimport { useStoreActions } from '../../../state/Hooks';\nimport CollapsibleList from '../../containers/CollapsibleList';\nimport AddButton from '../AddButton';\nimport { Info } from '../Info';\nimport { InspectorFieldProps } from './InspectorProperty';\n\nexport type ListItemChildProps = {\n  item: any;\n  index: number;\n  values: any;\n  setValue: (value: any) => void;\n};\n\nexport type ListPropertyProps = InspectorFieldProps & {\n  titleExpanded?: ReactElement;\n  values?: any;\n  description?: string;\n  expanded?: boolean;\n  empty?: string | ReactElement;\n  titleFont?: string;\n  addButton?: boolean;\n  pinned?: ReactElement;\n  listItem?: (props: ListItemChildProps) => ReactElement;\n  labels?: (values: any) => string[];\n};\n\nexport type ListItemProps = {\n  index: number;\n  parameters?: any;\n  values?: any;\n  arrayHelper: ArrayHelpers;\n  children: ReactElement;\n  lastRemaining: boolean;\n  labels?: (values: any) => string[];\n};\n\nconst ListItem = ({\n  index,\n  arrayHelper,\n  children,\n  values,\n  lastRemaining,\n  labels,\n}: ListItemProps) => {\n  const updateConfirmation = useStoreActions(\n    (actions) => actions.triggerConfirmation,\n  );\n\n  return (\n    <Draggable key={index} draggableId={`${index}`} index={index}>\n      {(provided, _) => (\n        <div\n          className={`w-full mb-2 p-1 pl-3\nborder border-circle-gray-300 hover:border-circle-black shadow-sm rounded flex flex-row ${\n            children ? 'bg-white' : 'bg-circle-gray-300'\n          }`}\n          style={{ minHeight: '40px' }}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n        >\n          <div className=\"ml-auto mr-3 my-auto\" {...provided.dragHandleProps}>\n            <DragListIcon className=\"w-4 h-6 py-1\" color=\"#AAAAAA\" />\n          </div>\n          {children}\n          {!lastRemaining && (\n            <button\n              onClick={() => {\n                updateConfirmation({\n                  modalDialogue: 'delete',\n                  labels: labels ? labels(values) : ['item'],\n                  onConfirm: () => arrayHelper.remove(index),\n                });\n              }}\n              type=\"button\"\n              className=\"my-auto mx-2\"\n            >\n              <DeleteItemIcon className=\" w-3 h-3\" color=\"#AAAAAA\" />\n            </button>\n          )}\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\n// This is currently hard coded to support steps, but can be broken out to support other sorts of lists.\n\nconst ListProperty = (props: ListPropertyProps) => {\n  const field = useField(props);\n\n  return (\n    <FieldArray\n      {...field}\n      name={props.name}\n      render={(arrayHelper) => (\n        <FieldlessListProperty\n          {...props}\n          field={field}\n          arrayHelper={arrayHelper}\n        />\n      )}\n    />\n  );\n};\n\nexport const FieldlessListProperty = ({\n  label,\n  values,\n  description,\n  empty,\n  children,\n  listItem,\n  labels,\n  field,\n  placeholder,\n  arrayHelper,\n  ...props\n}: ListPropertyProps & {\n  field: [FieldInputProps<any>, FieldMetaProps<any>, FieldHelperProps<any>];\n  arrayHelper: FieldArrayRenderProps;\n}) => {\n  const [input, , helper] = field;\n  const ListChild = listItem;\n\n  return (\n    <CollapsibleList\n      title={\n        <div className=\"flex flex-row\">\n          {label}\n          {description && <Info description={description} />}\n        </div>\n      }\n      titleFont={props.titleFont}\n      className={props.className}\n      titleExpanded={props.titleExpanded}\n      expanded={props.expanded}\n      pinned={\n        <>\n          {props.addButton && (\n            <AddButton\n              className=\"ml-auto\"\n              onClick={() => {\n                helper.setValue(input.value ? [...input.value, ''] : ['']);\n              }}\n            />\n          )}\n          {props.pinned}\n        </>\n      }\n    >\n      {input?.value?.length > 0 ? (\n        <DragDropContext\n          onDragEnd={(result) => {\n            if (result.destination) {\n              arrayHelper.move(result.source.index, result.destination.index);\n            }\n          }}\n        >\n          {children}\n          <Droppable droppableId=\"droppable\">\n            {(provided) => (\n              <div\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className=\"pl-3 py-2 flex flex-col\"\n              >\n                {input.value.map((item: any, index: number) => {\n                  return (\n                    <ListItem\n                      key={index}\n                      lastRemaining={input.value.length === 1}\n                      index={index}\n                      values={item}\n                      arrayHelper={arrayHelper}\n                      labels={labels}\n                    >\n                      {ListChild ? (\n                        <ListChild\n                          setValue={(value) => {\n                            arrayHelper.replace(index, value);\n                          }}\n                          item={item}\n                          index={index}\n                          values={values}\n                        />\n                      ) : (\n                        <input\n                          className=\"w-full h-full p-1\"\n                          defaultValue={item}\n                          placeholder={placeholder}\n                          onChange={(e) => {\n                            arrayHelper.replace(index, e.target.value);\n                          }}\n                        />\n                      )}\n                    </ListItem>\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      ) : (\n        <>\n          <div className=\"ml-2 font-medium text-sm text-circle-gray-500\">\n            {empty}\n          </div>\n          {children}\n        </>\n      )}\n    </CollapsibleList>\n  );\n};\n\nexport default ListProperty;\n","import { ButtonHTMLAttributes } from 'react';\n\nconst styles = {\n  dangerous: {\n    default: 'bg-circle-red-dangerous text-white',\n    active: 'hover:bg-circle-red-dangerous-dark ',\n  },\n  secondary: {\n    default: 'bg-circle-gray-250',\n    active: 'hover:bg-circle-gray-300',\n  },\n  flat: {\n    default: 'text-circle-gray-400',\n    active: 'hover:bg-circle-gray-300 text-white',\n  },\n  primary: {\n    default: 'bg-circle-blue text-white',\n    active: 'hover:bg-circle-blue-dark',\n  },\n};\n\nexport type ButtonVariant = keyof typeof styles;\n\nexport const Button = ({\n  variant,\n  className,\n  margin,\n  ...props\n}: ButtonHTMLAttributes<HTMLButtonElement> & {\n  variant: ButtonVariant;\n  margin?: string;\n}) => {\n  return (\n    <button\n      {...props}\n      className={`${className} ${\n        margin ? `mx-${margin}` : 'mx-3'\n      } w-min h-min whitespace-nowrap text-sm font-medium py-2 px-4 duration:50 transition-colors rounded-md2 ${\n        styles[variant].default\n      }\n      ${props.disabled ? 'opacity-50 cursor-default' : styles[variant].active}`}\n    >\n      {props.children}\n    </button>\n  );\n};\n","import { PropsWithChildren } from 'react';\nimport { inspectorWidth } from '../../App';\n\nexport const Footer = ({\n  children,\n  centered,\n  className,\n}: PropsWithChildren<any> & { centered?: boolean }) => {\n  return (\n    <footer\n      className={`absolute bottom-0 flex flex-row right-0 py-6 px-2 bg-white border-t border-circle-gray-300 ${className}`}\n      style={{ width: inspectorWidth }}\n    >\n      <div className={`flex ${centered ? 'mx-auto' : 'ml-auto'}`}>\n        {children}\n      </div>\n    </footer>\n  );\n};\n","import { IconProps } from '../IconProps';\n\nconst BreadCrumbArrowIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 16 16\" className={props.className} fill={props.color}>\n    <path d=\"M11.6568842,7.24302798 C11.9577895,7.54393324 12.0268424,7.98889307 11.864043,8.35591473 C11.8154617,8.46509554 11.746442,8.56741392 11.6568842,8.65697164 C11.6570333,8.65709247 11.6569588,8.65716701 11.6568842,8.65724154 L6.70713677,13.606989 C6.31661248,13.9975133 5.6834475,13.9975133 5.29292321,13.606989 L5.29286323,13.606929 C4.90233894,13.2164047 4.90233894,12.5832398 5.29286323,12.1927155 L9.53557889,7.94999981 L5.29286323,3.70728415 C4.90233894,3.31675986 4.90233894,2.68359488 5.29286323,2.29307059 L5.29292321,2.29301061 C5.6834475,1.90248631 6.31661248,1.90248631 6.70713677,2.29301061 L11.6568842,7.24275807 C11.6569588,7.24283261 11.6570333,7.24290715 11.6571078,7.2429817 Z\"></path>\n  </svg>\n);\n\nexport default BreadCrumbArrowIcon;\n","import { ReactElement } from 'react';\nimport BreadCrumbArrowIcon from '../../icons/ui/BreadCrumbArrowIcon';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport { NavigationModel } from '../../state/Store';\n\nconst BreadCrumbs = () => {\n  const navigation = useStoreState((state) => state.navigation);\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n\n  let components: ReactElement[] = [];\n  let navAt: NavigationModel | undefined = navigation;\n  let depth = 0;\n\n  do {\n    const curDepth = depth;\n    if (depth > 0) {\n      components.push(\n        <BreadCrumbArrowIcon\n          className=\"pl-1 w-5 h-5\"\n          key={`breadcrumb-${curDepth}-arrow`}\n          color=\"#6A6A6A\"\n        />,\n      );\n    }\n\n    components.push(\n      <button\n        className={\n          curDepth === 0\n            ? 'font-medium text-black ml-1 cursor-default whitespace-nowrap'\n            : 'text-circle-gray-500 hover:underline hover:text-black overflow-ellipsis whitespace-nowrap'\n        }\n        key={`breadcrumb-${curDepth}-link`}\n        onClick={() => {\n          curDepth > 0 && navigateBack({ distance: curDepth });\n        }}\n      >\n        {curDepth > 1\n          ? '...'\n          : navAt.component.Label(navAt.props, navigation.props)}\n      </button>,\n    );\n\n    if (navAt.component.Icon) {\n      const Icon = navAt.component.Icon(navAt.props);\n      Icon &&\n        components.push(<div key={`breadcrumb-${curDepth}-icon`}>{Icon}</div>);\n    }\n\n    depth++;\n    navAt = navAt.from;\n  } while (navAt !== undefined);\n\n  components.reverse();\n\n  return (\n    <nav className=\"px-6\">\n      <div className=\"flex items-center\">\n        {components.map((component) => component)}\n      </div>\n    </nav>\n  );\n};\n\nexport default BreadCrumbs;\n","import { ReactElement } from 'react';\nimport InspectorProperty from '../../../atoms/form/InspectorProperty';\nimport ListProperty from '../../../atoms/form/ListProperty';\n\nexport interface CommandSubTypes {\n  [command: string]: {\n    name: string;\n    description?: string;\n    summary?: (command: any) => ReactElement;\n    fields: ReactElement;\n    docsLink: string;\n  };\n}\n\nconst sourceURL = 'https://circleci.com/docs/configuration-reference';\n\nconst commandSubtypes: CommandSubTypes = {\n  run: {\n    name: 'Run a command',\n    description: 'Used for invoking all command-line programs',\n    summary: (command) => (\n      <p className=\"inline\">{command.parameters.command}</p>\n    ),\n    docsLink: `${sourceURL}#run`,\n    fields: (\n      <>\n        <InspectorProperty label=\"Name\" name=\"parameters.name\" />\n        <InspectorProperty\n          label=\"Command\"\n          as=\"textarea\"\n          required\n          name=\"parameters.command\"\n        />\n        <InspectorProperty label=\"Shell\" name=\"parameters.shell\" />\n        <InspectorProperty\n          label=\"Background\"\n          type=\"checkbox\"\n          name=\"parameters.background\"\n        />\n        <InspectorProperty\n          label=\"Working Directory\"\n          name=\"parameters.working_directory\"\n        />\n        <InspectorProperty\n          label=\"No Output Timeout\"\n          name=\"parameters.no_output_timeout\"\n        />\n        <InspectorProperty label=\"When\" as=\"select\" name=\"parameters.when\">\n          <option value=\"undefined\">Select When</option>\n          <option value=\"always\">Always</option>\n          <option value=\"on_success\">On Success</option>\n          <option value=\"on_fail\">On Fail</option>\n        </InspectorProperty>\n      </>\n    ),\n  },\n  checkout: {\n    name: 'Checkout',\n    docsLink: `${sourceURL}#checkout`,\n    description:\n      'A special step used to check out source code to the configured path',\n    fields: <InspectorProperty label=\"Path\" name=\"parameters.path\" />,\n  },\n  add_ssh_keys: {\n    name: 'Add SSH Keys',\n    docsLink: `${sourceURL}#checkout`,\n    description:\n      'A special step used to check out source code to the configured path',\n    fields: (\n      <ListProperty\n        addButton\n        expanded\n        label=\"Fingerprints\"\n        name=\"parameters.fingerprints\"\n      />\n    ),\n  },\n  persist_to_workspace: {\n    name: 'Persist To Workspace',\n    description:\n      'Persist a temporary file to be used by another job in the workflow',\n    docsLink: `${sourceURL}#persisttoworkspace`,\n    fields: (\n      <>\n        <InspectorProperty label=\"Root\" name=\"parameters.root\" required />\n        <ListProperty\n          expanded\n          value={['']}\n          label=\"Paths\"\n          addButton\n          name=\"parameters.paths\"\n          required\n        />\n      </>\n    ),\n  },\n  attach_workspace: {\n    name: 'Attach Workspace',\n    docsLink: `${sourceURL}#attachworkspace`,\n    description: 'Attach the workflow’s workspace to the current container',\n    fields: <InspectorProperty label=\"At\" name=\"parameters.at\" required />,\n  },\n  store_artifacts: {\n    name: 'Store Artifacts',\n    docsLink: `${sourceURL}#storeartifacts`,\n    description: 'Step to store artifacts such as logs and binaries',\n    fields: (\n      <>\n        <InspectorProperty label=\"Path\" name=\"parameters.path\" required />\n        <InspectorProperty\n          label=\"Destination\"\n          name=\"parameters.destination\"\n          required\n        />\n      </>\n    ),\n  },\n  store_test_results: {\n    name: 'Store Test Results',\n    docsLink: `${sourceURL}#storetestresults`,\n    description: 'Upload and store test results for a build',\n    fields: <InspectorProperty label=\"Path\" name=\"parameters.path\" required />,\n  },\n  save_cache: {\n    name: 'Save Cache',\n    docsLink: `${sourceURL}#savecache`,\n    description:\n      'Generates and stores a cache of a file or directory in object storage',\n    fields: (\n      <>\n        <InspectorProperty label=\"Path\" name=\"parameters.path\" required />\n        <InspectorProperty label=\"Key\" name=\"parameters.key\" required />\n        <InspectorProperty label=\"When\" name=\"parameters.when\" as=\"select\">\n          <option value=\"undefined\">Select When</option>\n          <option value=\"always\">Always</option>\n          <option value=\"on_success\">On Success</option>\n          <option value=\"on_fail\">On Fail</option>\n        </InspectorProperty>\n      </>\n    ),\n  },\n  restore_cache: {\n    name: 'Restore Cache',\n    docsLink: `${sourceURL}#restorecache`,\n    description:\n      'Restores a previously saved cache based on a key. Cache needs to have been saved first for this key using Save Cache step.',\n    fields: (\n      <>\n        <InspectorProperty label=\"Path\" name=\"parameters.path\" required />\n        <ListProperty\n          addButton\n          expanded\n          label=\"Keys\"\n          name=\"parameters.keys\"\n          required\n        />\n        <InspectorProperty label=\"When\" name=\"parameters.when\" as=\"select\">\n          <option value=\"undefined\">Select When</option>\n          <option value=\"always\">Always</option>\n          <option value=\"on_success\">On Success</option>\n          <option value=\"on_fail\">On Fail</option>\n        </InspectorProperty>\n      </>\n    ),\n  },\n};\n\nexport { commandSubtypes };\n","import { IconProps } from '../IconProps';\n\nconst Switch = ({ className, color }: IconProps) => (\n  <svg viewBox=\"0 0 24 24\" fill={color} className={className}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M16.3498 10.2985C15.9624 10.6921 15.9674 11.3252 16.361 11.7127C16.7546 12.1001 17.3877 12.0951 17.7752 11.7015L21.7127 7.70152C22.0958 7.31231 22.0958 6.68769 21.7127 6.29848L17.7752 2.29848C17.3877 1.9049 16.7546 1.89991 16.361 2.28735C15.9674 2.67478 15.9624 3.30793 16.3498 3.70152L18.6124 6L5 6C3.34315 6 2 7.34314 2 9V11C2 11.5523 2.44772 12 3 12C3.55228 12 4 11.5523 4 11L4 9C4 8.44771 4.44772 8 5 8L18.6124 8L16.3498 10.2985ZM7.65015 13.7015C8.03759 13.3079 8.0326 12.6748 7.63902 12.2873C7.24543 11.8999 6.61229 11.9049 6.22485 12.2985L2.28735 16.2985C1.90422 16.6877 1.90422 17.3123 2.28735 17.7015L6.22485 21.7015C6.61229 22.0951 7.24543 22.1001 7.63902 21.7127C8.0326 21.3252 8.03759 20.6921 7.65015 20.2985L5.38758 18H19C20.6569 18 22 16.6569 22 15V13C22 12.4477 21.5523 12 21 12C20.4477 12 20 12.4477 20 13V15C20 15.5523 19.5523 16 19 16H5.38758L7.65015 13.7015Z\"\n    />\n  </svg>\n);\n\nexport default Switch;\n","import { FieldArray, useField } from 'formik';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport Switch from '../../../icons/ui/Switch';\nimport { FieldlessInspectorProperty } from './InspectorProperty';\nimport { FieldlessListProperty, ListPropertyProps } from './ListProperty';\n\nexport type MatrixPropertyProps = ListPropertyProps & {\n  namePrefix?: string;\n};\n\nexport const MatrixProperty = ({\n  name,\n  namePrefix,\n  values,\n  label,\n  ...props\n}: MatrixPropertyProps) => {\n  const params = values.parameters;\n  const matrix = useMemo(\n    () => (params?.matrix ? params.matrix.parameters[name] : undefined),\n    [params, name],\n  );\n  const matrixField = useField({\n    ...props,\n    name: namePrefix\n      ? `${namePrefix}.matrix.${name}`\n      : `matrix.parameters.${name}`,\n  });\n  const defaultField = useField({\n    ...props,\n    name: namePrefix ? `${namePrefix}.${name}` : name,\n  });\n  const [inputDef, , helperDef] = defaultField;\n  const [inputMatrix, , helperMatrix] = matrixField;\n  const [isMatrix, setMatrix] = useState(matrix !== undefined);\n\n  const setValue = helperMatrix.setValue;\n\n  useEffect(() => {\n    if (matrix && matrix !== inputMatrix.value) {\n      setValue(matrix);\n    }\n  }, [matrix, setValue, inputMatrix]);\n\n  const callback = useCallback(() => {\n    if (isMatrix) {\n      helperDef.setValue(inputMatrix.value ? inputMatrix.value[0] : '');\n      helperMatrix.setValue(undefined);\n    } else {\n      helperMatrix.setValue([inputDef.value ?? '']);\n      helperDef.setValue(undefined);\n    }\n    setMatrix(!isMatrix);\n  }, [inputDef.value, inputMatrix.value, helperDef, helperMatrix, isMatrix]);\n\n  const switchButton = useMemo(\n    () => (\n      <button\n        type=\"button\"\n        onClick={callback}\n        className=\"hover:bg-circle-gray-400 bg-circle-gray-300 p-1 rounded transition-colors w-8 h-8 ml-2\"\n      >\n        <Switch className=\"w-5 h-5 m-auto\" />\n      </button>\n    ),\n    [callback],\n  );\n\n  return (\n    <>\n      {isMatrix ? (\n        <FieldArray\n          {...matrixField}\n          name={\n            namePrefix\n              ? `${namePrefix}.matrix.parameters.${name}`\n              : `matrix.parameters.${name}`\n          }\n          render={(arrayHelper) => (\n            <FieldlessListProperty\n              {...props}\n              description={props.description}\n              label={label}\n              titleFont=\"font-medium text-sm\"\n              name={\n                namePrefix\n                  ? `${namePrefix}.matrix.parameters.${name}`\n                  : `matrix.parameters.${name}`\n              }\n              arrayHelper={arrayHelper}\n              values={values}\n              expanded\n              addButton\n              pinned={switchButton}\n              field={matrixField}\n            />\n          )}\n        />\n      ) : (\n        <FieldlessInspectorProperty\n          {...props}\n          label={label}\n          labelStyle=\"h-8\"\n          description={props.description}\n          name={namePrefix ? `${namePrefix}.${name}` : name}\n          field={defaultField}\n          pinned={switchButton}\n        />\n      )}\n    </>\n  );\n};\n","import { parameters } from '@circleci/circleci-config-sdk';\nimport { AnyParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport { Fragment } from 'react';\nimport InspectorProperty from '../atoms/form/InspectorProperty';\nimport { MatrixProperty } from '../atoms/form/MatrixProperty';\n\nexport type ParamListContainerProps = {\n  paramList: parameters.CustomParametersList<AnyParameterLiteral>;\n  parent?: string;\n  props?: any;\n  values?: any;\n  matrix?: boolean;\n};\n\ntype ParamInspector = {\n  [K in AnyParameterLiteral]: (\n    parameter: parameters.CustomParameter<AnyParameterLiteral>,\n  ) => any;\n};\n\nconst subtypes: ParamInspector = {\n  integer: (parameter) => {\n    return {\n      className: 'w-full',\n      type: 'number',\n      placeholder: parameter.defaultValue || 'No default value',\n    };\n  },\n  enum: (parameter) => {\n    const enumParam = parameter as parameters.CustomEnumParameter;\n\n    return {\n      as: 'select',\n      className: 'w-full',\n      children: enumParam.enumValues.map((value) => (\n        <option value={value}>{value}</option>\n      )),\n      placeholder: 'No default option',\n    };\n  },\n  string: (parameter) => {\n    return {\n      placeholder: (parameter.defaultValue as string) || 'No default value',\n    };\n  },\n  boolean: (parameter) => {\n    return {\n      type: 'checkbox',\n    };\n  },\n  executor: (parameter) => {\n    return {};\n  },\n  steps: (parameter) => {\n    return {};\n  },\n  env_var_name: (parameter) => {\n    return {};\n  },\n};\n\nconst ParamListContainer = ({\n  paramList,\n  parent,\n  values,\n  matrix,\n  ...props\n}: ParamListContainerProps) => {\n  return (\n    <>\n      {paramList.parameters.map((parameter, index) => {\n        return (\n          <Fragment key={index}>\n            {matrix ? (\n              <MatrixProperty\n                {...props}\n                label={parameter.name}\n                values={values}\n                namePrefix={parent}\n                description={parameter.description}\n                name={parameter.name}\n                {...subtypes[parameter.type](parameter)}\n              />\n            ) : (\n              <InspectorProperty\n                {...props}\n                label={parameter.name}\n                description={parameter.description}\n                values={values}\n                name={parent ? `${parent}.${parameter.name}` : parameter.name}\n                {...subtypes[parameter.type](parameter)}\n              />\n            )}\n          </Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nexport default ParamListContainer;\n","import { useEffect, useState } from 'react';\n\nexport interface TabbedPaneProps {\n  tabs: string[];\n  activeTab?: number;\n  /**\n   * Tracks to see if this component needs to be refreshed\n   * Useful if the tab needs to be updated but this component\n   * is already mounted\n   */\n  id?: string;\n  children: React.ReactNode | React.ReactNode[];\n  onChange?: (index: number) => void;\n  className?: string;\n}\n\nconst TabbedMenu = (props: TabbedPaneProps) => {\n  const tabKey = props.id || 'default';\n  const [id, setId] = useState(props.id);\n  const [activeTab, setActiveTab] = useState({\n    [tabKey]: props.activeTab || 0,\n  });\n\n  useEffect(() => {\n    if (id !== tabKey) {\n      setId(tabKey);\n\n      if (activeTab[tabKey] === undefined) {\n        setActiveTab({ ...activeTab, [tabKey]: props.activeTab || 0 });\n      }\n    }\n  }, [tabKey, id, activeTab, setActiveTab, setId, props.activeTab]);\n\n  return (\n    <div className=\"h-full\">\n      <div className=\"flex border-b border-circle-gray-300 pl-6\">\n        {props.tabs.map((tab, index) => (\n          <button\n            type=\"button\"\n            key={index}\n            className={`text-sm tracking-wide px-3 py-3 font-bold text-center ${\n              index === activeTab[tabKey]\n                ? 'border-circle-blue border-b-4 text-circle-black'\n                : 'text-circle-gray-600 mb-1 hover:text-circle-black'\n            }`}\n            onClick={() => {\n              if (props.onChange) {\n                props.onChange(index);\n              }\n\n              setActiveTab({ ...activeTab, [tabKey]: index });\n            }}\n          >\n            {tab}\n          </button>\n        ))}\n      </div>\n      {Array.isArray(props.children)\n        ? props.children[activeTab[tabKey]]\n        : props.children}\n    </div>\n  );\n};\n\nexport default TabbedMenu;\n","import { reusable } from '@circleci/circleci-config-sdk';\nimport { Form, Formik } from 'formik';\nimport CommandIcon from '../../../icons/components/CommandIcon';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { DataModel, NavigationComponent } from '../../../state/Store';\nimport { Button } from '../../atoms/Button';\nimport { Footer } from '../../atoms/Footer';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport { commandSubtypes } from '../../containers/inspector/subtypes/CommandSubtypes';\nimport ParamListContainer from '../../containers/ParamListContainer';\nimport { SubTypeMenuPageProps } from '../SubTypeMenu';\nimport TabbedMenu from '../TabbedMenu';\n\nexport type StepDefinitionProps = DataModel & {\n  values?: Record<string, object>;\n  editing?: boolean;\n  index?: number;\n  getter?: (values: any) => Array<Record<string, unknown>>;\n  setter?: (values: any, value: any) => void;\n} & SubTypeMenuPageProps<any>;\n\nconst defaultGetter = (values: any) => values.steps;\nconst defaultSetter = (values: any, value: any) => (values.steps = value);\n\nconst StepDefinitionMenu = (props: StepDefinitionProps) => {\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n  const definitions = useStoreState((state) => state.definitions);\n  const subtype = props.subtype || props.values?.name;\n  const valueGetter = props.getter || defaultGetter;\n  const valueSetter = props.setter || defaultSetter;\n\n  const isName = typeof subtype === 'string';\n  const builtIn = isName && subtype in commandSubtypes;\n  const builtInSubtype = builtIn\n    ? commandSubtypes[subtype as string]\n    : undefined;\n  let customCommand: reusable.CustomCommand | undefined;\n\n  if (!builtIn) {\n    customCommand = isName\n      ? Object.values(definitions.commands).find(\n          (command) => (command.value.name = subtype),\n        )?.value\n      : (subtype as reusable.CustomCommand);\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header>\n        <BreadCrumbs />\n        <h1 className=\"ml-6 text-2xl py-2 font-bold\">New Step</h1>\n      </header>\n      <Formik\n        initialValues={props.values || { parameters: undefined }}\n        enableReinitialize={true}\n        onSubmit={(step) => {\n          const name = builtIn ? subtype : customCommand?.name;\n          const parameters = builtIn ? step.parameters : step;\n\n          navigateBack({\n            toast: {\n              label: name ?? '',\n              content: 'saved',\n              status: 'success',\n            },\n            distance: 1,\n            applyValues: (values: any) => {\n              const newStep = {\n                [name as string]: parameters,\n              };\n\n              const value = valueGetter(values) || [];\n\n              if (!props.editing) {\n                valueSetter(values, [...value, newStep]);\n              } else {\n                if (props.index === undefined) {\n                  console.error('Step index was undefined when editing step.');\n\n                  return values;\n                }\n\n                values.steps[props.index] = newStep;\n                value[props.index] = newStep;\n              }\n\n              return values;\n            },\n          });\n        }}\n      >\n        {(formikProps) => (\n          <Form className=\"flex flex-col flex-1\">\n            <TabbedMenu tabs={['PROPERTIES']}>\n              <div className=\"p-6 overflow-y-auto\" style={{ height: 'calc(100vh - 200px)' }}>\n                <button\n                  className=\"p-4 mb-4 w-full border-circle-gray-300 border hover:border-circle-black rounded text-left\"\n                  type=\"button\"\n                  onClick={() => {\n                    props.selectSubtype();\n                  }}\n                  disabled={props.editing}\n                >\n                  <p className=\"font-bold\">\n                    {builtInSubtype\n                      ? builtInSubtype?.name\n                      : customCommand?.name}\n                  </p>\n                  <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                    {builtInSubtype\n                      ? builtInSubtype?.description\n                      : customCommand?.description}\n                  </p>\n                </button>\n                {builtInSubtype\n                  ? builtInSubtype?.fields\n                  : customCommand?.parameters && (\n                      <ParamListContainer\n                        props={formikProps}\n                        paramList={customCommand.parameters}\n                      />\n                    )}\n              </div>\n            </TabbedMenu>\n\n            <span className=\"border-b border-circle-gray-300 mt-auto\" />\n            <Footer>\n              <Button\n                variant=\"secondary\"\n                type=\"button\"\n                onClick={() => {\n                  navigateBack({\n                    distance: 1,\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                // disabled={!formikProps.dirty}\n              >\n                {props.editing ? 'Save Step' : 'Create Step'}\n              </Button>\n            </Footer>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst StepDefinitionMenuNav: NavigationComponent = {\n  Component: StepDefinitionMenu,\n  Label: (props: StepDefinitionProps) => {\n    return <p>{props.editing ? 'Edit' : 'New'} Step</p>;\n  },\n  Icon: (props: StepDefinitionProps) => {\n    return <CommandIcon className=\"w-6 h-8 py-2\" />;\n  },\n};\n\nexport { StepDefinitionMenu, StepDefinitionMenuNav };\n","import { useStoreActions } from '../../../state/Hooks';\nimport { StepDefinitionMenuNav } from '../../menus/definitions/StepDefinitionMenu';\nimport { ListItemChildProps } from './ListProperty';\n\nconst StepListItem = ({ item, index, values }: ListItemChildProps) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const commandName = typeof item === 'string' ? item : Object.keys(item)[0];\n  const commandValues =\n    typeof item === 'object' ? item[commandName] : undefined;\n\n  return (\n    <button\n      className=\"flex-1 cursor-pointer rounded text-left text-circle-black leading-6\"\n      type=\"button\"\n      onClick={() => {\n        navigateTo({\n          component: StepDefinitionMenuNav,\n          props: {\n            editing: true,\n            values: {\n              name: commandName,\n              parameters: commandValues,\n            },\n            index,\n          },\n          values,\n        });\n      }}\n    >\n      {commandValues && 'name' in commandValues\n        ? commandValues.name\n        : commandName}\n    </button>\n  );\n};\n\nexport default StepListItem;\n","import { IconProps } from '../IconProps';\n\nconst icons: Record<string, { path: string; viewBox?: string }> = {\n  docker: {\n    path: 'M21.8083 11.2333C21.2031 10.8548 20.5126 10.6342 19.8 10.5917C19.678 10.5817 19.5554 10.5817 19.4333 10.5917C19.2035 9.82759 18.7218 9.16379 18.0667 8.70833C17.8984 8.59551 17.6733 8.62013 17.5333 8.76667C16.9483 9.5485 16.7295 10.545 16.9333 11.5C16.9482 11.6242 16.9087 11.7487 16.825 11.8417C16.753 11.9222 16.6497 11.9678 16.5417 11.9667H16.1667V9.91667C16.1667 9.68655 15.9801 9.5 15.75 9.5H13.6667V4.91667C13.6667 4.68655 13.4801 4.5 13.25 4.5H10.75C10.5199 4.5 10.3333 4.68655 10.3333 4.91667V7H5.75C5.51988 7 5.33333 7.18655 5.33333 7.41667V9.5H3.25C3.01988 9.5 2.83333 9.68655 2.83333 9.91667V12H2.41667C2.18655 12 2 12.1865 2 12.4167C2 18.8083 6.65833 19.5001 8.66667 19.5001C12.9113 19.5125 16.8417 17.2648 18.9833 13.6C20.1806 13.4421 21.2552 12.7852 21.9417 11.7917C22.053 11.5997 21.9943 11.3543 21.8083 11.2333ZM15.3333 12H13.6667V10.3333H15.3333V12ZM6.16667 12V10.3333H7.83333V12H6.16667ZM8.66667 12V10.3333H10.3333V12H8.66667ZM12.8333 7.83333V9.5H11.1667V7.83333H12.8333ZM11.1667 12V10.3333H12.8333V12H11.1667ZM11.1667 5.33333H12.8333V7H11.1667V5.33333ZM10.3333 9.5H8.66667V7.83333H10.3333V9.5ZM6.16667 7.83333H7.83333V9.5H6.16667V7.83333ZM3.66667 10.3333H5.33333V12H3.66667V10.3333ZM6.16667 16.1667C5.70643 16.1667 5.33333 15.7936 5.33333 15.3333C5.33333 14.8731 5.70643 14.5 6.16667 14.5C6.6269 14.5 7 14.8731 7 15.3333C7 15.7936 6.6269 16.1667 6.16667 16.1667Z',\n  },\n  macos: {\n    path: 'M20 15.8732C19.7014 16.8247 19.2304 17.7762 18.5872 18.7278C17.5994 20.2198 16.6155 20.9657 15.6353 20.9657C15.2601 20.9657 14.7241 20.844 14.0273 20.6004C13.3687 20.3568 12.7906 20.235 12.2929 20.235C11.8258 20.235 11.2821 20.3606 10.6619 20.6118C10.0416 20.8706 9.53625 21 9.14573 21C7.98181 21 6.82939 20.0142 5.68844 18.0427C4.56281 16.0559 4 14.1414 4 12.2993C4 10.5637 4.43264 9.14022 5.29792 8.02885C6.15554 6.93269 7.24288 6.38462 8.55994 6.38462C9.11127 6.38462 9.78894 6.4988 10.593 6.72716C11.3893 6.95553 11.9177 7.06971 12.178 7.06971C12.5226 7.06971 13.0701 6.9403 13.8205 6.68149C14.6016 6.42268 15.2639 6.29327 15.8076 6.29327C16.7188 6.29327 17.5343 6.54067 18.2541 7.03546C18.6523 7.30949 19.0505 7.6901 19.4487 8.17728C18.8437 8.6873 18.4073 9.13642 18.1393 9.52464C17.6415 10.2402 17.3927 11.028 17.3927 11.8882C17.3927 12.8321 17.6569 13.6809 18.1852 14.4345C18.7136 15.1881 19.3185 15.6677 20 15.8732ZM15.6813 2.47957C15.6813 2.94391 15.5702 3.46154 15.3482 4.03245C15.1184 4.60337 14.7624 5.12861 14.28 5.60817C13.8665 6.01923 13.453 6.29327 13.0395 6.43029C12.7562 6.51402 12.358 6.57873 11.8449 6.6244C11.8679 5.49018 12.1665 4.51202 12.7408 3.6899C13.3075 2.8754 14.2647 2.3121 15.6123 2C15.62 2.02284 15.6296 2.0647 15.6411 2.1256C15.6525 2.1865 15.6621 2.22837 15.6698 2.2512C15.6698 2.28165 15.6717 2.31971 15.6755 2.36538C15.6793 2.41106 15.6813 2.44912 15.6813 2.47957Z',\n  },\n  windows: {\n    path: 'M6.58594 0C4.59594 0 2.66498 0.954141 2.58398 0.994141L2.10938 1.23047L1.31836 7.16797C2.39736 6.59597 3.85291 6 5.25391 6C6.14091 6 7.34039 6.49052 8.65039 7.10352L9.5 0.984375C8.427 0.427375 7.42694 0 6.58594 0ZM18.5527 0.589844L16.6602 1.97266C16.6472 1.98266 15.2392 3 13.8242 3C13.3182 3 12.325 2.50905 11.377 1.99805L10.543 8.00781C11.624 8.51781 12.7339 9 13.2539 9C14.8829 9 16.5417 8.32397 17.5938 7.79297L18.5527 0.589844ZM5.25391 8C3.70491 8 1.75047 9.16489 0.980469 9.71289L0 17.0527L1.73438 16.0996C2.29037 15.7936 4.00691 15 5.25391 15C5.72091 15 6.57973 15.4274 7.42773 15.8984L8.36133 9.17969C7.16533 8.60769 5.83791 8 5.25391 8ZM10.2559 10.0781L9.29883 16.9609C10.3668 17.5449 11.3682 18 12.2422 18C14.2782 18 15.929 17.0068 15.998 16.9648L16.4043 16.7168L17.2832 10.127C16.1312 10.591 14.7039 11 13.2539 11C12.4579 11 11.4099 10.6021 10.2559 10.0781Z',\n    viewBox: '0 0 19 18',\n  },\n  machine: {\n    path: 'M2.5 4C2.22386 4 2 4.22386 2 4.5V7.5C2 7.77614 2.22386 8 2.5 8H21.5C21.7761 8 22 7.77614 22 7.5V4.5C22 4.22386 21.7761 4 21.5 4H2.5ZM7 5H5V7H7V5ZM2.5 10C2.22386 10 2 10.2239 2 10.5V13.5C2 13.7761 2.22386 14 2.5 14H21.5C21.7761 14 22 13.7761 22 13.5V10.5C22 10.2239 21.7761 10 21.5 10H2.5ZM7 11H5V13H7V11ZM2 16.5C2 16.2239 2.22386 16 2.5 16H21.5C21.7761 16 22 16.2239 22 16.5V19.5C22 19.7761 21.7761 20 21.5 20H2.5C2.22386 20 2 19.7761 2 19.5V16.5ZM5 17H7V19H5V17Z',\n  },\n};\n\nconst ExecutorIcon = (props: IconProps & { type?: keyof typeof icons }) => {\n  const executor = icons[props.type || 'machine'];\n\n  return (\n    <svg viewBox={executor.viewBox ?? '0 0 24 24'} className={props.className}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        fill={props.color}\n        d={executor.path}\n      />\n    </svg>\n  );\n};\nexport default ExecutorIcon;\n","import { ReusableExecutor } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Reusable';\nimport ExecutorIcon from '../../../icons/components/ExecutorIcon';\n\nconst ExecutorSummary: React.FunctionComponent<{ data: ReusableExecutor }> = (\n  props,\n) => {\n  return (\n    <div className=\"flex flex-row \">\n      <ExecutorIcon className=\"mr-4 w-6 h-6\" />\n      <h3 className=\"my-auto\">{props.data.name}</h3>\n    </div>\n  );\n};\n\nexport default ExecutorSummary;\n","import { executors } from '@circleci/circleci-config-sdk';\nimport { SubTypeMapping } from '../../../../mappings/GenerableMapping';\nimport InspectorProperty from '../../../atoms/form/InspectorProperty';\n\nexport interface ExecutorSubTypes {\n  [type: string]: SubTypeMapping & {\n    resourceClasses: string[];\n  };\n}\n\nconst executorSubtypes: ExecutorSubTypes = {\n  docker: {\n    text: 'Docker',\n    component: executors.DockerExecutor,\n    resourceClasses: [\n      'small',\n      'medium',\n      'medium+',\n      'large',\n      'xlarge',\n      '2xlarge',\n      '2xlarge+',\n    ],\n    fields: <InspectorProperty label=\"Image\" name=\"docker[0].image\" required />,\n    docsLink: 'https://circleci.com/docs/2.0/executor-types/#using-docker',\n    description: 'Steps run in container with provided image',\n  },\n  machine: {\n    text: 'Machine',\n    component: executors.MachineExecutor,\n    resourceClasses: ['medium', 'large', 'xlarge', '2xlarge'],\n    fields: <InspectorProperty label=\"Image\" name=\"machine.image\" required />,\n    docsLink: 'https://circleci.com/docs/2.0/executor-types/#using-machine',\n    description: 'Steps run on Linux Virtual Machine',\n  },\n  macos: {\n    text: 'MacOS',\n    component: executors.MacOSExecutor,\n    resourceClasses: ['medium', 'large'],\n    fields: <InspectorProperty label=\"Xcode\" name=\"macos.xcode\" required />,\n    docsLink: 'https://circleci.com/docs/2.0/executor-types/#using-macos',\n    description:\n      'Steps run on macOS Virtual Machine with specific Xcode version',\n  },\n  windows: {\n    text: 'Windows',\n    component: executors.WindowsExecutor,\n    resourceClasses: [\n      'windows.medium',\n      'windows.large',\n      'windows.xlarge',\n      'windows.2xlarge',\n    ],\n    fields: <InspectorProperty label=\"Image\" name=\"machine.image\" required />,\n    docsLink:\n      'https://circleci.com/docs/2.0/executor-types/#using-the-windows-executor',\n    description: 'Steps run on Windows Virtual Machine',\n  },\n};\n\nexport { executorSubtypes };\n","import { FormikValues } from 'formik';\nimport { DefinitionsModel } from '../../../state/DefinitionStore';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport { executorSubtypes } from './subtypes/ExecutorSubtypes';\n\nconst ExecutorInspector = (\n  props: FormikValues & {\n    definitions: DefinitionsModel;\n    subtype?: string;\n  },\n) => {\n  if (!props.subtype) {\n    return <p>Something went wrong!</p>;\n  }\n\n  return (\n    <>\n      <InspectorProperty label=\"Name\" name=\"name\" required />\n      <InspectorProperty\n        label=\"Description\"\n        name={`description`}\n        as=\"textarea\"\n      />\n      <InspectorProperty\n        label=\"Resource Class\"\n        name=\"resource_class\"\n        required\n        as=\"select\"\n      >\n        {executorSubtypes[props.subtype]?.resourceClasses?.map(\n          (resourceClass: any) => (\n            <option value={resourceClass} key={resourceClass} className='w-min'>\n              {resourceClass}\n            </option>\n          ),\n        )}\n      </InspectorProperty>\n      {executorSubtypes[props.subtype]?.fields}\n      <InspectorProperty label=\"Shell\" name={`shell`} />\n      <InspectorProperty label=\"Working Directory\" name={`working_directory`} />\n    </>\n  );\n};\n\nexport default ExecutorInspector;\n","import { ReusableExecutor } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Reusable';\nimport { SubTypeMapping } from '../../../../mappings/GenerableMapping';\nimport InspectorProperty from '../../../atoms/form/InspectorProperty';\nimport ListProperty from '../../../atoms/form/ListProperty';\n\nexport interface ComponentParameterType {\n  types: string[];\n}\n\nexport interface ParameterTypes {\n  [key: string]: SubTypeMapping;\n}\n\nexport interface ComponentParameterMapping {\n  pipeline: ComponentParameterType;\n  executor: ComponentParameterType;\n  job: ComponentParameterType;\n  command: ComponentParameterType;\n}\n\nconst parameterSubtypes: ParameterTypes = {\n  string: {\n    text: 'String',\n    description: `Sequence of characters that are optionally enlcosed by quotes.\n      Empty strings are treated as falsey while in evaluation of when clauses, and non-empty strings are treated as truthy.`,\n    fields: (\n      <InspectorProperty name=\"default\" as=\"textarea\" label=\"Default Value\" />\n    ),\n  },\n  boolean: {\n    text: 'Boolean',\n    description: `A Boolean represents a true/false value. Such as \"on\" or \"off\".`,\n\n    fields: (\n      <InspectorProperty\n        name=\"default\"\n        as=\"select\"\n        transform={Boolean}\n        label=\"Default Value\"\n      >\n        <option value={undefined}>No default</option>\n        <option value=\"false\">false</option>\n        <option value=\"true\">true</option>\n      </InspectorProperty>\n    ),\n  },\n  integer: {\n    text: 'Integer',\n    description: `A whole number.`,\n    /**\n     * Or have various formats such as having a leading “0x” to signal hexadecimal,\n        a leading “0b” to indicate binary bits (base 2), or have leading “0” to signal an octal base.\n        The use of “:” allows expressing integers in base 60, which is convenient for time/angle values.\n     */\n\n    fields: (\n      <InspectorProperty name=\"default\" type=\"number\" label=\"Default Value\" />\n    ),\n  },\n  enum: {\n    text: 'Enum',\n    description: `Enums allow to define a list of any values,\n       which are useful in the case to enforce that the value must be one from a specific set of string values`,\n\n    fields: (props) => (\n      <>\n        <ListProperty\n          label=\"Values\"\n          name=\"enum\"\n          expanded\n          values={props.values}\n          addButton\n          listItem={(props) => (\n            <input\n              className=\"w-full h-full p-1\"\n              defaultValue={props.item}\n              placeholder=\"Enum Value Option\"\n              onChange={(e) => {\n                props.setValue(e.target.value);\n              }}\n            />\n          )}\n        ></ListProperty>\n        <InspectorProperty\n          className=\"mt-2\"\n          name=\"default\"\n          as=\"select\"\n          label=\"Default Value\"\n        >\n          <option value=\"undefined\">No default</option>\n          {props.values.enum.map((value: string, index: number) => (\n            <option key={index} value={value}>\n              {value}\n            </option>\n          ))}\n        </InspectorProperty>\n      </>\n    ),\n  },\n  executor: {\n    text: 'Executor',\n    fields: (props: { executors: ReusableExecutor[] }) => (\n      <InspectorProperty\n        label=\"Executor\"\n        as=\"select\"\n        name=\"executor.name\"\n        required\n      >\n        {props.executors?.map((executor) => (\n          <option value={executor.name} key={executor.name}>\n            {executor.name}\n          </option>\n        ))}\n      </InspectorProperty>\n    ),\n  },\n  steps: {\n    text: 'Steps',\n    fields: <input type=\"text\" />,\n  },\n  env_var_name: {\n    text: 'Environment Variable Name',\n    fields: <input type=\"text\" />,\n  },\n};\n\nconst componentParametersSubtypes: ComponentParameterMapping = {\n  pipeline: {\n    types: ['string', 'boolean', 'integer', 'enum'],\n  },\n  executor: { types: ['string', 'boolean', 'integer', 'enum'] },\n  job: {\n    types: [\n      'string',\n      'boolean',\n      'integer',\n      'enum',\n      /*'executor',\n      'steps',*/\n      'env_var_name',\n    ],\n  },\n  command: {\n    types: [\n      'string',\n      'boolean',\n      'integer',\n      'enum',\n      /*'steps',*/ 'env_var_name',\n    ],\n  },\n};\n\nexport { componentParametersSubtypes, parameterSubtypes };\n","import { Button } from './Button';\n\nexport interface CardProps {\n  description?: string;\n  title: string;\n  icon?: React.ReactElement;\n  pinned?: React.ReactElement;\n  truncate?: number;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst Card = ({ truncate, description, ...props }: CardProps) => {\n  return (\n    <div className=\"pb-4\">\n      <div className=\"p-4 w-full pr-1 border-circle-gray-300 border rounded text-left  max-h-36 flex flex-row\">\n        <div className=\"flex flex-col flex-1\">\n          <div className=\"flex flex-row\">\n            {props.icon}\n            <p className=\"font-medium\">{props.title}</p>\n          </div>\n          {description && (\n            <p className=\"text-sm mt-2 leading-4 text-circle-gray-500 overflow-ellipsis max-h-32 overflow-hidden\">\n              {truncate && description.length > truncate\n                ? description?.slice(0, truncate) + '...'\n                : description}\n            </p>\n          )}\n        </div>\n        <div className=\"flex flex-col px-2\">\n          {props.pinned && (\n            <div className=\"ml-auto z-10 rounded \">{props.pinned}</div>\n          )}\n          <div className=\"flex-1 flex\">\n            <Button\n              margin=\"0\"\n              type=\"button\"\n              variant=\"secondary\"\n              className={'my-auto'}\n              onClick={props.onClick}\n            >\n              Select\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import ExecutorIcon from '../../../../icons/components/ExecutorIcon';\nimport { NavigationComponent } from '../../../../state/Store';\nimport Card from '../../../atoms/Card';\nimport BreadCrumbs from '../../../containers/BreadCrumbs';\nimport { executorSubtypes } from '../../../containers/inspector/subtypes/ExecutorSubtypes';\nimport { SubTypeSelectPageProps } from '../../SubTypeMenu';\n\nconst ExecutorTypePage = (props: SubTypeSelectPageProps<string>) => {\n  return (\n    <div>\n      <header>\n        <BreadCrumbs />\n        <div className=\"ml-6 flex py-3\">\n          <ExecutorIcon className=\"w-8 h-8 p-1 pl-0 mr-1\"></ExecutorIcon>\n          <h1 className=\"text-2xl font-bold\">New Executor</h1>\n        </div>\n        <div className=\"flex border-b border-circle-gray-300 pl-6\">\n          <div\n            className={`text-sm tracking-wide px-3 py-3 font-bold text-center border-b-4 border-black text-circle-black`}\n          >\n            TYPE\n          </div>\n        </div>\n      </header>\n      <div className=\"p-6\">\n        {Object.keys(executorSubtypes).map((subtype) => (\n          <Card\n            key={subtype}\n            icon={<ExecutorIcon className=\"w-6 mr-2\" type={subtype} />}\n            description={executorSubtypes[subtype].description}\n            title={executorSubtypes[subtype].text}\n            onClick={() => {\n              props.setSubtype(subtype);\n            }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst ExecutorTypePageNav: NavigationComponent = {\n  Component: ExecutorTypePage,\n  Label: (props: SubTypeSelectPageProps<string>) => <p>New Executor</p>,\n  Icon: (props: SubTypeSelectPageProps<string>) => (\n    <ExecutorIcon className=\"w-6 h-8 py-2\" />\n  ),\n};\n\nexport default ExecutorTypePageNav;\n","import { IconProps } from '../IconProps';\n\nconst JobIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 24 24\" className={props.className} fill={props.color}>\n    <path d=\"M12.458388,3 C17.7284428,3 22,7.25487688 22,12.5009275 C22,17.7469783 17.7286827,22 12.458388,22 C9.24779218,22 6.40748266,20.4195905 4.67890641,17.9975161 L4.51046025,18 C5.52650577,18 6.4784703,17.7267799 7.29630887,17.2500927 C8.5797622,18.6332003 10.4175246,19.5 12.4581919,19.5 C16.3422622,19.5 19.4895397,16.3667214 19.4895397,12.5010252 C19.4895397,8.63532901 16.3417423,5.5 12.4581919,5.5 C10.4182181,5.5 8.58077831,6.36686635 7.29682565,7.75083018 C6.52574446,7.30040157 5.63375878,7.03136434 4.68109466,7.00257493 C6.40892952,4.58026814 9.24869152,3 12.458388,3 Z M12.4596333,9.00000001 C14.4011972,9.00000001 15.9748954,10.5675188 15.9748954,12.5003076 C15.9748954,14.4330964 14.4012513,16 12.4596333,16 C11.2973265,16 10.266758,15.437833 9.62706371,14.5716975 C9.88962048,13.931837 10.0334728,13.2326478 10.0334728,12.5 C10.0334728,11.767055 9.88950371,11.0675956 9.62819064,10.4281361 C10.2669454,9.56228031 11.2974499,9.00000001 12.4596333,9.00000001 Z M4.50987191,10 C5.89718507,10 7.0209205,11.1200937 7.0209205,12.5002929 C7.0209205,13.8804921 5.89718507,15 4.50987191,15 C3.12373543,15 2,13.8804921 2,12.5002929 C2,11.1200937 3.12373543,10 4.50987191,10 Z\" />\n  </svg>\n);\n\nexport default JobIcon;\n","import { IconProps } from '../IconProps';\n\nconst JobOnHoldIcon = (props: IconProps) => (\n  <svg\n    role=\"img\"\n    focusable=\"false\"\n    viewBox=\"0 0 24 24\"\n    aria-label=\"Status On Hold\"\n    fill=\"#8e62bd\"\n    className={props.className}\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M12,2 C6.48,2 2,6.48 2,12 C2,17.52 6.48,22 12,22 C17.52,22 22,17.52 22,12 C22,6.48 17.52,2 12,2 Z M11,16 L9,16 L9,8 L11,8 L11,16 Z M15,16 L13,16 L13,8 L15,8 L15,16 Z\"\n    ></path>\n  </svg>\n);\n\nexport default JobOnHoldIcon;\n","import { IconProps } from '../IconProps';\n\nconst MinusIcon = (props: IconProps & { filled: boolean }) => (\n  <svg viewBox=\"0 0 24 24\" className={props.className}>\n    {props.filled ? (\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22ZM16 13C16.5523 13 17 12.5523 17 12C17 11.4477 16.5523 11 16 11H7.99997C7.44769 11 6.99997 11.4477 6.99997 12C6.99997 12.5523 7.44769 13 7.99997 13H16Z\"\n        fill={props.color}\n      />\n    ) : (\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.02942 12C4.02942 7.58172 7.61114 4 12.0294 4C16.4477 4 20.0294 7.58172 20.0294 12C20.0294 16.4183 16.4477 20 12.0294 20C7.61114 20 4.02942 16.4183 4.02942 12ZM12.0294 2C6.50657 2 2.02942 6.47715 2.02942 12C2.02942 17.5228 6.50657 22 12.0294 22C17.5523 22 22.0294 17.5228 22.0294 12C22.0294 6.47715 17.5523 2 12.0294 2ZM16.022 13.0294C16.5743 13.0335 17.0253 12.589 17.0294 12.0368C17.0334 11.4845 16.589 11.0335 16.0367 11.0294L8.03675 10.9706C7.48448 10.9665 7.03348 11.4109 7.02942 11.9632C7.02535 12.5155 7.46976 12.9665 8.02203 12.9705L16.022 13.0294Z\"\n        fill={props.color}\n      />\n    )}\n  </svg>\n);\n\nexport default MinusIcon;\n","import { IconProps } from '../IconProps';\n\nconst PlusIcon = (props: IconProps & { filled: boolean }) => (\n  <svg\n    viewBox={`0 0 ${props.filled ? '20 20' : '16 16'}`}\n    className={props.className}\n  >\n    {props.filled ? (\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11 9V6C11 5.44772 10.5523 5 10 5C9.44771 5 9 5.44772 9 6V9H6C5.44772 9 5 9.44771 5 10C5 10.5523 5.44772 11 6 11H9V14C9 14.5523 9.44771 15 10 15C10.5523 15 11 14.5523 11 14V11H14C14.5523 11 15 10.5523 15 10C15 9.44771 14.5523 9 14 9H11ZM10 0C15.52 0 20 4.48 20 10C20 15.52 15.52 20 10 20C4.48 20 0 15.52 0 10C0 4.48 4.48 0 10 0Z\"\n        fill={props.color}\n      />\n    ) : (\n      <g>\n        <mask\n          id=\"mask0_266_8047\"\n          maskUnits=\"userSpaceOnUse\"\n          x=\"0\"\n          y=\"0\"\n          width=\"16\"\n          height=\"16\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M8.66764 7.33357V5.33357C8.66764 4.96538 8.36916 4.66691 8.00097 4.66691C7.63278 4.66691 7.33431 4.96538 7.33431 5.33357V7.33357H5.33431C4.96612 7.33357 4.66764 7.63205 4.66764 8.00024C4.66764 8.36843 4.96612 8.66691 5.33431 8.66691H7.33431V10.6669C7.33431 11.0351 7.63278 11.3336 8.00097 11.3336C8.36916 11.3336 8.66764 11.0351 8.66764 10.6669V8.66691H10.6676C11.0358 8.66691 11.3343 8.36843 11.3343 8.00024C11.3343 7.63205 11.0358 7.33357 10.6676 7.33357H8.66764ZM8.00065 1.8335C4.59679 1.8335 1.83398 4.59631 1.83398 8.00016C1.83398 11.404 4.59679 14.1668 8.00065 14.1668C11.4045 14.1668 14.1673 11.404 14.1673 8.00016C14.1673 4.59631 11.4045 1.8335 8.00065 1.8335ZM0.833984 8.00016C0.833984 4.04402 4.04451 0.833496 8.00065 0.833496C11.9568 0.833496 15.1673 4.04402 15.1673 8.00016C15.1673 11.9563 11.9568 15.1668 8.00065 15.1668C4.04451 15.1668 0.833984 11.9563 0.833984 8.00016Z\"\n            fill=\"white\"\n          />\n        </mask>\n        <g mask=\"url(#mask0_266_8047)\">\n          <rect width=\"16\" height=\"16\" fill={props.color} />\n        </g>\n      </g>\n    )}\n  </svg>\n);\n\nexport default PlusIcon;\n","import { useStoreActions } from '../../../state/Hooks';\nimport { StepDefinitionMenuNav } from '../../menus/definitions/StepDefinitionMenu';\nimport { ListItemChildProps } from './ListProperty';\n\nexport type AdjacentStepLiteral = 'pre-steps' | 'post-steps';\n\nconst AdjacentStepListItem = ({\n  item,\n  index,\n  values,\n  type,\n}: ListItemChildProps & { type: AdjacentStepLiteral }) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const commandName = Object.keys(item)[0];\n  const commandValues = item[commandName];\n\n  return (\n    <button\n      className=\"flex-1 cursor-pointer text-left rounded text-circle-black leading-6\"\n      type=\"button\"\n      onClick={() => {\n        navigateTo({\n          component: StepDefinitionMenuNav,\n          props: {\n            editing: true,\n            values: {\n              name: commandName,\n              parameters: commandValues,\n            },\n            getter: (values: any) => values.parameters[type],\n            setter: (values: any, value: any) =>\n              (values.parameters[type] = value),\n            index,\n          },\n          values: {\n            ...values,\n          },\n        });\n      }}\n    >\n      {commandName}\n    </button>\n  );\n};\n\nexport default AdjacentStepListItem;\n","import { IconProps } from '../IconProps';\n\nconst BranchIcon = (props: IconProps) => (\n  <svg className={props.className} viewBox=\"0 0 13 18\" fill={props.color}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1.83268 3.58329C1.83268 2.89294 2.39233 2.33329 3.08268 2.33329C3.77304 2.33329 4.33268 2.89294 4.33268 3.58329C4.33268 4.27365 3.77304 4.83329 3.08268 4.83329C2.39233 4.83329 1.83268 4.27365 1.83268 3.58329ZM3.91602 6.37918C5.1208 6.02061 5.99935 4.90455 5.99935 3.58329C5.99935 1.97246 4.69351 0.666626 3.08268 0.666626C1.47185 0.666626 0.166016 1.97246 0.166016 3.58329C0.166016 4.90455 1.04456 6.02061 2.24935 6.37918V11.6207C1.04456 11.9793 0.166016 13.0954 0.166016 14.4166C0.166016 16.0275 1.47185 17.3333 3.08268 17.3333C4.69351 17.3333 5.99935 16.0275 5.99935 14.4166C5.99935 13.0954 5.1208 11.9793 3.91602 11.6207V10.9244C4.14011 10.6913 4.80727 10.25 6.41602 10.25C8.71437 10.25 10.0623 9.25052 10.4588 8.07974C11.7268 7.76287 12.666 6.6161 12.666 5.24996C12.666 3.63913 11.3602 2.33329 9.74935 2.33329C8.13852 2.33329 6.83268 3.63913 6.83268 5.24996C6.83268 6.45658 7.56539 7.49206 8.61014 7.93576C8.29175 8.2588 7.65721 8.58329 6.41602 8.58329C5.40781 8.58329 4.57259 8.73647 3.91602 8.99525V6.37918ZM9.74935 6.49996C10.4397 6.49996 10.9993 5.94032 10.9993 5.24996C10.9993 4.5596 10.4397 3.99996 9.74935 3.99996C9.05899 3.99996 8.49935 4.5596 8.49935 5.24996C8.49935 5.94032 9.05899 6.49996 9.74935 6.49996ZM3.08424 13.1666C3.08372 13.1666 3.0832 13.1666 3.08268 13.1666C3.08216 13.1666 3.08164 13.1666 3.08112 13.1666C2.39148 13.1675 1.83268 13.7268 1.83268 14.4166C1.83268 15.107 2.39233 15.6666 3.08268 15.6666C3.77304 15.6666 4.33268 15.107 4.33268 14.4166C4.33268 13.7268 3.77388 13.1675 3.08424 13.1666Z\" fill=\"#161616\"/>\n  </svg>\n);\n\nexport default BranchIcon;\n","import { IconProps } from '../IconProps';\n\nconst EditIcon = (props: IconProps) => (\n  <svg className={props.className} viewBox=\"0 0 14 14\" fill={props.color}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M11.1752 0.528514C10.9148 0.268165 10.4927 0.268165 10.2324 0.528514L8.34677 2.41413C8.08642 2.67448 8.08642 3.09659 8.34677 3.35694L10.7038 5.71396C10.9641 5.97431 11.3862 5.97431 11.6466 5.71396L13.5322 3.82835C13.7926 3.568 13.7926 3.14589 13.5322 2.88554L11.1752 0.528514ZM9.76098 2.88554L10.7038 1.94273L12.118 3.35694L11.1752 4.29975L9.76098 2.88554ZM7.86481 3.83886C7.60446 3.57851 7.18235 3.57851 6.922 3.83886L1.07881 9.68205C0.956429 9.80443 0.886438 9.96961 0.883634 10.1427L0.844814 12.5385C0.841889 12.719 0.912315 12.893 1.03999 13.0207C1.16766 13.1484 1.34166 13.2188 1.52219 13.2159L3.91804 13.1771C4.09109 13.1743 4.25626 13.1043 4.37864 12.9819L10.2218 7.13869C10.4822 6.87834 10.4822 6.45623 10.2218 6.19588L7.86481 3.83886ZM2.21242 10.4341L7.39341 5.25307L8.80762 6.66728L3.62663 11.8483L2.18913 11.8716L2.21242 10.4341Z\"\n    />\n  </svg>\n);\n\nexport default EditIcon;\n","import { IconProps } from '../IconProps';\n\nconst FilterIcon = (props: IconProps) => (\n  <svg className={props.className} viewBox=\"0 0 20 20\" fill={props.color}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M5.99862 10.9004L1.53617 4.76452C0.0940592 2.78162 1.51051 0 3.96238 0L16.0348 0C18.4867 0 19.9032 2.78161 18.4611 4.76451L16.8436 3.58817C17.3243 2.9272 16.8521 2 16.0348 2L3.96238 2C3.14509 2 2.67294 2.9272 3.15364 3.58817L7.99862 10.25V16.447C7.99862 17.1743 8.75032 17.6583 9.41242 17.3574L11.4124 16.4483C11.7694 16.286 11.9986 15.93 11.9986 15.5379V10.25L16.8436 3.58817L18.4611 4.76451L13.9986 10.9004V15.5379C13.9986 16.7143 13.311 17.7822 12.24 18.269L10.24 19.1781C8.25373 20.081 5.99862 18.6289 5.99862 16.447V10.9004Z\"\n      fill=\"#343434\"\n    />\n  </svg>\n);\n\nexport default FilterIcon;\n","import { IconProps } from '../IconProps';\n\nconst TagIcon = (props: IconProps) => (\n  <svg className={props.className} viewBox=\"0 0 18 18\" fill=\"none\">\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M10.9101 0.910704C11.2356 0.585267 11.7632 0.585267 12.0886 0.910704L17.0886 5.9107C17.4141 6.23614 17.4141 6.76378 17.0886 7.08922L7.08863 17.0892C6.8503 17.3275 6.49187 17.3988 6.18047 17.2699C5.86907 17.1409 5.66604 16.837 5.66604 16.5V12.3333H1.49937C1.16232 12.3333 0.858458 12.1303 0.729474 11.8189C0.60049 11.5075 0.671786 11.149 0.910118 10.9107L10.9101 0.910704ZM3.51122 10.6666H6.49937C6.95961 10.6666 7.33271 11.0397 7.33271 11.5V14.4881L15.3209 6.49996L11.4994 2.67847L3.51122 10.6666Z\"\n      fill=\"#161616\"\n    />\n  </svg>\n);\n\nexport default TagIcon;\n","import { FilterParameter } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types';\nimport { WorkflowJob } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow';\nimport { Form, Formik, FormikValues } from 'formik';\nimport { useStoreActions } from '../../../state/Hooks';\nimport { NavigationComponent } from '../../../state/Store';\nimport { Button } from '../../atoms/Button';\nimport ListProperty, {\n  ListItemChildProps,\n} from '../../atoms/form/ListProperty';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport TabbedMenu from '../TabbedMenu';\n\ntype WorkflowJobMenuProps = {\n  job: WorkflowJob;\n  values: any;\n};\n\ntype FilterListProps = {\n  type: 'Only' | 'Ignore';\n} & FormikValues;\n\nconst FilterItem = ({ item, setValue }: ListItemChildProps) => {\n  return (\n    <textarea\n      className=\"w-full pl-1 py-1\"\n      rows={1}\n      defaultValue={item}\n      placeholder={'Filter string or regex'}\n      onChange={(e) => {\n        setValue(e.target.value);\n      }}\n    />\n  );\n};\n\n/**\n * Create structure of branch filters,\n * and ensure there are at least one empty value\n * per target.\n */\nconst getInitialValues = (values: {\n  parameters?: { filters?: FilterParameter };\n}) => {\n  const current = values.parameters?.filters;\n  const branches = current?.branches;\n  const tags = current?.tags;\n\n  const initial = {\n    branches: {\n      only: branches?.only || [''],\n      ignore: branches?.ignore || [''],\n    },\n    tags: { only: tags?.only || [''], ignore: tags?.ignore || [''] },\n  };\n\n  return initial;\n};\n\nconst FilterList = ({ type, values, target }: FilterListProps) => {\n  return (\n    <ListProperty\n      label={type}\n      name={`${target}.${type.toLowerCase()}`}\n      values={values}\n      expanded\n      required\n      listItem={FilterItem}\n      addButton\n    />\n  );\n};\n\nconst StagedFilterMenu = ({ job, values }: WorkflowJobMenuProps) => {\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n  const tabs = ['BRANCHES', 'TAGS'];\n\n  return (\n    <div className=\"h-full bg-white flex flex-col overflow-y-auto\">\n      <header>\n        <BreadCrumbs />\n        {/* <WorkflowIcon className=\"w-8 h-8 p-1 mr-1\" /> */}\n        <div className=\"pl-6 pr-5\">\n          <h1 className=\"pt-3 text-2xl font-bold\">Filters</h1>\n          <div className=\" py-3 flex text-sm text-circle-gray-500\">\n            A map defining rules for execution on specific branches or tags\n          </div>\n        </div>\n      </header>\n      <Formik\n        initialValues={getInitialValues(values)}\n        enableReinitialize\n        onSubmit={(values) => {\n          navigateBack({\n            distance: 1,\n            applyValues: (currentValues) => {\n              const strip = (list: string[]) => {\n                const filtered = list.filter((item) => item);\n\n                return filtered.length > 0 ? filtered : undefined;\n              };\n              const branches = {\n                only: strip(values.branches.only),\n                ignore: strip(values.branches.ignore),\n              };\n              const hasBranches =\n                branches.only?.length || branches.ignore?.length;\n              const tags = {\n                only: strip(values.tags.only),\n                ignore: strip(values.tags.ignore),\n              };\n              const hasTags = tags.only?.length || tags.ignore?.length;\n\n              return {\n                ...currentValues,\n                parameters: {\n                  ...currentValues.parameters,\n                  filters:\n                    hasBranches || hasTags\n                      ? {\n                          branches: hasBranches ? branches : undefined,\n                          tags: hasTags ? tags : undefined,\n                        }\n                      : undefined,\n                },\n              };\n            },\n          });\n        }}\n      >\n        {(formikProps) => (\n          <Form className=\"flex flex-col flex-1\">\n            <TabbedMenu tabs={tabs}>\n              {['branches', 'tags'].map((target) => (\n                <div className=\"p-6\" key={target}>\n                  <FilterList\n                    type=\"Only\"\n                    {...formikProps}\n                    target={target}\n                  ></FilterList>\n                  <FilterList\n                    type=\"Ignore\"\n                    {...formikProps}\n                    target={target}\n                  ></FilterList>\n                </div>\n              ))}\n            </TabbedMenu>\n\n            <div className=\"border-t border-circle-gray-300 p-6 flex\">\n              <Button\n                type=\"submit\"\n                className=\"ml-auto\"\n                variant=\"primary\"\n                // disabled={!formikProps.dirty}\n              >\n                Save Filter\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst StagedFilterMenuNav: NavigationComponent = {\n  Component: StagedFilterMenu,\n  Label: (props: { expanded: boolean[] }) => <p>Filters</p>,\n};\n\nexport default StagedFilterMenuNav;\n","import { WorkflowJob } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow';\nimport BranchIcon from '../../icons/ui/BranchIcon';\nimport EditIcon from '../../icons/ui/EditIcon';\nimport FilterIcon from '../../icons/ui/FilterIcon';\nimport TagIcon from '../../icons/ui/TagIcon';\nimport { useStoreActions } from '../../state/Hooks';\nimport { Empty } from '../atoms/Empty';\nimport StagedFilterMenuNav from '../menus/stage/StagedFilterMenu';\nimport CollapsibleList from './CollapsibleList';\n\nconst combineFilters = (filters: any, condition: 'ignore' | 'only') => {\n  const branches = filters?.branches;\n  const tags = filters?.tags;\n  const branchesCon =\n    branches && condition in branches ? branches[condition] : [];\n  const tagsCon = tags && condition in tags ? tags[condition] : [];\n\n  return { branches: branchesCon, tags: tagsCon };\n};\n\nexport const FilterTargetList = ({\n  values,\n  target,\n}: {\n  values: string[];\n  target: 'branches' | 'tags';\n}) => {\n  const Icon = target === 'branches' ? BranchIcon : TagIcon;\n\n  return (\n    <>\n      {values?.map((value) => (\n        <div\n          key={value}\n          className=\"w-full mt-2 pl-2 py-1 px-3\n        bg-white border border-circle-gray-300 hover:border-circle-black rounded flex flex-row h-10\"\n        >\n          <Icon className=\"w-3 ml-1 mr-2 my-auto\" />\n          <p className=\"flex-1 overflow-ellipsis overflow-hidden whitespace-nowrap\">\n            {value}\n          </p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport const FilterConditionList = (props: {\n  filters: any;\n  condition: 'Ignore' | 'Only';\n}) => {\n  const type = props.condition.toLowerCase() as 'ignore' | 'only';\n  const values = combineFilters(props.filters, type);\n\n  return (\n    <>\n      {(values.branches?.length > 0 ||\n        values.tags?.length > 0) && (\n          <div className=\"pl-4 pt-1\">\n            <h3 className=\"text-sm font-medium\">{props.condition}</h3>\n            <FilterTargetList values={values.branches} target=\"branches\" />\n            <FilterTargetList values={values.tags} target=\"tags\" />\n          </div>\n        )}\n    </>\n  );\n};\n\nexport const FilterPreviewContainer = ({\n  values,\n  source,\n}: {\n  values: any;\n  source: WorkflowJob;\n}) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const filters = values.parameters?.filters;\n  const tagSum =\n    (filters?.tags?.only?.length || 0) + (filters?.tags?.ignore?.length || 0);\n  const branchSum =\n    (filters?.branches?.only?.length || 0) +\n    (filters?.branches?.ignore?.length || 0);\n  const filterSum = tagSum + branchSum;\n\n  return (\n    <CollapsibleList\n      title={'Filters'}\n      expanded\n      titleFont=\"font-medium text-sm\"\n      className=\"mb-4\"\n      pinned={\n        <button\n          type=\"button\"\n          className={`bg-circle-gray-300 transition-colors h-8 w-8 rounded hover:bg-circle-gray-400 ml-auto`}\n          onClick={() => {\n            navigateTo({\n              component: StagedFilterMenuNav,\n              props: { source, values },\n              values,\n            });\n          }}\n        >\n          <EditIcon className=\"m-auto w-4\"></EditIcon>\n        </button>\n      }\n    >\n      {filterSum > 0 ? (\n        <>\n          <FilterConditionList filters={filters} condition=\"Only\" />\n          <FilterConditionList filters={filters} condition=\"Ignore\" />\n        </>\n      ) : (\n        <Empty\n          label=\"No Filters Yet\"\n          Logo={FilterIcon}\n          description=\"Edit filters by clicking the button above\"\n        />\n      )}\n    </CollapsibleList>\n  );\n};\n","import React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport { DefinitionSubscriptions } from '../../state/DefinitionStore';\nimport { NavigationComponent } from '../../state/Store';\n\nexport type SubTypeMenuProps<T> = {\n  typePage: NavigationComponent;\n  typeProps?: object;\n  menuPage: (props: SubTypeMenuPageProps<T> & any) => JSX.Element;\n  menuProps?: object;\n  passThrough?: any;\n};\nexport type SubTypeReference<T> = T;\nexport type SubTypeSelectPageProps<T> = {\n  setSubtype: (subtype: SubTypeReference<T>) => void;\n};\nexport type SubTypeMenuPageProps<T> = {\n  subtype: SubTypeReference<T>;\n  selectSubtype: () => void;\n};\nexport interface SelectedSubType<T> {\n  current?: SubTypeReference<T>;\n  previous?: SubTypeReference<T>;\n}\n\nconst SubTypeMenu = <SubTypeRef,>(\n  props: SubTypeMenuProps<SubTypeRef> & { nonce: string },\n) => {\n  const [subtype, setSubtype] = useState<\n    Record<string, SelectedSubType<SubTypeRef>>\n  >({});\n\n  const current = subtype[props.nonce]?.current;\n\n  const updateSubtype = (selected: SubTypeReference<SubTypeRef>) => {\n    setSubtype({\n      ...subtype,\n      [props.nonce]: {\n        current: selected,\n        previous: current,\n      },\n    });\n  };\n\n  const navBack = () => {\n    setSubtype({\n      ...subtype,\n      [props.nonce]: {\n        current: undefined,\n        previous: current,\n      },\n    });\n  };\n\n  const SubTypeSelectPage = props.typePage.Component as React.FunctionComponent<\n    SubTypeSelectPageProps<SubTypeRef>\n  >;\n  const SubTypeMenuPage = props.menuPage;\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {current ? (\n        <SubTypeMenuPage\n          subtype={current}\n          selectSubtype={navBack}\n          {...props.menuProps}\n        />\n      ) : (\n        <SubTypeSelectPage {...props.typeProps} setSubtype={updateSubtype} />\n      )}\n    </div>\n  );\n};\n\nconst SubTypeMenuNav: NavigationComponent = {\n  Component: SubTypeMenu,\n  Label: <SubTypeRef,>(props: SubTypeMenuProps<SubTypeRef>) =>\n    props.typePage.Label(props),\n  Icon: <SubTypeRef,>(props: SubTypeMenuProps<SubTypeRef>) =>\n    props.typePage.Icon ? props.typePage.Icon(props) : null,\n};\n\nexport const navSubTypeMenu = <SubTypeRef,>(\n  props: SubTypeMenuProps<SubTypeRef>,\n  values?: any,\n  subscriptions?: DefinitionSubscriptions[],\n) => {\n  return {\n    component: SubTypeMenuNav,\n    props: { ...props, nonce: v4() },\n    values,\n    subscriptions,\n  };\n};\n","import { orb, parsers, reusable } from '@circleci/circleci-config-sdk';\nimport { WorkflowJob } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow';\nimport { Form, Formik } from 'formik';\nimport CommandIcon from '../../../icons/components/CommandIcon';\nimport JobIcon from '../../../icons/components/JobIcon';\nimport { definitionsAsArray } from '../../../state/DefinitionStore';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { NavigationComponent } from '../../../state/Store';\nimport AddButton from '../../atoms/AddButton';\nimport { Button } from '../../atoms/Button';\nimport { Empty } from '../../atoms/Empty';\nimport { Footer } from '../../atoms/Footer';\nimport AdjacentStepListItem from '../../atoms/form/AdjacentStepListItem';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport ListProperty, {\n  ListItemChildProps,\n} from '../../atoms/form/ListProperty';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport { FilterPreviewContainer } from '../../containers/FilterPreviewContainer';\nimport ParamListContainer from '../../containers/ParamListContainer';\nimport { StepDefinitionMenu } from '../definitions/StepDefinitionMenu';\nimport StepTypePageNav from '../definitions/subtypes/StepTypePage';\nimport { navSubTypeMenu } from '../SubTypeMenu';\nimport TabbedMenu from '../TabbedMenu';\n\ntype WorkflowJobMenuProps = {\n  source: WorkflowJob;\n  values: any;\n  id: string;\n};\n\nconst ContextItem = ({ item, setValue }: ListItemChildProps) => {\n  return (\n    <input\n      className=\"w-full h-full p-1\"\n      defaultValue={item}\n      placeholder={'Context name'}\n      onChange={(e) => {\n        setValue(e.target.value);\n      }}\n    />\n  );\n};\n\nconst AdjacentSteps = ({\n  values,\n  label,\n  type,\n}: {\n  values: any;\n  label: string;\n  type: 'pre-steps' | 'post-steps';\n}) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n\n  return (\n    <ListProperty\n      label={label}\n      name={`parameters.${type}`}\n      className=\"pb-4\"\n      expanded\n      titleFont=\"font-medium text-sm\"\n      required\n      listItem={(input) => (\n        <AdjacentStepListItem {...input} values={values} type={type} />\n      )}\n      empty={\n        <Empty\n          label={`No ${label} Yet`}\n          Logo={CommandIcon}\n          description=\"Add a step by clicking the button above\"\n        />\n      }\n      pinned={\n        <AddButton\n          className=\"ml-auto flex\"\n          onClick={() => {\n            navigateTo(\n              navSubTypeMenu(\n                {\n                  typePage: StepTypePageNav,\n                  menuPage: StepDefinitionMenu,\n                  menuProps: {\n                    getter: (values: any) =>\n                      values.parameters && values.parameters[type],\n                    setter: (values: any, value: any) =>\n                      values.parameters\n                        ? (values.parameters[type] = value)\n                        : (values.parameters = { [type]: value }),\n                  },\n                },\n                values,\n              ),\n            );\n          }}\n        />\n      }\n    />\n  );\n};\n\nconst StagedJobMenu = ({ source, values, id }: WorkflowJobMenuProps) => {\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n  const definitions = useStoreState((state) => state.definitions);\n\n  const updateWorkflowElement = useStoreActions(\n    (actions) => actions.updateWorkflowElement,\n  );\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header>\n        <BreadCrumbs />\n        <h1 className=\"ml-6 text-2xl py-2 font-bold\">Edit Staged Job</h1>\n      </header>\n      <Formik\n        initialValues={{\n          parameters: {\n            name: '',\n            context: [''],\n            matrix: {\n              parameters: {},\n            },\n\n            ...values.parameters,\n          },\n        }}\n        enableReinitialize\n        onSubmit={(values) => {\n          const parameters = values.parameters;\n          const context = parameters.context\n            ? parameters.context.filter(Boolean)\n            : (undefined as string[] | undefined);\n          const matrix = parameters.matrix;\n          const newParameters = {\n            ...parameters,\n            context: context && context.length > 0 ? context : undefined,\n            matrix:\n              parameters.matrix?.parameters &&\n              Object.keys(matrix.parameters).length > 0\n                ? matrix\n                : undefined,\n          };\n\n          const update = parsers.parseWorkflowJob(\n            source.name,\n            Object.assign(\n              {},\n              ...Object.entries(newParameters).map(([key, value]) =>\n                value ? { [key]: value } : undefined,\n              ),\n            ),\n            definitionsAsArray(definitions.jobs),\n            definitionsAsArray(definitions.orbs),\n          );\n\n          updateWorkflowElement({\n            id,\n            data: update,\n          });\n\n          navigateBack({\n            distance: 1,\n          });\n        }}\n      >\n        {(formikProps) => (\n          <Form className=\"flex flex-col flex-1\">\n            <TabbedMenu tabs={['PROPERTIES']}>\n              <div\n                className=\"p-6 overflow-y-auto\"\n                style={{ height: 'calc(100vh - 230px)' }}\n              >\n                <InspectorProperty type=\"button\" name=\"name\" label=\"Source Job\">\n                  <div\n                    className=\"w-full mb-2 p-2 text-sm  text-left text-circle-black \n                  bg-circle-gray-200 border border-circle-gray-300 rounded flex flex-row\"\n                  >\n                    <JobIcon className=\"ml-1 mr-2 w-5 h-5\" />\n                    <p className=\"leading-5\">{source.name}</p>\n                  </div>\n                </InspectorProperty>\n                <InspectorProperty\n                  name=\"parameters.name\"\n                  label=\"Name\"\n                  placeholder={source.name}\n                />\n                <ListProperty\n                  label=\"Contexts\"\n                  titleFont=\"font-medium text-sm\"\n                  name=\"parameters.context\"\n                  values={values}\n                  expanded\n                  required\n                  listItem={ContextItem}\n                  addButton\n                />\n                <FilterPreviewContainer source={source} values={values} />\n                {(source.job instanceof reusable.ParameterizedJob ||\n                  source.job instanceof orb.OrbRef) && (\n                  <ParamListContainer\n                    parent=\"parameters\"\n                    values={values}\n                    matrix\n                    paramList={source.job.parameters}\n                 />\n                )}\n                <AdjacentSteps\n                  values={values}\n                  label=\"Pre-steps\"\n                  type=\"pre-steps\"\n                />\n                <AdjacentSteps\n                  values={values}\n                  label=\"Post-steps\"\n                  type=\"post-steps\"\n                />\n              </div>\n            </TabbedMenu>\n            <span className=\"border-b border-circle-gray-300 mt-auto\" />\n            <Footer>\n              <Button\n                variant=\"secondary\"\n                type=\"button\"\n                onClick={() => {\n                  navigateBack({\n                    distance: 1,\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                // disabled={!formikProps.dirty}\n              >\n                Save\n              </Button>\n            </Footer>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst StagedJobMenuNav: NavigationComponent = {\n  Component: StagedJobMenu,\n  Label: (props: WorkflowJobMenuProps) => {\n    return <p>{props.values.parameters?.name || props.source.name}</p>;\n  },\n  Icon: (props: WorkflowJobMenuProps) => {\n    return <JobIcon className=\"w-6 h-8 py-2\" />;\n  },\n};\n\nexport { StagedJobMenu, StagedJobMenuNav };\n","import { IconProps } from '../IconProps';\n\nconst ParameterIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 18 18\" className={props.className} fill={props.color}>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4.649 3.084A1 1 0 015.163 4.4 13.95 13.95 0 004 10c0 1.993.416 3.886 1.164 5.6a1 1 0 01-1.832.8A15.95 15.95 0 012 10c0-2.274.475-4.44 1.332-6.4a1 1 0 011.317-.516zM12.96 7a3 3 0 00-2.342 1.126l-.328.41-.111-.279A2 2 0 008.323 7H8a1 1 0 000 2h.323l.532 1.33-1.035 1.295a1 1 0 01-.781.375H7a1 1 0 100 2h.039a3 3 0 002.342-1.126l.328-.41.111.279A2 2 0 0011.677 14H12a1 1 0 100-2h-.323l-.532-1.33 1.035-1.295A1 1 0 0112.961 9H13a1 1 0 100-2h-.039zm1.874-2.6a1 1 0 011.833-.8A15.95 15.95 0 0118 10c0 2.274-.475 4.44-1.332 6.4a1 1 0 11-1.832-.8A13.949 13.949 0 0016 10c0-1.993-.416-3.886-1.165-5.6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport default ParameterIcon;\n","import { parameters, parsers } from '@circleci/circleci-config-sdk';\nimport { CustomParameter } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport ParameterSummary from '../../components/atoms/summaries/ParameterSummary';\nimport ParameterInspector from '../../components/containers/inspector/ParameterInspector';\nimport { parameterSubtypes } from '../../components/containers/inspector/subtypes/ParameterSubtypes';\nimport ParameterTypePageNav from '../../components/menus/definitions/subtypes/ParameterTypePage';\nimport ParameterIcon from '../../icons/components/ParameterIcon';\nimport { DefinitionAction } from '../../state/DefinitionStore';\nimport InspectableMapping from '../InspectableMapping';\n\nexport const ParameterMapping: InspectableMapping<\n  CustomParameter<PipelineParameterLiteral>\n> = {\n  key: 'parameters',\n  name: {\n    singular: 'Parameter',\n    plural: 'Parameters',\n  },\n  defaults: {\n    integer: {\n      name: 'new_integer_parameter',\n    },\n    boolean: {\n      name: 'new_boolean_parameter',\n    },\n    string: {\n      name: 'new_string_parameter',\n    },\n    enum: {\n      name: 'new_enum_parameter',\n      enum: [''],\n    },\n  },\n  transform: ({ name, ...values }) => {\n    return parsers.parseParameter(\n      values,\n      name,\n    ) as CustomParameter<PipelineParameterLiteral>;\n  },\n  store: {\n    add: (actions) => actions.define_parameters,\n    update: (actions) => actions.update_parameters,\n    remove: (actions) => actions.delete_parameters,\n  },\n  subtypes: {\n    component: ParameterTypePageNav,\n    getSubtype: (parameter) => parameter.type,\n    definitions: parameterSubtypes,\n  },\n  components: {\n    icon: ParameterIcon,\n    summary: ParameterSummary,\n    inspector: ParameterInspector,\n  },\n  docsInfo: {\n    description: 'A %s is used by other components to expand functionality.',\n    link: 'https://circleci.com/docs/reusing-config/#using-the-parameters-declaration',\n  },\n};\n\nexport type ParameterAction = DefinitionAction<\n  parameters.CustomParameter<PipelineParameterLiteral>\n>;\n\nexport type ParameterActions = {\n  define_parameters: ParameterAction;\n  update_parameters: ParameterAction;\n  delete_parameters: ParameterAction;\n  cleanup_parameters: ParameterAction;\n};\n","import ParameterIcon from '../../../../icons/components/ParameterIcon';\nimport InspectableMapping from '../../../../mappings/InspectableMapping';\nimport { NavigationComponent } from '../../../../state/Store';\nimport Card from '../../../atoms/Card';\nimport BreadCrumbs from '../../../containers/BreadCrumbs';\nimport {\n  componentParametersSubtypes,\n  parameterSubtypes,\n} from '../../../containers/inspector/subtypes/ParameterSubtypes';\nimport { SubTypeSelectPageProps } from '../../SubTypeMenu';\n\nconst ParameterTypePage = (\n  props: SubTypeSelectPageProps<string> & { component: InspectableMapping },\n) => {\n  const parameters =\n    props.component?.parameters || componentParametersSubtypes.pipeline;\n\n  return (\n    <div>\n      <header>\n        {/* <WorkflowIcon className=\"w-6 h-6 mr-1\" color=\"#6A6A6A\" /> */}\n        <BreadCrumbs />\n        <div className=\"ml-6 flex py-3\">\n          <ParameterIcon className=\"w-8 h-8 p-1 pl-0 mr-1\"></ParameterIcon>\n          <h1 className=\"text-2xl font-bold\">New Parameter</h1>\n        </div>\n        <div className=\"flex border-b border-circle-gray-300 pl-6\">\n          <div\n            className={`text-sm tracking-wide px-3 py-3 font-bold text-center 'border-black border-b-4 border-black text-circle-black`}\n          >\n            TYPE\n          </div>\n        </div>\n      </header>\n      <div className=\"p-6\">\n        {parameters?.types &&\n          parameters.types.map((subtype: any) => (\n            <Card\n              key={subtype}\n              description={parameterSubtypes[subtype].description}\n              title={parameterSubtypes[subtype].text}\n              onClick={() => {\n                props.setSubtype(subtype);\n              }}\n              pinned={\n                <div>\n                  {parameterSubtypes[subtype].docsLink && (\n                    <a\n                      className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n                      href={parameterSubtypes[subtype].docsLink}\n                      target=\"circleci_docs\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                      }}\n                    >\n                      Learn More\n                    </a>\n                  )}\n                </div>\n              }\n            />\n            // <InspectorProperty name={command} label={commandProps[command].text} as=\"card\" />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nconst ParameterTypePageNav: NavigationComponent = {\n  Component: ParameterTypePage,\n  Label: (props: SubTypeSelectPageProps<string>) => <p>New Parameter</p>,\n  Icon: (props: SubTypeSelectPageProps<string>) => (\n    <ParameterIcon className=\"w-6 h-8 py-2\" />\n  ),\n};\n\nexport default ParameterTypePageNav;\n","import { CustomParameter } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport ParameterIcon from '../../../icons/components/ParameterIcon';\n\nconst ParameterSummary: React.FunctionComponent<{\n  data: CustomParameter<PipelineParameterLiteral>;\n}> = (props) => {\n  return (\n    <div className=\"flex flex-row\">\n      <ParameterIcon className=\"mr-4 w-6 h-6\" />\n      <h3 className=\"my-auto\">{props.data.name}</h3>\n    </div>\n  );\n};\n\nexport default ParameterSummary;\n","import { FormikValues } from 'formik';\nimport { DefinitionsModel } from '../../../state/DefinitionStore';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport { parameterSubtypes } from './subtypes/ParameterSubtypes';\n\nconst ParameterInspector = (\n  props: FormikValues & {\n    definitions: DefinitionsModel;\n    subtype?: string;\n  },\n) => {\n  const fields = props.subtype\n    ? parameterSubtypes[props.subtype]?.fields\n    : undefined;\n\n  return (\n    <div>\n      <InspectorProperty\n        name=\"type\"\n        label=\"Type\"\n        hidden\n        value={props.subtype}\n      />\n      <InspectorProperty name=\"name\" label=\"Name\" required />\n      <InspectorProperty name=\"description\" label=\"Description\" as=\"textarea\" />\n      {fields && (typeof fields === 'function' ? fields(props) : fields)}\n    </div>\n  );\n};\n\nexport default ParameterInspector;\n","import { FieldArray, useField } from 'formik';\nimport ParameterIcon from '../../icons/components/ParameterIcon';\nimport { ParameterMapping } from '../../mappings/components/ParameterMapping';\nimport GenerableMapping from '../../mappings/GenerableMapping';\nimport { useStoreActions } from '../../state/Hooks';\nimport { Button } from '../atoms/Button';\nimport { Empty } from '../atoms/Empty';\nimport {\n  InspectorDefinitionMenu,\n  InspectorDefinitionMenuNav,\n} from '../menus/definitions/InspectorDefinitionMenu';\nimport { navSubTypeMenu } from '../menus/SubTypeMenu';\nconst ParameterContainer = (props: {\n  dataMapping: GenerableMapping;\n  values: any;\n}) => {\n  const [field] = useField(props.values.parameters);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const entries: [string, unknown][] =\n    props.values.parameters && Object.entries(props.values.parameters);\n\n  return (\n    <FieldArray\n      {...field}\n      name=\"parameters\"\n      render={(_) => (\n        <div className=\"p-6 flex flex-col\">\n          {entries?.length > 0 ? (\n            entries.map(([name, parameter]: [string, any], index) => (\n              <button\n                key={name}\n                aria-label=\"Parameter\"\n                className=\"p-4 mb-4 w-full border-circle-gray-300 border hover:border-circle-black rounded text-left\"\n                onClick={() => {\n                  navigateTo({\n                    component: InspectorDefinitionMenuNav,\n                    props: {\n                      dataType: ParameterMapping,\n                      passBackKey: 'parameters',\n                      index,\n                      subtype: parameter.type,\n                      editing: true,\n                      values: { name, ...parameter },\n                      source: props.values.parameters\n                        ? Object.keys(props.values.parameters)\n                        : [],\n                    },\n                    values: props.values,\n                  });\n                }}\n              >\n                <div className=\"flex\">\n                  <p className=\"font-bold\">{name}</p>\n                </div>\n                {parameter.description && (\n                  <p className=\"text-sm mt-1 leading-4 whitespace-pre-wrap text-circle-gray-500\">\n                    {parameter.description}\n                  </p>\n                )}\n                {parameter.default ? (\n                  <p className=\"text-sm mt-1 leading-4 whitespace-pre-wrap text-circle-gray-500\">\n                    {parameter.default}\n                  </p>\n                ) : (\n                  <p className=\"text-sm mt-1 leading-4 whitespace-pre-wrap text-circle-gray-500\">\n                    Required\n                  </p>\n                )}\n              </button>\n            ))\n          ) : (\n            <Empty\n              label=\"No Parameters Yet\"\n              Logo={ParameterIcon}\n              description=\"Add a parameter by clicking the button above \n              to implement dynamic functionality.\"\n            />\n          )}\n          <Button\n            aria-label=\"Add Parameter\"\n            type=\"button\"\n            variant=\"primary\"\n            className=\"mx-auto my-4\"\n            onClick={() => {\n              if (!ParameterMapping.subtypes) {\n                return;\n              }\n\n              navigateTo(\n                navSubTypeMenu(\n                  {\n                    typePage: ParameterMapping.subtypes.component,\n                    typeProps: { component: props.dataMapping },\n                    menuPage: InspectorDefinitionMenu,\n                    menuProps: {\n                      dataType: ParameterMapping,\n                      passBackKey: 'parameters',\n                      index: -1,\n                      source: props.values.parameters\n                        ? Object.keys(props.values.parameters)\n                        : [],\n                    },\n                  },\n                  props.values,\n                ),\n              );\n            }}\n          >\n            Add Parameter\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default ParameterContainer;\n","import { Form, Formik } from 'formik';\nimport EditIcon from '../../../icons/ui/EditIcon';\nimport InspectableMapping from '../../../mappings/InspectableMapping';\nimport {\n  DefinitionsModel,\n  DefinitionSubscriptions,\n} from '../../../state/DefinitionStore';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { DataModel, NavigationComponent } from '../../../state/Store';\nimport { Button } from '../../atoms/Button';\nimport { Footer } from '../../atoms/Footer';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport ParameterContainer from '../../containers/ParametersContainer';\nimport { SubTypeMenuPageProps } from '../SubTypeMenu';\nimport TabbedMenu from '../TabbedMenu';\n\ntype InspectorDefinitionProps = DataModel & {\n  values: Record<string, object>;\n  dependencies: Array<DefinitionSubscriptions>;\n  editing?: boolean;\n  passBackKey?: string;\n  activeTab?: number;\n  index: number;\n  source?: Array<any>;\n  toast: boolean;\n  // The source of generable\n  // modifying this would not be good\n  readonly data?: any;\n} & SubTypeMenuPageProps<any>;\n\nconst getDependencies = (\n  store: DefinitionsModel,\n  mapping: InspectableMapping,\n  name: string,\n): number => {\n  const definition = store[mapping.key][name];\n\n  if (!definition || !definition.observers) {\n    return 0;\n  }\n\n  let count = 0;\n\n  Object.values(definition.observers).forEach((observer) => {\n    count += Object.values(observer).reduce((acc, value) => acc + value);\n  });\n\n  return count;\n};\n\n/**\n * The menu that allows for inspection (creation and editing) of a definition\n * This is one of the more complex pieces of the VCE, as it handles\n * the abstraction of all components registered with a InspectableMapping,\n * also handles parameterized components.\n *\n * The inspector menu opens from \"New\" button in the Definition\n * container, or from the \"Definition\" atom, which edits an\n * existing definition.\n *\n * Related:\n * For Orb definitions see OrbDefinitionsMenu.tsx\n * For Step definitions see StepDefinitionMenu.tsx\n */\nconst InspectorDefinitionMenu = (props: InspectorDefinitionProps) => {\n  const definitions = useStoreState((state) => state.definitions);\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n  const setGuideStep = useStoreActions((actions) => actions.setGuideStep);\n  const guideStep = useStoreState((state) => state.guideStep);\n  const dataMapping = props.dataType;\n  const submitToStore = useStoreActions(\n    (actions) =>\n      (props.editing\n        ? dataMapping?.store.update(actions)\n        : dataMapping?.store.add(actions)) || actions.error,\n  );\n  const deleteDefinition = useStoreActions(\n    (actions) => dataMapping?.store.remove(actions) || actions.error,\n  );\n\n  // TODO: useMemo for these functions?\n  const getIcon = (className: string) => {\n    let iconComponent = dataMapping?.components.icon;\n\n    if (iconComponent) {\n      let Icon = iconComponent;\n\n      return <Icon className={className} type={props.subtype} />;\n    }\n  };\n\n  const getValues = () => {\n    if (props.values) {\n      return props.values;\n    }\n\n    return props.subtype\n      ? dataMapping?.defaults[props.subtype]\n      : dataMapping?.defaults;\n  };\n\n  const tabs = ['PROPERTIES'];\n  const unpacked = getValues();\n  const subtype = props.subtype || dataMapping?.subtypes?.getSubtype(unpacked);\n\n  if (dataMapping?.parameters) {\n    tabs.push('PARAMETERS');\n  }\n\n  const updateConfirmation = useStoreActions(\n    (actions) => actions.triggerConfirmation,\n  );\n  return (\n    <div\n      aria-label=\"Inspector Definition Menu\"\n      className=\"h-full flex flex-col\"\n    >\n      <header>\n        <BreadCrumbs />\n        <div className=\"ml-6 py-3 flex\">\n          {getIcon('w-8 h-8 p-1 pl-0 mr-1')}\n          <h1 className=\"text-2xl font-bold\">\n            {props.editing ? 'Edit' : 'New'} {dataMapping?.name.singular}\n          </h1>\n        </div>\n      </header>\n      {dataMapping && (\n        <Formik\n          initialValues={{\n            ...unpacked,\n          }}\n          validateOnBlur\n          validate={(values) => {\n            // TODO: define error type\n            const errors: any = {};\n            const source = props.source ?? definitions[dataMapping.key];\n            const dupIndex = Object.values(source).findIndex(\n              (d) =>\n                (typeof d === 'string' ? d : d.value.name) ===\n                values.name.trim(),\n            );\n\n            if (dupIndex !== -1 && dupIndex !== props.index) {\n              errors.name = 'Name is already in use';\n            }\n\n            return errors;\n          }}\n          enableReinitialize\n          onSubmit={(values) => {\n            if (!props.passBackKey) {\n              const newDefinition = dataMapping.transform(values, definitions);\n              const submitData = props.editing\n                ? { old: unpacked, new: newDefinition }\n                : newDefinition;\n\n              submitToStore(submitData);\n            }\n\n            if (\n              !props.editing &&\n              guideStep &&\n              dataMapping.guide?.step === guideStep\n            ) {\n              setGuideStep(guideStep + 1);\n            }\n\n            navigateBack({\n              toast: {\n                label: values.name.trim(),\n                content: 'saved',\n                status: 'success',\n              },\n              distance: 1,\n              applyValues: (parentValues) => {\n                if (props.passBackKey) {\n                  const { name, ...args } = values;\n                  const nestedValues = {\n                    ...parentValues[props.passBackKey],\n                    [name]: args,\n                  };\n\n                  if (\n                    name !== props.values?.name &&\n                    typeof props.values?.name === 'string'\n                  ) {\n                    delete nestedValues[props.values.name];\n                  }\n\n                  return {\n                    ...parentValues,\n                    [props.passBackKey]: nestedValues,\n                  };\n                }\n              },\n            });\n          }}\n        >\n          {(formikProps) => (\n            <Form className=\"flex flex-col flex-1\">\n              <TabbedMenu tabs={tabs} activeTab={props.activeTab || 0}>\n                <div\n                  className=\"p-6 overflow-y-auto\"\n                  style={{ height: 'calc(100vh - 220px)' }}\n                >\n                  {dataMapping.subtypes &&\n                    (props.editing ? (\n                      <div className=\"p-4 mb-4 w-full border-circle-gray-300 border hover:border-circle-black rounded text-left\">\n                        <p className=\"font-medium\">\n                          {dataMapping.subtypes.definitions[subtype]?.text}\n                        </p>\n                        <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                          {\n                            dataMapping.subtypes.definitions[subtype]\n                              ?.description\n                          }\n                        </p>\n                      </div>\n                    ) : (\n                      <button\n                        className=\"p-4 mb-4 w-full border-circle-gray-300 border hover:border-circle-black rounded text-left\"\n                        type=\"button\"\n                        onClick={() => {\n                          props.selectSubtype();\n                        }}\n                      >\n                        <div className=\"w-full flex flex-row\">\n                          <p className=\"font-medium\">\n                            {dataMapping.subtypes.definitions[subtype]?.text}\n                          </p>\n                          <EditIcon className=\"ml-auto flex w-4\" />\n                        </div>\n                        <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                          {\n                            dataMapping.subtypes.definitions[subtype]\n                              ?.description\n                          }\n                        </p>\n                      </button>\n                    ))}\n                  {dataMapping.components.inspector({\n                    ...formikProps,\n                    definitions,\n                    subtype,\n                    data: props.data,\n                  })}\n                </div>\n                {dataMapping.parameters && (\n                  <div\n                    style={{ height: 'calc(100vh - 220px)' }}\n                    className=\"overflow-y-auto\"\n                  >\n                    <ParameterContainer\n                      dataMapping={dataMapping}\n                      values={formikProps.values}\n                    />\n                  </div>\n                )}\n              </TabbedMenu>\n\n              <Footer>\n                {props.editing && (\n                  <Button\n                    variant=\"dangerous\"\n                    type=\"button\"\n                    onClick={() => {\n                      updateConfirmation({\n                        modalDialogue: 'delete',\n                        labels: [\n                          dataMapping.name.singular,\n                          props.data.name,\n                          getDependencies(\n                            definitions,\n                            dataMapping,\n                            props.data.name,\n                          ),\n                        ],\n                        onConfirm: () => {\n                          deleteDefinition(props.data);\n                          navigateBack({\n                            distance: 1,\n                          });\n                        },\n                      });\n                    }}\n                  >\n                    Delete\n                  </Button>\n                )}\n\n                <Button\n                  variant=\"secondary\"\n                  type=\"button\"\n                  onClick={() => {\n                    navigateBack({\n                      distance: 1,\n                    });\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  variant=\"primary\"\n                  type=\"submit\"\n                  // disabled={!formikProps.dirty}\n                >\n                  {props.editing ? 'Save' : 'Create'}\n                </Button>\n              </Footer>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </div>\n  );\n};\n\nconst InspectorDefinitionMenuNav: NavigationComponent = {\n  Component: InspectorDefinitionMenu,\n  Label: (props: InspectorDefinitionProps) => {\n    return (\n      <p>\n        {props.editing ? 'Edit' : 'New'} {props.dataType?.name.singular}\n      </p>\n    );\n  },\n  Icon: (props: InspectorDefinitionProps) => {\n    let iconComponent = props.dataType?.components.icon;\n\n    if (!iconComponent) {\n      return null;\n    }\n\n    let DefinitionIcon = iconComponent;\n\n    return <DefinitionIcon className=\"w-6 h-8 py-2\" />;\n  },\n};\n\nexport { InspectorDefinitionMenuNav, InspectorDefinitionMenu };\n","import * as CircleCI from '@circleci/circleci-config-sdk';\nimport { Generable } from '@circleci/circleci-config-sdk/dist/src/lib/Components';\nimport { AnyParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport {\n  OrbImport,\n  OrbRef,\n} from '@circleci/circleci-config-sdk/dist/src/lib/Orb';\nimport InspectableMapping from '../../mappings/InspectableMapping';\nimport { useStoreActions } from '../../state/Hooks';\nimport { InspectorDefinitionMenuNav } from '../menus/definitions/InspectorDefinitionMenu';\n\nexport const flattenGenerable = (data: Generable, nested?: boolean) => {\n  // this generated object should always have a single key\n  const generated = data.generate();\n\n  if (typeof generated === 'string') {\n    return { name: generated };\n  }\n\n  /**\n   * Flattens the keys of the input.\n   * Will nest under parameters if nested option is set\n   * For nested example, see WorkflowStage\n   */\n  return Object.entries(generated as Record<string, any>).map(([key, value]) =>\n    nested\n      ? {\n          name: key,\n          parameters: value,\n        }\n      : {\n          name: key,\n          ...value,\n        },\n  )[0];\n};\n\nconst Definition = (props: {\n  data: Generable | OrbRef<AnyParameterLiteral>;\n  type: InspectableMapping;\n  index: number;\n  orb?: OrbImport;\n}) => {\n  const Summary = props.type.components.summary;\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const setDragging = useStoreActions((actions) => actions.setDragging);\n\n  return (\n    <button\n      className=\"w-full mb-2 p-4 py-2 cursor-pointer text-left text-circle-black \n      bg-white border border-circle-gray-300 rounded-md2 hover:border-gray-700 text-base\"\n      draggable=\"true\"\n      onDragStart={(e) => {\n        const type = props.type;\n\n        if (type?.dragTarget) {\n          setDragging({ dataType: type, data: props.data });\n        }\n      }}\n      onClick={(e) => {\n        if (props.data instanceof CircleCI.orb.OrbRef) {\n          return;\n        }\n\n        const flattened = flattenGenerable(props.data);\n\n        navigateTo({\n          component: InspectorDefinitionMenuNav,\n          props: {\n            data: props.data,\n            editing: true,\n            values: flattened,\n            dataType: props.type,\n            index: props.index,\n          },\n        });\n      }}\n    >\n      <Summary data={props.data} />\n    </button>\n  );\n};\n\nexport default Definition;\n","import { Job, types, workflow } from '@circleci/circleci-config-sdk';\nimport { WorkflowJob } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow';\nimport React, { useRef } from 'react';\nimport { Handle, isNode, NodeProps, Position } from 'react-flow-renderer';\nimport JobIcon from '../../../icons/components/JobIcon';\nimport JobOnHoldIcon from '../../../icons/components/JobOnHoldIcon';\nimport DeleteItemIcon from '../../../icons/ui/DeleteItemIcon';\nimport MinusIcon from '../../../icons/ui/MinusIcon';\nimport PlusIcon from '../../../icons/ui/PlusIcon';\nimport { JobMapping } from '../../../mappings/components/JobMapping';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { StagedJobMenuNav } from '../../menus/stage/StagedJobMenu';\nimport { flattenGenerable } from '../Definition';\n\nconst formatPattern = (pattern: string) => {\n  if (!pattern.startsWith('^')) {\n    pattern = `^${pattern}`;\n  }\n  if (!pattern.endsWith('$')) {\n    pattern = `${pattern}$`;\n  }\n\n  return pattern;\n};\n\nconst ConnectorIcon = (props: { filled: boolean; subtraction?: boolean }) => {\n  return (\n    <>\n      {props.subtraction ? (\n        <MinusIcon\n          filled={props.filled}\n          color=\"rgb(150, 0, 8)\"\n          className=\"bg-white rounded-full w-full border border-white\"\n        />\n      ) : (\n        <PlusIcon\n          filled={props.filled}\n          color=\"rgb(0, 120, 202)\"\n          className=\"bg-white rounded-full w-full border border-white\"\n        />\n      )}\n    </>\n  );\n};\n\nconst JobNode: React.FunctionComponent<\n  NodeProps & { data: workflow.WorkflowJob }\n> = (props) => {\n  const elements = useStoreState(\n    (state) =>\n      state.definitions.workflows[state.selectedWorkflowId].value.elements,\n  );\n  const dragging = useStoreState((state) => state.dragging);\n  // const setWorkflowElements = useStoreActions(\n  //   (actions) => actions.setWorkflowElements,\n  // );\n  const updateJob = useStoreActions((actions) => actions.update_jobs);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const setConnecting = useStoreActions((actions) => actions.setConnecting);\n  const toolbox = useStoreState((state) => state.previewToolbox);\n  const selectedWorkflow = useStoreState((state) => state.selectedWorkflowId);\n  const altAction = useStoreState((state) => state.altAction);\n  const removeWorkflowElement = useStoreActions(\n    (actions) => actions.removeWorkflowElement,\n  );\n\n  const connecting = useStoreState((state) => state.connecting);\n  const updateConnecting = useStoreActions(\n    (actions) => actions.updateConnecting,\n  );\n\n  const updateWorkflowJob = (\n    workflowJob: workflow.WorkflowJob,\n    applyToData: {\n      job?: Job;\n      parameters?: types.workflow.WorkflowJobParameters;\n    },\n  ) =>\n    elements.map((element) =>\n      isNode(element) && element.data.job.name === workflowJob.job.name\n        ? { ...element, data: { ...workflowJob, ...applyToData } }\n        : element,\n    );\n  const [hovering, setHovering] = React.useState({\n    handles: false,\n    node: false,\n    requiredBy: false,\n    remove: false,\n    requires: false,\n  });\n\n  let filtered = false;\n\n  const workflowJob = props.data as WorkflowJob;\n  const filters = workflowJob.parameters?.filters;\n\n  if (filters && toolbox.filter.preview && filters[toolbox.filter.type]) {\n    const jobFilter = filters[toolbox.filter.type];\n    const sample = toolbox.filter.pattern;\n\n    try {\n      const ignoreFilter = jobFilter?.ignore?.some((pattern) =>\n        sample.match(formatPattern(pattern)),\n      );\n      const onlyFilter = jobFilter?.only\n        ? jobFilter?.only?.some((pattern) =>\n          sample.match(formatPattern(pattern)),\n        )\n        : true;\n\n      filtered = ignoreFilter || !onlyFilter;\n    } catch (e) {\n      console.warn('Invalid regex pattern');\n    }\n  } else if (toolbox.filter.type === 'tags') {\n    filtered = true;\n  }\n\n  const jobIcon = (isApproval: boolean = false) => {\n    const classNameValue = 'w-5 mr-2';\n    if (isApproval) {\n      return <JobOnHoldIcon className={classNameValue} />;\n    } else {\n      return <JobIcon className={classNameValue} />;\n    }\n  };\n\n  const viewJobProperties = () => {\n    navigateTo({\n      component: StagedJobMenuNav,\n      props: {\n        source: workflowJob,\n        values: flattenGenerable(workflowJob, true),\n        id: props.id,\n        overrideRoot: selectedWorkflow,\n      },\n      origin: true,\n    });\n  };\n\n  const trackHovering = (\n    entering: string[],\n    leaving: string[],\n    postEnter?: () => void,\n    postLeave?: () => void,\n  ) => {\n    return {\n      onMouseEnter: () => {\n        setHovering(\n          entering.reduce(\n            (previous, n) => ({ ...previous, [n]: true }),\n            hovering,\n          ),\n        );\n        postEnter && postEnter();\n      },\n      onMouseLeave: () => {\n        setHovering(\n          leaving.reduce(\n            (previous, n) => ({ ...previous, [n]: false }),\n            hovering,\n          ),\n        );\n        postLeave && postLeave();\n      },\n    };\n  };\n\n  const nodeRef = useRef(null);\n  const startConnecting =\n    (side: 'source' | 'target') => (e: React.DragEvent<HTMLButtonElement>) => {\n      setConnecting({\n        ref: nodeRef,\n        id: {\n          connectionNodeId: props.id,\n          connectionHandleType: side,\n          connectionHandleId: `${props.id}_${side}`,\n        },\n        name: props.data.parameters?.name || props.data.name,\n      });\n      e.preventDefault();\n    };\n\n  return (\n    <div\n      className={`p-8 flex flex-row cursor-default`}\n      {...trackHovering(\n        ['handles'],\n        ['handles', 'node', 'requires', 'requiredBy'],\n        () => {\n          const startType = connecting?.start?.id.connectionHandleType;\n          const side = startType === 'source' ? 'target' : 'source';\n          updateConnecting({\n            ref: nodeRef,\n            id: {\n              connectionNodeId: props.id,\n              connectionHandleType: side,\n              connectionHandleId: `${props.id}_${side}`,\n            },\n            name: props.data.parameters?.name || props.data.name,\n          });\n        },\n        () => {\n          updateConnecting(undefined);\n        },\n      )}\n      onDragOver={(e) => {\n        if (dragging && dragging.dataType?.dragTarget === JobMapping.key) {\n          e.preventDefault();\n        }\n      }}\n      onDrop={(e) => {\n        if (\n          dragging &&\n          dragging.dataType?.dragTarget === JobMapping.key &&\n          dragging.dataType.applyToNode\n        ) {\n          const applyToData = dragging.dataType.applyToNode(\n            dragging.data,\n            props.data,\n          );\n\n          if (JobMapping.key in applyToData) {\n            updateJob({ old: props.data.job, new: applyToData.job });\n          }\n\n          if ('parameters' in applyToData) {\n            updateWorkflowJob(props.data, applyToData);\n          }\n        }\n      }}\n    >\n      <button\n        className={`opacity-${hovering['handles'] && !hovering['node'] && !connecting?.start\n          ? 100\n          : 0\n          } transition-opacity duration-300 w-4 h-4 my-auto mr-5`}\n        id={`${props.id}_source`}\n        {...trackHovering(['requires', 'handles'], ['requires'])}\n        draggable\n        onDragStart={startConnecting('target')}\n      >\n        <ConnectorIcon filled={hovering['requires']} subtraction={altAction} />\n      </button>\n\n      <div\n        className={`p-2 bg-white node flex flex-row text-black rounded-md border cursor-pointer ${filtered ? 'bg-gray-200 opacity-60' : 'opacity-100'\n          }\n        ${(hovering['node'] && !hovering['remove']) ||\n            (hovering['handles'] && connecting?.start)\n            ? 'border-circle-blue'\n            : 'border-circle-gray-300'\n          }`}\n        ref={nodeRef}\n        {...trackHovering(['node'], ['node'])}\n      >\n        <button className=\"flex w-full\" onClick={viewJobProperties}>\n          {jobIcon(props.data.parameters?.type === 'approval')}\n          {props.data.parameters?.name || props.data.name}\n        </button>\n        <button\n          className={`my-auto\n          opacity-${hovering['node'] ? 100 : 0}\n          transition-opacity duration-150 w-8 h-full flex`}\n          {...trackHovering(['remove'], ['remove'])}\n          onClick={() => {\n            removeWorkflowElement(props.id);\n          }}\n        >\n          <DeleteItemIcon\n            className=\"w-3 cursor-pointer m-auto\"\n            color={hovering['remove'] ? '#B5261F' : '#AAAAAA'}\n          />\n        </button>\n      </div>\n\n      <button\n        className={`opacity-${hovering['handles'] && !hovering['node'] && !connecting?.start\n          ? 100\n          : 0\n          } source transition-opacity duration-300 w-4 h-4 my-auto ml-5`}\n        {...trackHovering(['requiredBy', 'handles'], ['requiredBy'])}\n        id={`${props.id}_target`}\n        // onClick={() => {--\n        // TODO: Implement 'add job' menu functionality\n        // }}\n        draggable\n        onDragStart={startConnecting('source')}\n      >\n        <ConnectorIcon\n          filled={hovering['requiredBy']}\n          subtraction={altAction}\n        />\n      </button>\n\n      <Handle\n        type=\"source\"\n        className=\"opacity-0 cursor-default\"\n        position={Position.Right}\n        id={`${props.id}_source`}\n      ></Handle>\n      <Handle\n        className=\"opacity-0 cursor-default\"\n        id={`${props.id}_target`}\n        type=\"target\"\n        position={Position.Left}\n      />\n    </div>\n  );\n};\n\nexport default JobNode;\n","import { IconProps } from '../IconProps';\n\nconst WorkflowIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 24 24\" className={props.className} fill={props.color}>\n    <path d=\"M13,12.0005 L13,14.5005 C13,15.8812153 14.1192847,17.0005 15.5,17.0005 C16.7716732,17.0005 17.8215783,16.0510253 17.9794794,14.8223119 C16.8252603,14.4045443 16,13.2985065 16,12.0005 C16,10.3434832 17.3434471,9.0005 19,9.0005 C20.6565529,9.0005 22,10.3434832 22,12.0005 C22,13.3107265 21.1591278,14.4253528 19.9878345,14.8339277 C19.8172144,17.1635097 17.8731367,19.0005 15.5,19.0005 C13.0147153,19.0005 11,16.9857847 11,14.5005 L11,12.0005 L11,9.4995 C11,8.11906389 9.88099443,7.0005 8.5,7.0005 C7.2278041,7.0005 6.17794274,7.94975945 6.020417,9.17853139 C7.17480406,9.5960731 8,10.7018409 8,12.0005 C8,13.6567847 6.65628475,15.0005 5,15.0005 C3.34371525,15.0005 2,13.6567847 2,12.0005 C2,10.6896797 2.84072326,9.57538027 4.01209968,9.16698275 C4.18228055,6.83714058 6.12646259,5.0005 8.5,5.0005 C10.9853872,5.0005 13,7.0143176 13,9.4995 L13,12.0005 Z M6,12.0005 C6,11.4482074 5.55213797,11.0005 5,11.0005 C4.44786203,11.0005 4,11.4482074 4,12.0005 C4,12.5522153 4.44828475,13.0005 5,13.0005 C5.55171525,13.0005 6,12.5522153 6,12.0005 Z M20,12.0005 C20,11.4482074 19.552138,11.0005 19,11.0005 C18.447862,11.0005 18,11.4482074 18,12.0005 C18,12.5522153 18.4482847,13.0005 19,13.0005 C19.5517153,13.0005 20,12.5522153 20,12.0005 Z\"></path>\n  </svg>\n);\n\nexport default WorkflowIcon;\n","import { executors, Job, orb } from '@circleci/circleci-config-sdk';\nimport { FormikValues, useField } from 'formik';\nimport CommandIcon from '../../../icons/components/CommandIcon';\nimport DeleteItemIcon from '../../../icons/ui/DeleteItemIcon';\nimport { UNDEFINED_EXECUTOR } from '../../../mappings/components/ExecutorMapping';\nimport { JobMapping } from '../../../mappings/components/JobMapping';\nimport {\n  DefinitionsModel,\n  DefinitionSubscriptions,\n  mapDefinitions,\n} from '../../../state/DefinitionStore';\nimport { useStoreActions } from '../../../state/Hooks';\nimport AddButton from '../../atoms/AddButton';\nimport { Empty } from '../../atoms/Empty';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport ListProperty from '../../atoms/form/ListProperty';\nimport StepListItem from '../../atoms/form/StepListItem';\nimport { StepDefinitionMenu } from '../../menus/definitions/StepDefinitionMenu';\nimport StepTypePageNav from '../../menus/definitions/subtypes/StepTypePage';\nimport { navSubTypeMenu } from '../../menus/SubTypeMenu';\nimport CollapsibleList from '../CollapsibleList';\nimport ParamListContainer from '../ParamListContainer';\n\nexport type JobInspectorProps = FormikValues & {\n  definitions: DefinitionsModel;\n  addSubscriptions?: (subscriptions: DefinitionSubscriptions) => void;\n};\n\nconst getEmbeddedExecutor = (values: any) => {\n  const executorKeys = ['machine', 'macos', 'docker'];\n\n  return Object.keys(values).find((key) => executorKeys.includes(key));\n};\n\nconst EmbeddedExecutor = ({\n  embeddedExecutor,\n  definitions,\n  data,\n  values,\n  ...props\n}: {\n  embeddedExecutor: string;\n  data: Job;\n  definitions: DefinitionsModel;\n} & FormikValues) => {\n  const defineExecutor = useStoreActions((actions) => actions.define_executors);\n  const updateConfirmation = useStoreActions(\n    (actions) => actions.triggerConfirmation,\n  );\n\n  const triggerToast = useStoreActions((actions) => actions.triggerToast);\n  const embeddedHelper = useField({\n    name: embeddedExecutor,\n    ...props,\n  })[2];\n  const executor = useField({\n    name: 'executor.name',\n    ...props,\n  })[2];\n\n  const deletedExecutor = data.executor === UNDEFINED_EXECUTOR;\n\n  return (\n    <>\n      <div className=\"flex flex-row\">\n        <p className=\"font-bold leading-5 tracking-wide\">Executor</p>\n        {!deletedExecutor && (\n          <button\n            type=\"button\"\n            className=\"ml-auto tracking-wide my-auto text-sm text-circle-blue font-medium  \"\n            onClick={() => {\n              const name = data.name + '-exec-export';\n\n              updateConfirmation({\n                onConfirm: () => {\n                  if (!(data.executor instanceof executors.Executor)) {\n                    return;\n                  }\n\n                  embeddedHelper.setValue(undefined);\n                  defineExecutor(data.executor.asReusable(name));\n                  executor.setValue(name);\n                  triggerToast({\n                    label: name,\n                    content: 'has been exported.',\n                    status: 'success',\n                  });\n                },\n                modalDialogue: {\n                  body: 'Upon extracting this %s, a %s with the name %s will be created. This operation cannot be undone.',\n                  button: 'Confirm',\n                  buttonVariant: 'primary',\n                  header: 'Confirm Executor Export',\n                },\n                labels: ['executor', 'reusable executor', name],\n              });\n            }}\n          >\n            Export as Definition\n          </button>\n        )}\n      </div>\n      <div className=\"px-3 py-2 my-2 bg-circle-gray-200 border w-full border-circle-gray-300 rounded flex flex-row\">\n        {deletedExecutor ? `Deleted Executor` : `Embedded ${embeddedExecutor}`}\n        <button\n          onClick={() => {\n            embeddedHelper.setValue(undefined);\n            executor.setValue('Select Executor');\n          }}\n          type=\"button\"\n          className=\"my-auto ml-auto\"\n        >\n          <DeleteItemIcon className=\"w-3 h-3\" color=\"#AAAAAA\" />\n        </button>\n      </div>\n    </>\n  );\n};\n\nconst JobInspector = ({\n  data,\n  definitions,\n  subscriptions,\n  setSubscriptions,\n  ...props\n}: JobInspectorProps) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const embeddedExecutor = getEmbeddedExecutor(props.values);\n\n  return (\n    <div>\n      <InspectorProperty label=\"Name\" name=\"name\" required />\n      {embeddedExecutor ? (\n        <EmbeddedExecutor\n          embeddedExecutor={embeddedExecutor}\n          definitions={definitions}\n          data={data}\n          {...props}\n        />\n      ) : (\n        <>\n          <InspectorProperty\n            label=\"Executor\"\n            as=\"select\"\n            name=\"executor.name\"\n            placeholder=\"Select Executor\"\n            className=\"w-full\"\n            required\n            onChange={(e: string) => {\n              const subscription = { name: e, type: 'executors' };\n              const subs = subscriptions\n                ? [...subscriptions, subscription]\n                : [subscription];\n\n              setSubscriptions && setSubscriptions(subs);\n            }}\n            dependent={(executorName: string) => {\n              const splitName = executorName?.split('/');\n\n              if (!splitName) {\n                return <></>;\n              }\n              const executor =\n                splitName.length === 1\n                  ? definitions.executors[executorName]?.value\n                  : definitions.orbs[splitName[0]].value.executors[\n                      splitName[1]\n                    ];\n\n              return (\n                <>\n                  {executor?.parameters && (\n                    <>\n                      <CollapsibleList title=\"Properties\" expanded>\n                        <div className=\"pt-2\">\n                          <ParamListContainer\n                            paramList={executor.parameters}\n                            parent=\"executor\"\n                          />\n                        </div>\n                      </CollapsibleList>\n                      <div className=\"w-full border-b border-circle-gray-300 my-2\"></div>\n                    </>\n                  )}\n                </>\n              );\n            }}\n          >\n            {[\n              ...mapDefinitions(definitions.executors, (executor) => (\n                <option value={executor.name} key={executor.name}>\n                  {executor.name}\n                </option>\n              )),\n              ...mapDefinitions<orb.OrbImport>(\n                definitions.orbs,\n                (orb) =>\n                  orb.executors &&\n                  Object.values(orb.executors).map((executor) => (\n                    <option value={executor.name} key={executor.name}>\n                      {executor.name}\n                    </option>\n                  )),\n              ),\n            ]}\n          </InspectorProperty>\n        </>\n      )}\n\n      <ListProperty\n        label=\"Steps\"\n        name=\"steps\"\n        values={props.values}\n        expanded\n        required\n        listItem={StepListItem}\n        labels={(values: { name: string }): string[] => [\n          'Step',\n          `${values?.name || Object.keys(values)[0]}`,\n        ]}\n        empty={\n          <Empty\n            label=\"No Steps Yet\"\n            Logo={CommandIcon}\n            description={\n              <>\n                Add a step by clicking the button above.\n                <br />\n                At least one step is required.\n              </>\n            }\n          />\n        }\n        pinned={\n          <AddButton\n            className=\"ml-auto flex\"\n            onClick={() => {\n              navigateTo(\n                navSubTypeMenu(\n                  {\n                    typePage: StepTypePageNav,\n                    menuPage: StepDefinitionMenu,\n                    passThrough: { dataType: JobMapping },\n                  },\n                  props.values,\n                  subscriptions,\n                ),\n              );\n            }}\n          />\n        }\n      ></ListProperty>\n    </div>\n  );\n};\n\nexport default JobInspector;\n","import {\n  Job,\n  orb,\n  parsers,\n  reusable,\n  workflow,\n} from '@circleci/circleci-config-sdk';\nimport JobNode from '../../components/atoms/nodes/JobNode';\nimport JobSummary from '../../components/atoms/summaries/JobSummary';\nimport JobInspector from '../../components/containers/inspector/JobInspector';\nimport { componentParametersSubtypes } from '../../components/containers/inspector/subtypes/ParameterSubtypes';\nimport JobIcon from '../../icons/components/JobIcon';\nimport {\n  DefinitionAction,\n  definitionsAsArray,\n} from '../../state/DefinitionStore';\nimport InspectableMapping from '../InspectableMapping';\nimport { UNDEFINED_EXECUTOR } from './ExecutorMapping';\n\nexport const JobMapping: InspectableMapping<Job, workflow.WorkflowJob> = {\n  key: 'jobs',\n  name: {\n    singular: 'Job',\n    plural: 'Jobs',\n  },\n  defaults: {\n    name: 'New Job',\n    steps: [],\n    executor: { name: 'Select Executor' },\n  },\n  parameters: componentParametersSubtypes.job,\n  subscriptions: {\n    commands: (prev, cur: reusable.CustomCommand, j) => {\n      let steps;\n\n      if (cur) {\n        steps = j.steps.map((step) =>\n          step instanceof reusable.ReusableCommand && step.name === prev.name\n            ? new reusable.ReusableCommand(cur, step.parameters)\n            : step,\n        );\n      } else {\n        steps = j.steps.filter((step) =>\n          step instanceof reusable.ReusableCommand\n            ? step.name !== prev.name\n            : true,\n        );\n      }\n\n      return new reusable.ParameterizedJob(\n        j.name,\n        j.executor,\n        j instanceof reusable.ParameterizedJob ? j.parameters : undefined,\n        steps,\n      );\n    },\n    executors: (_, cur, j) => {\n      return new reusable.ParameterizedJob(\n        j.name,\n        cur?.reuse() || UNDEFINED_EXECUTOR,\n        j instanceof reusable.ParameterizedJob ? j.parameters : undefined,\n        j.steps,\n      );\n    },\n  },\n  resolveObservables: (job) => {\n    const reusedExecutor =\n      job.executor instanceof reusable.ReusedExecutor\n        ? job.executor.executor\n        : undefined;\n    const orbExec =\n      reusedExecutor instanceof orb.OrbRef ? reusedExecutor : undefined;\n\n    const orbCommands = job.steps.filter(\n      (command) =>\n        command instanceof reusable.ReusableCommand &&\n        command.name.includes('/'),\n    );\n\n    return {\n      executors: orbExec ? undefined : reusedExecutor,\n      commands: job.steps.filter(\n        (command) =>\n          command instanceof reusable.ReusableCommand &&\n          !command.name.includes('/'),\n      ),\n      orbs: orbExec ? [orbExec, ...orbCommands] : orbCommands,\n    };\n  },\n  /**\n   TODO: Implement this to pass transform method to\n   dependsOn: (definitions) => [definitions.commands, definitions.executors],\n   */\n  transform: ({ name, ...values }, definitions) => {\n    return parsers.parseJob(\n      name,\n      values,\n      definitionsAsArray(definitions.commands),\n      definitionsAsArray(definitions.executors),\n      definitionsAsArray(definitions.orbs),\n    );\n  },\n  store: {\n    add: (actions) => actions.define_jobs,\n    update: (actions) => actions.update_jobs,\n    remove: (actions) => actions.delete_jobs,\n  },\n  dragTarget: 'workflow',\n  node: {\n    transform: (data, params, elements) => {\n      const stagedNames = new Set(\n        elements\n          ?.filter((element) => element.type === 'jobs')\n          .map((job) => job.data.parameters?.name || job.data.name),\n      );\n      let name = data.name;\n\n      if (stagedNames && stagedNames.has(name)) {\n        for (let i = 2; true; i++) {\n          const newName = `${name} (${i})`;\n\n          if (!stagedNames.has(newName)) {\n            name = newName;\n            break;\n          }\n        }\n      }\n\n      const newParams = params || {};\n\n      if (name !== data.name) {\n        newParams.name = name;\n      }\n\n      return new workflow.WorkflowJob(data, newParams);\n    },\n    component: JobNode,\n  },\n  components: {\n    icon: JobIcon,\n    summary: JobSummary,\n    inspector: JobInspector,\n  },\n  docsInfo: {\n    description:\n      'A %s is a configured collection of steps to be executed within the Executor environment.',\n    link: 'https://circleci.com/docs/concepts/#jobs',\n  },\n  requirements: [\n    {\n      message:\n        'You must define or import at least one executor before creating a job.',\n      test: (store) => {\n        const hasExecs = Object.values(store.executors).length > 0;\n        const orbWithExecs = Object.values(store.orbs).some(\n          (orb) => Object.values(orb.value.executors).length > 0,\n        );\n\n        return hasExecs || orbWithExecs;\n      },\n    },\n  ],\n};\n\nexport type JobAction = DefinitionAction<Job>;\n\nexport type JobActions = {\n  define_jobs: JobAction;\n  update_jobs: JobAction;\n  delete_jobs: JobAction;\n  cleanup_jobs: JobAction;\n};\n","import { Job } from '@circleci/circleci-config-sdk';\nimport JobIcon from '../../../icons/components/JobIcon';\nimport WorkflowIcon from '../../../icons/components/WorkflowIcon';\nimport { useStoreState } from '../../../state/Hooks';\n\nconst JobSummary: React.FunctionComponent<{ data: Job }> = (props) => {\n  const stagedJobMap = useStoreState((state) => state.stagedJobs);\n  const selectedWorkflow = useStoreState((state) => state.selectedWorkflowId);\n  const stagedJobs = stagedJobMap.workflows[selectedWorkflow];\n\n  return (\n    <div className=\"flex flex-row\">\n      <JobIcon className=\"mr-4 w-6 h-6\" />\n      <h3 className=\"my-auto\">{props.data.name}</h3>\n      {stagedJobs && (\n        <WorkflowIcon\n          className=\"w-5 h-5 ml-auto\"\n          color={props.data.name in stagedJobs ? '#048C43' : '#E3E3E3'}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default JobSummary;\n","import {\n  executors,\n  Job,\n  parsers,\n  reusable,\n  workflow,\n} from '@circleci/circleci-config-sdk';\nimport ExecutorSummary from '../../components/atoms/summaries/ExecutorSummary';\nimport ExecutorInspector from '../../components/containers/inspector/ExecutorInspector';\nimport { executorSubtypes } from '../../components/containers/inspector/subtypes/ExecutorSubtypes';\nimport { componentParametersSubtypes } from '../../components/containers/inspector/subtypes/ParameterSubtypes';\nimport ExecutorTypePageNav from '../../components/menus/definitions/subtypes/ExecutorTypePage';\nimport ExecutorIcon from '../../icons/components/ExecutorIcon';\nimport { DefinitionAction } from '../../state/DefinitionStore';\nimport InspectableMapping from '../InspectableMapping';\nimport { JobMapping } from './JobMapping';\n\n/**\n * If an executor gets deleted from a job, we replace it with this\n * so that we can determine the executor is undefined\n * in the job inspector\n */\nexport const UNDEFINED_EXECUTOR = new executors.DockerExecutor('');\n\nexport type AnyExecutor =\n  | executors.DockerExecutor\n  | executors.MacOSExecutor\n  | executors.MachineExecutor\n  | executors.WindowsExecutor\n  | executors.Executor;\n\nexport const ExecutorMapping: InspectableMapping<\n  reusable.ReusableExecutor,\n  workflow.WorkflowJob\n> = {\n  key: 'executors',\n  name: {\n    singular: 'Executor',\n    plural: 'Executors',\n  },\n  defaults: {\n    docker: {\n      name: 'new-docker-executor',\n      docker: [\n        {\n          image: 'cimg/base:stable',\n        },\n      ],\n      resource_class: 'medium',\n    },\n    machine: {\n      name: 'new-machine-executor',\n      machine: {\n        image: 'ubuntu-2204:2022.07.1',\n      },\n      resource_class: 'medium',\n    },\n    macos: {\n      name: 'new-macos-executor',\n      macos: {\n        xcode: '14.0.0',\n      },\n      resource_class: 'medium',\n    },\n    windows: {\n      name: 'new-windows-executor',\n      machine: {\n        image: 'windows-server-2019-vs2019:stable',\n      },\n      resource_class: 'windows.medium',\n    },\n  },\n  parameters: componentParametersSubtypes.executor,\n  transform: ({ name, ...values }) => {\n    return parsers.parseReusableExecutor(name, values);\n  },\n  store: {\n    add: (actions) => actions.define_executors,\n    update: (actions) => actions.update_executors,\n    remove: (actions) => actions.delete_executors,\n  },\n  dragTarget: JobMapping.key,\n  applyToNode: (data, { job, parameters }) => {\n    let params = { ...parameters };\n\n    if (!(job instanceof Job)) {\n      let executors = job.parameters.parameters.filter(\n        (param) => param.type === 'executor',\n      );\n\n      if (executors.length === 0) {\n        // TODO: Prompt user to add executor parameter\n      } else if (executors.length === 1) {\n        params[executors[0].name] = data.name;\n      } else {\n        // TODO: Prompt user to select executor parameter\n      }\n    }\n\n    return new workflow.WorkflowJob(job, params);\n  },\n  subtypes: {\n    component: ExecutorTypePageNav,\n    getSubtype: (reusableExec) => {\n      const reusableExecsKeys = Object.keys(reusableExec);\n\n      return Object.keys(executorSubtypes).find((subtype) =>\n        reusableExecsKeys.includes(subtype),\n      );\n    },\n    definitions: executorSubtypes,\n  },\n  components: {\n    icon: ExecutorIcon,\n    summary: ExecutorSummary,\n    inspector: ExecutorInspector,\n  },\n  docsInfo: {\n    description:\n      'An %s is a technology or environment in which Jobs execute their steps inside of.',\n    link: 'https://circleci.com/docs/executor-types/',\n  },\n};\n\nexport type ExecutorAction = DefinitionAction<reusable.ReusableExecutor>;\n\nexport type ExecutorActions = {\n  define_executors: ExecutorAction;\n  update_executors: ExecutorAction;\n  delete_executors: ExecutorAction;\n  cleanup_executors: ExecutorAction;\n};\n","import { Job, workflow, Workflow } from '@circleci/circleci-config-sdk';\nimport { When } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Logic';\nimport { WorkflowJobAbstract } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow';\nimport { FlowElement } from 'react-flow-renderer';\nimport { Definition, DefinitionAction } from '../../state/DefinitionStore';\nimport { StoreModel } from '../../state/Store';\nimport GenerableMapping from '../GenerableMapping';\n\nexport class WorkflowStage extends Workflow {\n  elements: FlowElement<any>[];\n  id: string;\n\n  constructor(\n    name: string,\n    id: string,\n    jobs?: Array<Job | WorkflowJobAbstract>,\n    when?: When,\n    elements: FlowElement<any>[] = [],\n  ) {\n    super(name, jobs, when);\n\n    this.elements = elements;\n    this.id = id;\n  }\n}\n\n/**\n * Helper function to set the definition of a workflow\n */\nexport const setWorkflowDefinition = (\n  state: StoreModel,\n  name: string,\n  workflow: Definition<WorkflowStage>,\n) => {\n  state.definitions = {\n    ...state.definitions,\n    workflows: {\n      ...state.definitions.workflows,\n      [name]: workflow,\n    },\n  };\n};\n\nexport const WorkflowMapping: GenerableMapping<WorkflowStage> = {\n  key: 'workflows',\n  store: {\n    add: (actions) => actions.define_workflows,\n    update: (actions) => actions.update_workflows,\n    remove: (actions) => actions.delete_workflows,\n  },\n  storeHooks: {\n    update: (state, values) => {\n      /**\n       * Handles the non-observable state of the workflow\n       */\n      if (values.old.name !== values.new.name) {\n        if (state.selectedWorkflowId === values.old.name) {\n          state.selectedWorkflowId = values.new.name;\n        }\n\n        state.stagedJobs.workflows[values.new.name] =\n          state.stagedJobs.workflows[values.old.name];\n      }\n\n      return values.new;\n    },\n  },\n  subscriptions: {\n    jobs: (prev: Job, cur: Job, w) => {\n      const updates: Record<string, workflow.WorkflowJob> = {};\n      const jobs = w.jobs.map((job) => {\n        if (job instanceof workflow.WorkflowJob && job.name === prev.name) {\n          const stagedJob = new workflow.WorkflowJob(cur, job.parameters);\n\n          updates[job.parameters?.name || job.name] = stagedJob;\n\n          return stagedJob;\n        }\n        return job;\n      });\n\n      const elements = w.elements.map((node) => {\n        return node.type === 'jobs' && node.data.job.name === prev.name\n          ? {\n              ...node,\n              data: updates[node.data.parameters.name || node.data.job.name],\n            }\n          : node;\n      });\n\n      return new WorkflowStage(w.name, w.id, jobs, w.when, elements);\n    },\n  },\n  resolveObservables: (w) => ({\n    jobs: w.jobs.filter((job) => {\n      return job instanceof workflow.WorkflowJob;\n    }),\n  }),\n};\n\nexport type WorkflowAction = DefinitionAction<WorkflowStage>;\n\nexport type WorkflowActions = {\n  define_workflows: WorkflowAction;\n  update_workflows: WorkflowAction;\n  delete_workflows: WorkflowAction;\n  cleanup_workflows: WorkflowAction;\n};\n","import { Job, parameters, reusable } from '@circleci/circleci-config-sdk';\nimport { Generable } from '@circleci/circleci-config-sdk/dist/src/lib/Components';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport {\n  Action,\n  action,\n  ActionCreator,\n  Actions,\n  TargetResolver,\n  ThunkOn,\n  thunkOn,\n} from 'easy-peasy';\nimport { v4 } from 'uuid';\nimport { store } from '../App';\nimport { OrbImportWithMeta } from '../components/menus/definitions/OrbDefinitionsMenu';\nimport {\n  CommandActions,\n  CommandMapping,\n} from '../mappings/components/CommandMapping';\nimport {\n  ExecutorActions,\n  ExecutorMapping,\n} from '../mappings/components/ExecutorMapping';\nimport { JobActions, JobMapping } from '../mappings/components/JobMapping';\nimport {\n  ParameterActions,\n  ParameterMapping,\n} from '../mappings/components/ParameterMapping';\nimport {\n  WorkflowActions,\n  WorkflowMapping,\n  WorkflowStage,\n} from '../mappings/components/WorkflowMapping';\nimport GenerableMapping, { typeToMapping } from '../mappings/GenerableMapping';\nimport { StoreActions, StoreModel, UpdateType } from './Store';\n\nexport type ParameterDefinition = 'parameters';\nexport type JobsDefinition = 'jobs';\nexport type CommandDefinition = 'commands';\nexport type ExecutorsDefinition = 'executors';\nexport type WorkflowDefinition = 'workflows';\n\n/**\n * All definition types that are registered to the\n * definition store\n * (orbs are currently handled by the main store for no\n * specific reason TODO: handle orbs here)\n */\nexport type DefinitionType =\n  | ParameterDefinition\n  | JobsDefinition\n  | ExecutorsDefinition\n  | CommandDefinition\n  | WorkflowDefinition;\n\nexport type NamedGenerable = Generable & { name: string };\n\n/**\n * A wrapper object for a definition that contains the definition's value,\n * and lists of incoming and outgoing definition subscriptions\n */\nexport type Definition<G> = {\n  /** a list of dependent components which observe this definition */\n  observers?: DefinitionSubscriptions;\n  /** a list of dependencies which this definition observes */\n  observables?: DefinitionSubscriptions;\n  value: G;\n};\n\nexport type SubscriptionCallback<\n  Observer extends NamedGenerable,\n  Observable extends NamedGenerable,\n> = (prev: Observable, cur: Observable, observer: Observer) => Observer;\n\nexport type DefinitionSubscriptions = {\n  [type in DefinitionType]?: {\n    [name: string]: number;\n  };\n};\n\n/**\n * Definition Records String to Definition map.\n * Definition must be some type of Generable.\n */\nexport type DefinitionRecord<G extends Generable> = Record<\n  string,\n  Definition<G>\n>;\n\n/**\n * Component definitions which are used to generate the configuration\n */\nexport type DefinitionsModel = {\n  commands: DefinitionRecord<reusable.CustomCommand>;\n  executors: DefinitionRecord<reusable.ReusableExecutor>;\n  jobs: DefinitionRecord<Job>;\n  workflows: DefinitionRecord<WorkflowStage>;\n  parameters: DefinitionRecord<\n    parameters.CustomParameter<PipelineParameterLiteral>\n  >;\n  orbs: DefinitionRecord<OrbImportWithMeta>;\n};\n\nexport type AllDefinitionActions = JobActions &\n  ExecutorActions &\n  CommandActions &\n  ParameterActions &\n  WorkflowActions;\n\nexport type DefinitionSubscriptionThunk = ThunkOn<\n  StoreActions,\n  UpdateType<NamedGenerable>\n>;\n\nexport type MappingSubscriptions<\n  Observer extends NamedGenerable,\n  Observables extends NamedGenerable,\n  Types extends DefinitionType,\n> = Record<Types, SubscriptionCallback<Observer, Observables>>;\n\nexport type ObserverMapping<Observer extends NamedGenerable> =\n  GenerableMapping<Observer> &\n    Required<Pick<GenerableMapping<Observer>, 'subscriptions'>>;\n\n/**\n * Definition Action wraps generable components life cycle actions and handles the core events\n */\nexport type DefinitionAction<G extends NamedGenerable> = Action<\n  DefinitionsStoreModel,\n  G | UpdateType<G>\n>;\n\nexport const mapDefinitions = <G extends NamedGenerable>(\n  definitions: DefinitionRecord<G>,\n  callback: (definition: G, index: number) => any,\n) => {\n  return Object.values(definitions).map((definition, index) =>\n    callback(definition.value, index),\n  );\n};\n\nexport const definitionsAsArray = <G extends NamedGenerable>(\n  definitions: DefinitionRecord<G>,\n) => {\n  return Object.values(definitions).map((definition) => definition.value);\n};\n\n/**\n * Adds observer to observable, and returns the subscription to the observer\n */\nexport const createSubscription = (\n  state: DefinitionsStoreModel,\n  observer: NamedGenerable,\n  observerType: DefinitionType,\n  observable: NamedGenerable,\n  observableType: DefinitionType,\n  observableDefs: Record<string, DefinitionRecord<NamedGenerable>>,\n): DefinitionSubscriptions => {\n  const observableTarget = state.definitions[observableType][observable.name];\n  const observerSub = { [observer.name]: 1 };\n\n  if (observableTarget?.observers) {\n    const otherObservers = observableTarget.observers;\n\n    observableDefs[observableType][observable.name] = {\n      ...observableTarget,\n      observers: otherObservers[observerType]\n        ? {\n            ...otherObservers,\n            [observerType]: {\n              ...otherObservers[observerType],\n              ...observerSub,\n            },\n          }\n        : { ...otherObservers, [observerType]: observerSub },\n    };\n  } else if (observableTarget) {\n    observableDefs[observableType][observable.name] = {\n      ...observableTarget,\n      observers: { [observerType]: observerSub },\n    };\n  }\n\n  return {\n    name: observable.name,\n  } as DefinitionSubscriptions;\n};\n\nexport const subscribeToObservables = <G extends NamedGenerable>(\n  state: DefinitionsStoreModel,\n  mapping: GenerableMapping<G>,\n  observer: G,\n) => {\n  const type = mapping.key;\n  let subscriptions: DefinitionSubscriptions[] = [];\n  const observables = mapping.subscriptions\n    ? Object.assign(\n        {},\n        ...Object.keys(mapping.subscriptions).map((key) => ({ [key]: {} })),\n      )\n    : {};\n\n  if (mapping.resolveObservables && observables) {\n    const observerDefinitions = mapping.resolveObservables(observer) as Record<\n      DefinitionType,\n      NamedGenerable\n    >;\n\n    Object.entries(observerDefinitions).forEach(\n      ([observableType, oneOrMore]) => {\n        if (Array.isArray(oneOrMore)) {\n          subscriptions.push(\n            ...oneOrMore\n              .filter((o) => o !== undefined)\n              .map((observable) =>\n                createSubscription(\n                  state,\n                  observer,\n                  type,\n                  observable,\n                  observableType as DefinitionType,\n                  observables,\n                ),\n              ),\n          );\n        } else if (oneOrMore !== undefined) {\n          subscriptions.push(\n            createSubscription(\n              state,\n              observer,\n              type,\n              oneOrMore,\n              observableType as DefinitionType,\n              observables,\n            ),\n          );\n        }\n      },\n    );\n  }\n\n  return [observables, subscriptions];\n};\n\nexport const setDefinitions = <G extends NamedGenerable>(\n  state: DefinitionsStoreModel,\n  mapping: GenerableMapping<G>,\n  generable: G,\n  observers?: DefinitionSubscriptions,\n  updateRecord?: (record: DefinitionRecord<G>) => void,\n) => {\n  const defType = mapping.key;\n  const oldState = state.definitions[mapping.key];\n  const [otherObservables, subscriptions] = subscribeToObservables(\n    state,\n    mapping,\n    generable,\n  );\n\n  /*\n   * Add new observable list to the corresponding definition record,\n   * and define the new definition\n   * All types not relevant to this definition will return itself.\n   */\n  state.definitions = Object.assign(\n    {},\n    ...Object.entries(state.definitions).map(([type, definitions]) => {\n      let recordUpdate = definitions as unknown as DefinitionRecord<G>;\n\n      if (type === defType) {\n        recordUpdate = {\n          ...oldState,\n          ...(otherObservables[defType] || {}),\n          [generable.name]: {\n            observables: subscriptions || [],\n            observers: observers || {},\n            value: generable,\n          },\n        };\n\n        updateRecord && updateRecord(recordUpdate);\n      } else if (type in otherObservables) {\n        recordUpdate = {\n          ...state.definitions[type as DefinitionType],\n          ...otherObservables[type],\n        };\n      }\n\n      return {\n        [type]: recordUpdate,\n      };\n    }),\n  );\n};\n\n/***\n * Create wrappers for definition actions\n */\nexport const createDefinitionActions = <G extends NamedGenerable>(\n  mapping: GenerableMapping<G>,\n): Record<string, DefinitionAction<G>> => {\n  const defType = mapping.key;\n  const hooks = mapping.storeHooks;\n\n  return {\n    [`define_${defType}`]: action((state, payload: G) => {\n      setDefinitions(state, mapping, payload);\n\n      hooks?.add && hooks?.add(state as StoreModel, payload);\n    }),\n    [`update_${defType}`]: action((state, payload: UpdateType<G>) => {\n      const newDefinition = hooks?.update\n        ? hooks.update(state as StoreModel, payload)\n        : payload.new;\n      const oldState = state.definitions[defType];\n      const oldDefinition = oldState[payload.old.name];\n\n      setDefinitions(\n        state,\n        mapping,\n        newDefinition,\n        oldDefinition.observers,\n        (definitions) => {\n          if (payload.new.name !== payload.old.name) {\n            delete definitions[payload.old.name];\n          }\n        },\n      );\n\n      payload.res && payload.res(undefined);\n    }),\n    /**\n     * triggers a deletion of the definition\n     * but does not remove it from the store\n     * used to update & unsubscribe observers\n     */\n    [`delete_${defType}`]: action(() => {\n      hooks?.remove && hooks?.remove();\n    }),\n    // does the actual deletion of the definition\n    [`cleanup_${defType}`]: action(\n      (state: DefinitionsStoreModel, payload: G) => {\n        const newDefinitions = {\n          ...state.definitions,\n        };\n\n        delete newDefinitions[defType][payload.name];\n\n        hooks?.cleanup && hooks?.cleanup();\n      },\n    ),\n  };\n};\n\n/**\n * Creates a thunk that watches the observable update action,\n * and updates the observer according to it's subscription\n */\nconst createObserverSubscriptions = <\n  Observer extends NamedGenerable,\n  Observables extends NamedGenerable,\n>(\n  observableType: DefinitionType,\n  subType: 'update' | 'delete',\n  extra?: TargetResolver<StoreActions, {}>,\n): DefinitionSubscriptionThunk => {\n  return thunkOn(\n    (actions, empty) => {\n      const mainSub: ActionCreator<any> =\n        actions[`${subType}_${observableType as DefinitionType}`];\n\n      if (!extra) {\n        return mainSub;\n      }\n\n      const extraActions = extra(actions, empty);\n\n      return Array.isArray(extraActions)\n        ? [...extraActions, mainSub]\n        : [extraActions, mainSub];\n    },\n    async (actions, target) => {\n      const payload =\n        subType === 'delete'\n          ? { old: target.payload, new: undefined }\n          : target.payload;\n      const change = payload as unknown as UpdateType<Observables>;\n      // there won't be a new change if the observable is being deleted\n      const name = subType === 'update' ? change.new.name : change.old.name;\n\n      const state = store.getState();\n      const definitions = state.definitions;\n\n      const observerSubs = definitions[observableType][name].observers;\n      if (!observerSubs) {\n        return;\n      }\n\n      const updates: Promise<unknown>[] = [];\n\n      Object.entries(observerSubs).forEach(([type, observers]) => {\n        const observerType = type as DefinitionType;\n\n        observers &&\n          Object.entries(observers).forEach(([name, count]) => {\n            const definition = definitions[observerType][name];\n            const observer = definition?.value as unknown as Observer;\n\n            if (!observer) return;\n\n            const observerUpdate = actions[\n              `update_${observerType}`\n            ] as unknown as ActionCreator<UpdateType<Observer>>;\n\n            const subscriptions =\n              typeToMapping(observerType)?.mapping.subscriptions;\n\n            if (!subscriptions || !subscriptions[observableType]) return;\n\n            const subscription = subscriptions[observableType];\n\n            subscription &&\n              updates.push(\n                new Promise((res) => {\n                  observerUpdate({\n                    old: observer,\n                    new: subscription(change.old, change.new, observer),\n                    res,\n                  });\n                }),\n              );\n          });\n      });\n\n      if (subType === 'delete') {\n        Promise.all(updates).then(() => {\n          const observerCleanup = actions[\n            `cleanup_${observableType}`\n          ] as unknown as ActionCreator<Observer>;\n          observerCleanup(change.old as unknown as Observer);\n        });\n      }\n    },\n  );\n};\n\nexport const createObservableThunks = <\n  Observable extends NamedGenerable,\n  Observers extends NamedGenerable,\n>(\n  mapping: ObserverMapping<Observable>,\n  observerTypes: Array<DefinitionType>,\n): Record<string, DefinitionSubscriptionThunk> => {\n  const key = mapping.key;\n\n  return {\n    // assign the thunk subscription\n    [`trigger_${key}_subscribers`]: createObserverSubscriptions<\n      Observable,\n      Observers\n    >(\n      key,\n      'update',\n      // mapping.externalUpdates,\n    ),\n    [`trigger_${key}_unsubscriptions`]: createObserverSubscriptions<\n      Observable,\n      Observers\n    >(\n      key as DefinitionType,\n      'delete',\n      // mapping.externalUpdates,\n    ),\n  };\n};\n\nexport const generateLifeCycleMatrix = (actions: Actions<StoreActions>) => {\n  const lifeCycles = ['define', 'update', 'cleanup'];\n  const types: DefinitionType[] = [\n    'parameters',\n    'commands',\n    'jobs',\n    'executors',\n    'workflows',\n  ];\n\n  const matrix: ActionCreator<any>[] = [];\n\n  lifeCycles.forEach((lifecycle) => {\n    matrix.push(\n      ...types.map(\n        (type) => actions[`${lifecycle}_${type}` as keyof AllDefinitionActions],\n      ),\n    );\n  });\n\n  return matrix;\n};\n\nexport const createDefinitionStore = (): AllDefinitionActions => {\n  return {\n    // actions - lifecycle for each definition\n    ...(createDefinitionActions<reusable.CustomCommand>(\n      CommandMapping,\n    ) as CommandActions),\n    ...(createDefinitionActions<Job>(JobMapping) as JobActions),\n    ...(createDefinitionActions<reusable.ReusableExecutor>(\n      ExecutorMapping,\n    ) as ExecutorActions),\n    ...(createDefinitionActions<\n      parameters.CustomParameter<PipelineParameterLiteral>\n    >(ParameterMapping) as ParameterActions),\n    ...(createDefinitionActions<WorkflowStage>(\n      WorkflowMapping,\n    ) as WorkflowActions),\n    /*\n     * Create thunks for each observable definition.\n     * Each type the action type is triggered,\n     * the subscription for each observer is fulfilled.\n     */\n    ...createObservableThunks<reusable.ReusableExecutor, Job>(\n      ExecutorMapping as ObserverMapping<reusable.ReusableExecutor>,\n      ['jobs'],\n    ),\n    ...createObservableThunks<\n      reusable.CustomCommand,\n      reusable.CustomCommand | Job\n    >(CommandMapping as ObserverMapping<reusable.CustomCommand>, [\n      'commands',\n      'jobs',\n    ]),\n    ...createObservableThunks<WorkflowStage, reusable.CustomCommand | Job>(\n      WorkflowMapping as ObserverMapping<WorkflowStage>,\n      ['jobs'],\n    ),\n  };\n};\n\nexport type DefinitionsStoreModel = { definitions: DefinitionsModel };\n\nexport const DefinitionStore: DefinitionsStoreModel = {\n  definitions: {\n    commands: {},\n    executors: {},\n    jobs: {},\n    workflows: {\n      'build-and-deploy': {\n        value: new WorkflowStage('build-and-deploy', v4(), [], undefined, []),\n      },\n    },\n    parameters: {},\n    orbs: {},\n  },\n};\n","import { IconProps } from '../IconProps';\n\nconst OrbIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 20 20\" className={props.className} fill={props.color}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M7.66669 5.33333C8.95535 5.33333 10 4.28866 10 3C10 1.71133 8.95535 0.666664 7.66669 0.666664C6.37802 0.666664 5.33335 1.71133 5.33335 3C5.33335 4.28866 6.37802 5.33333 7.66669 5.33333ZM10 13.5C11.933 13.5 13.5 11.933 13.5 10C13.5 8.067 11.933 6.5 10 6.5C8.06702 6.5 6.50002 8.067 6.50002 10C6.50002 11.933 8.06702 13.5 10 13.5ZM15.8334 3C15.8334 4.28866 14.7887 5.33333 13.5 5.33333C12.2114 5.33333 11.1667 4.28866 11.1667 3C11.1667 1.71133 12.2114 0.666664 13.5 0.666664C14.7887 0.666664 15.8334 1.71133 15.8334 3ZM12.3334 19.3333C13.622 19.3333 14.6667 18.2887 14.6667 17C14.6667 15.7113 13.622 14.6667 12.3334 14.6667C11.0447 14.6667 10 15.7113 10 17C10 18.2887 11.0447 19.3333 12.3334 19.3333ZM8.83335 17C8.83335 18.2887 7.78868 19.3333 6.50002 19.3333C5.21136 19.3333 4.16669 18.2887 4.16669 17C4.16669 15.7113 5.21136 14.6667 6.50002 14.6667C7.78868 14.6667 8.83335 15.7113 8.83335 17ZM3.00002 8.83333C4.28869 8.83333 5.33335 7.78866 5.33335 6.5C5.33335 5.21133 4.28869 4.16666 3.00002 4.16666C1.71136 4.16666 0.666687 5.21133 0.666687 6.5C0.666687 7.78866 1.71136 8.83333 3.00002 8.83333ZM5.33335 12.3333C5.33335 13.622 4.28869 14.6667 3.00002 14.6667C1.71136 14.6667 0.666687 13.622 0.666687 12.3333C0.666687 11.0447 1.71136 10 3.00002 10C4.28869 10 5.33335 11.0447 5.33335 12.3333ZM17 10C18.2887 10 19.3334 8.95533 19.3334 7.66666C19.3334 6.378 18.2887 5.33333 17 5.33333C15.7114 5.33333 14.6667 6.378 14.6667 7.66666C14.6667 8.95533 15.7114 10 17 10ZM19.3334 13.5C19.3334 14.7887 18.2887 15.8333 17 15.8333C15.7114 15.8333 14.6667 14.7887 14.6667 13.5C14.6667 12.2113 15.7114 11.1667 17 11.1667C18.2887 11.1667 19.3334 12.2113 19.3334 13.5Z\"\n    />\n  </svg>\n);\n\nexport default OrbIcon;\n","import { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport { useStoreState } from '../../../../state/Hooks';\nimport { NavigationComponent } from '../../../../state/Store';\nimport BreadCrumbs from '../../../containers/BreadCrumbs';\nimport { commandSubtypes } from '../../../containers/inspector/subtypes/CommandSubtypes';\nimport TabbedMenu from '../../TabbedMenu';\nimport { SubTypeSelectPageProps } from '../../SubTypeMenu';\nimport { mapDefinitions } from '../../../../state/DefinitionStore';\nimport { orb, reusable } from '@circleci/circleci-config-sdk';\nimport Card from '../../../atoms/Card';\nimport { Empty } from '../../../atoms/Empty';\nimport OrbIcon from '../../../../icons/components/OrbIcon';\nimport CommandIcon from '../../../../icons/components/CommandIcon';\nimport CollapsibleList from '../../../containers/CollapsibleList';\nimport { CommandParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport { OrbImportWithMeta } from '../OrbDefinitionsMenu';\n\nconst StepTypePage = (\n  props: SubTypeSelectPageProps<\n    string | CustomCommand | orb.OrbRef<CommandParameterLiteral>\n  >,\n) => {\n  const definitions = useStoreState((state) => state.definitions);\n\n  return (\n    <div>\n      <header>\n        {/* <WorkflowIcon className=\"w-6 h-6 mr-1\" color=\"#6A6A6A\" /> */}\n        <BreadCrumbs />\n        <h1 className=\"ml-6 text-2xl py-3 font-bold\">Step Type</h1>\n      </header>\n      <TabbedMenu tabs={['BUILT-IN', 'COMMANDS', 'ORBS']}>\n        <div className=\"p-6 flex-col overflow-y-scroll\">\n          {Object.entries(commandSubtypes).map(([name, subtype]) => (\n            <Card\n              key={name}\n              description={subtype.description}\n              title={subtype.name}\n              onClick={() => {\n                props.setSubtype(name);\n              }}\n              pinned={\n                <>\n                  {subtype.docsLink && (\n                    <a\n                      className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n                      href={subtype.docsLink}\n                      target=\"circleci_docs\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                      }}\n                    >\n                      Learn More\n                    </a>\n                  )}\n                </>\n              }\n            />\n          ))}\n        </div>\n        <div className=\"p-6 flex-col overflow-y-scroll\">\n          {Object.values(definitions.commands).length > 0 ? (\n            mapDefinitions<reusable.CustomCommand>(\n              definitions.commands,\n              (command) => (\n                <button\n                  key={command.name}\n                  type=\"button\"\n                  className=\"p-4 mb-4 w-full border-circle-gray-300 border hover:border-circle-black rounded text-left\"\n                  onClick={() => {\n                    props.setSubtype(command);\n                  }}\n                >\n                  <p className=\"font-bold\">{command.name}</p>\n                  <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                    Command description will show here\n                  </p>\n                </button>\n              ),\n            )\n          ) : (\n            <Empty\n              label=\"No Custom Commands\"\n              Logo={CommandIcon}\n              description=\"Create a custom command to use it here\"\n            />\n          )}\n        </div>\n        <div className=\"p-6 overflow-y-scroll\">\n          {Object.values(definitions.orbs).length > 0 ? (\n            mapDefinitions<OrbImportWithMeta>(definitions.orbs, (orb) => (\n              <CollapsibleList\n                pinned={\n                  <p className=\"font-normal flex ml-auto text-gray-400\">\n                    {orb.version}\n                  </p>\n                }\n                alwaysShowPinned\n                title={\n                  <div className=\"flex flex-row w-full\">\n                    <img\n                      className=\"w-6 p-1 mr-2\"\n                      src={orb.logo_url}\n                      alt={`${orb.name} logo`}\n                    />\n                    <p className=\"font-normal text-gray-500\">\n                      {orb.namespace}/\n                    </p>\n                    {orb.name}\n                  </div>\n                }\n              >\n                <div className=\"pt-2\">\n                  {orb.commands &&\n                    Object.values(orb.commands)?.map((command) => (\n                      <Card\n                        title={command.name}\n                        key={command.name}\n                        onClick={() => {\n                          props.setSubtype(command);\n                        }}\n                      />\n                    ))}\n                </div>\n              </CollapsibleList>\n            ))\n          ) : (\n            <Empty\n              label=\"No Imported Orbs\"\n              Logo={OrbIcon}\n              description=\"Import an orb with commands, and they will be accessible here\"\n            />\n          )}\n        </div>\n      </TabbedMenu>\n    </div>\n  );\n};\n\nconst StepTypePageNav: NavigationComponent = {\n  Component: StepTypePage,\n  Label: () => <p>New Step</p>,\n};\n\nexport default StepTypePageNav;\n","import { parsers, reusable } from '@circleci/circleci-config-sdk';\nimport CommandSummary from '../../components/atoms/summaries/CommandSummary';\nimport CommandInspector from '../../components/containers/inspector/CommandInspector';\nimport { componentParametersSubtypes } from '../../components/containers/inspector/subtypes/ParameterSubtypes';\nimport CommandIcon from '../../icons/components/CommandIcon';\nimport {\n  DefinitionAction,\n  definitionsAsArray,\n} from '../../state/DefinitionStore';\nimport InspectableMapping from '../InspectableMapping';\n\nexport const CommandMapping: InspectableMapping<reusable.CustomCommand> = {\n  key: 'commands',\n  name: {\n    singular: 'Command',\n    plural: 'Commands',\n  },\n  defaults: {\n    name: 'new-command',\n    steps: [],\n  },\n  parameters: componentParametersSubtypes.command,\n  subscriptions: {\n    commands: (prev, cur, c) => {\n      let steps;\n\n      if (cur) {\n        steps = c.steps.map((step) =>\n          step instanceof reusable.ReusableCommand && step.name === prev.name\n            ? new reusable.ReusableCommand(cur, step.parameters)\n            : step,\n        );\n      } else {\n        steps = c.steps.filter((step) =>\n          step instanceof reusable.ReusableCommand\n            ? step.name !== prev.name\n            : true,\n        );\n      }\n\n      return new reusable.CustomCommand(\n        c.name,\n        steps,\n        c.parameters,\n        c.description,\n      );\n    },\n  },\n  resolveObservables: (command) => ({\n    commands: command.steps.filter(\n      (command) => command instanceof reusable.ReusableCommand,\n    ),\n  }),\n  transform: ({ name, ...values }, definitions) => {\n    return parsers.parseCustomCommand(\n      name,\n      values,\n      definitionsAsArray(definitions.commands),\n      // TODO: Add dependency tracking to definition inspector, and use those arrays here\n    );\n  },\n  store: {\n    add: (actions) => actions.define_commands,\n    update: (actions) => actions.update_commands,\n    remove: (actions) => actions.delete_commands,\n  },\n  components: {\n    icon: CommandIcon,\n    summary: CommandSummary,\n    inspector: CommandInspector,\n  },\n  docsInfo: {\n    description: 'A %s defines a sequence of steps to be executed in a job.',\n    link: 'https://circleci.com/docs/reusing-config/#the-commands-key',\n  },\n};\n\nexport type CommandAction = DefinitionAction<reusable.CustomCommand>;\n\nexport type CommandActions = {\n  define_commands: CommandAction;\n  update_commands: CommandAction;\n  delete_commands: CommandAction;\n  cleanup_commands: CommandAction;\n};\n","import { FormikValues } from 'formik';\nimport CommandIcon from '../../../icons/components/CommandIcon';\nimport { CommandMapping } from '../../../mappings/components/CommandMapping';\nimport { DefinitionsModel } from '../../../state/DefinitionStore';\nimport { useStoreActions } from '../../../state/Hooks';\nimport AddButton from '../../atoms/AddButton';\nimport { Empty } from '../../atoms/Empty';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport ListProperty from '../../atoms/form/ListProperty';\nimport StepListItem from '../../atoms/form/StepListItem';\nimport { StepDefinitionMenu } from '../../menus/definitions/StepDefinitionMenu';\nimport StepTypePageNav from '../../menus/definitions/subtypes/StepTypePage';\nimport { navSubTypeMenu } from '../../menus/SubTypeMenu';\n\nconst CommandInspector = (\n  props: FormikValues & { definitions: DefinitionsModel },\n) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n\n  return (\n    <div>\n      <InspectorProperty\n        name=\"name\"\n        label=\"Name\"\n        required\n        value={props.values.name}\n      />\n      <InspectorProperty name=\"description\" label=\"Description\" as=\"textarea\" />\n      <ListProperty\n        label=\"Steps\"\n        name=\"steps\"\n        values={props.values}\n        expanded\n        required\n        empty={\n          <Empty\n            label=\"No Steps Yet\"\n            Logo={CommandIcon}\n            description={\n              <>\n                Add a step by clicking the button above.\n                <br />\n                At least one step is required.\n              </>\n            }\n          />\n        }\n        listItem={StepListItem}\n        pinned={\n          <AddButton\n            className='ml-auto flex'\n            onClick={() => {\n              navigateTo(\n                navSubTypeMenu(\n                  {\n                    typePage: StepTypePageNav,\n                    menuPage: StepDefinitionMenu,\n                    passThrough: { dataType: CommandMapping },\n                  },\n                  props.values,\n                ),\n              );\n            }}\n          />\n        }\n      />\n    </div>\n  );\n};\n\nexport default CommandInspector;\n","import {\n  executors,\n  Job,\n  parameters,\n  reusable,\n} from '@circleci/circleci-config-sdk';\nimport { ActionCreator, Actions, Target, TargetResolver } from 'easy-peasy';\nimport { ReactElement } from 'react';\nimport {\n  DefinitionsStoreModel,\n  DefinitionType,\n  MappingSubscriptions,\n  NamedGenerable,\n} from '../state/DefinitionStore';\nimport Store, { StoreActions, StoreModel, UpdateType } from '../state/Store';\nimport { CommandMapping } from './components/CommandMapping';\nimport { ExecutorMapping } from './components/ExecutorMapping';\nimport { JobMapping } from './components/JobMapping';\nimport { ParameterMapping } from './components/ParameterMapping';\nimport InspectableMapping from './InspectableMapping';\n\n/**\n * Interface to add a circleci-config-sdk component to a data mapping.\n */\nexport interface DataMapping {\n  key: string;\n  component: any[];\n  mapping: InspectableMapping;\n}\n\n/**\n * Registry of circleci-config-sdk component to data maps.\n */\n\n// Maybe add docs link to Executor and description as a key to each Mapping\nconst dataMappings: DataMapping[] = [\n  {\n    key: 'executors',\n    component: [\n      executors.DockerExecutor,\n      executors.MacOSExecutor,\n      executors.MachineExecutor,\n      executors.WindowsExecutor,\n    ],\n    mapping: ExecutorMapping,\n  },\n  {\n    key: 'jobs',\n    component: [Job],\n    mapping: JobMapping,\n  },\n  {\n    key: 'commands',\n    component: [reusable.CustomCommand],\n    mapping: CommandMapping,\n  },\n  {\n    key: 'parameters',\n    component: [parameters.CustomParameter],\n    mapping: ParameterMapping,\n  },\n];\n\n/**\n * Utility function for converting a component into a mapping type.\n * @param {any} data:any\n * @returns {any}\n */\nconst componentToType = (data: any): GenerableMapping | undefined => {\n  let foundType = undefined;\n\n  dataMappings.forEach((mapping) => {\n    if (typeof data === 'string' && mapping.key === data) {\n      foundType = mapping.mapping;\n      return;\n    } else {\n      mapping.component.forEach((type) => {\n        if (data instanceof type) {\n          foundType = mapping.mapping;\n          return;\n        }\n      });\n    }\n  });\n\n  return foundType;\n};\n\nconst typeToMapping = (componentType: string) => {\n  return dataMappings.find((mapping) => mapping.key === componentType);\n};\n\nexport { componentToType, typeToMapping, dataMappings };\n\nexport interface SubTypeMapping {\n  text: string;\n  description?: string;\n  docsLink?: string;\n  component?: any;\n  fields: ReactElement | React.FunctionComponent<any>;\n}\n\ntype StoreType = typeof Store;\n\n/**\n * circleci-config-sdk Generable to Data Mapping\n *\n * @interface\n */\nexport default interface GenerableMapping<\n  GenerableType extends NamedGenerable = any,\n  Subscriptions extends NamedGenerable = any,\n  SubscriptionTypes extends DefinitionType = any,\n> {\n  /**  String name type of component. Must be equal to index within registry. */\n  key: DefinitionType;\n  subscriptions?: MappingSubscriptions<\n    GenerableType,\n    Subscriptions,\n    SubscriptionTypes\n  >;\n  store: {\n    /** Returns easy-peasy add action hook for component array */\n    add: (state: Actions<StoreType>) => ActionCreator<GenerableType>;\n    /** Returns easy-peasy update action hook for data type */\n    update: (\n      state: Actions<StoreType>,\n    ) => (data: UpdateType<GenerableType>) => void;\n    /** Returns easy-peasy removal action hook for data type */\n    remove: (state: Actions<StoreType>) => (data: GenerableType) => void;\n    // optional overrides\n    onAdd?: (store: DefinitionsStoreModel, value: GenerableType) => void;\n    onUpdate?: (\n      store: DefinitionsStoreModel,\n      value: UpdateType<GenerableType>,\n    ) => GenerableType;\n    onRemove?: () => void;\n  };\n  storeHooks?: {\n    add?: (store: StoreModel, value: GenerableType) => void;\n    update?: (\n      store: StoreModel,\n      value: UpdateType<GenerableType>,\n    ) => GenerableType;\n    remove?: () => void;\n    cleanup?: () => void;\n  };\n  /**\n   * Store action resolver to watch other actions for changes.\n   */\n  externalUpdates?: (\n    actions: TargetResolver<StoreActions, {}>,\n  ) => Target | Target[];\n  resolveObservables?: (\n    generable: GenerableType,\n  ) => Record<SubscriptionTypes, Subscriptions | Subscriptions[]>;\n}\n","import InspectableMapping, {\n  GenerableInfoType,\n} from '../../mappings/InspectableMapping';\n\nconst ComponentInfo = ({\n  type,\n  docsInfo,\n}: {\n  type?: InspectableMapping;\n  docsInfo?: GenerableInfoType;\n}) => {\n  const docInfo = type?.docsInfo || docsInfo;\n  const parts = docInfo?.description.split('%s');\n\n  return (\n    <>\n      {parts && (\n        <p className=\"font-normal text-sm text-circle-black\">\n          {parts[0]}\n          <a\n            className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n            href={docInfo?.link}\n            target=\"circleci_docs\"\n          >\n            {type?.name.singular}\n          </a>\n          {parts[1]}\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default ComponentInfo;\n","import { orb } from '@circleci/circleci-config-sdk';\nimport { AnyParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport {\n  OrbImport,\n  OrbRef,\n} from '@circleci/circleci-config-sdk/dist/src/lib/Orb';\nimport {\n  OrbDisplayMeta,\n  OrbImportManifest,\n} from '@circleci/circleci-config-sdk/dist/src/lib/Orb/types/Orb.types';\nimport { useEffect, useState } from 'react';\nimport Loading from '../../../icons/ui/Loading';\nimport { typeToMapping } from '../../../mappings/GenerableMapping';\nimport InspectableMapping from '../../../mappings/InspectableMapping';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { NavigationComponent } from '../../../state/Store';\nimport { Button } from '../../atoms/Button';\nimport ComponentInfo from '../../atoms/ComponentInfo';\nimport Definition from '../../atoms/Definition';\nimport { Footer } from '../../atoms/Footer';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport CollapsibleList from '../../containers/CollapsibleList';\n\nexport class OrbImportWithMeta extends orb.OrbImport {\n  logo_url: string;\n  url: string;\n\n  constructor(\n    alias: string,\n    namespace: string,\n    orb: string,\n    manifest: OrbImportManifest,\n    version: string,\n    logo_url: string,\n    url: string,\n    description?: string,\n    display?: OrbDisplayMeta,\n  ) {\n    super(alias, namespace, orb, version, manifest, description, display);\n\n    this.logo_url = logo_url;\n    this.url = url;\n  }\n}\n\nexport type OrbDefinitionProps = {\n  name: string;\n  namespace: string;\n  version: string;\n  logo_url: string;\n  display: OrbDisplayMeta;\n  description: string;\n  url: string;\n};\n\nexport const loadOrb = (orb: string, value?: OrbImport, alias?: string) => {\n  const endpoint =\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:3030'\n      : 'https://orb-indexer-proxy.herokuapp.com';\n\n  return fetch(`${endpoint}/orbs?orb=${orb}`).then(\n    (resp) =>\n      new Promise<{\n        orb: string | OrbImport;\n        manifest: OrbImportManifest;\n        alias?: string;\n      }>((res, rej) => {\n        resp\n          .json()\n          .then((manifest) => {\n            res({\n              orb: value ?? orb,\n              manifest,\n              alias,\n            });\n          })\n          .catch((err) => {\n            rej(err);\n          });\n      }),\n  );\n};\n\nconst orbDefinitions = ['jobs', 'commands', 'executors'] as Array<\n  'jobs' | 'commands' | 'executors'\n>;\n\nconst OrbDefinitionContainer = (props: {\n  dataMapping: InspectableMapping;\n  data: Record<string, OrbRef<AnyParameterLiteral>>;\n}) => {\n  return Object.values(props.data).length > 0 ? (\n    <>\n      <CollapsibleList\n        expanded\n        className=\"py-4\"\n        classNameExpanded=\"py-4\"\n        title={props.dataMapping.name.plural || ''}\n      >\n        <>\n          <div className=\"p-2 mb-2\">\n            <ComponentInfo type={props.dataMapping} />\n          </div>\n          {Object.entries(props.data).map(([name, ref]) => (\n            <Definition\n              key={name}\n              type={props.dataMapping}\n              data={ref}\n              index={-1}\n            />\n          ))}\n        </>\n      </CollapsibleList>\n      <span className=\"flex w-full border-b border-circle-gray-300\"></span>\n    </>\n  ) : (\n    <></>\n  );\n};\n\nconst OrbDefinitionsMenu = (props: OrbDefinitionProps) => {\n  const orbs = useStoreState((state) => state.definitions.orbs);\n  const importOrb = useStoreActions((actions) => actions.importOrb);\n  const unimportOrb = useStoreActions((actions) => actions.unimportOrb);\n  const [orb, setOrb] = useState<OrbImportWithMeta>();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    loadOrb(`${props.namespace}/${props.name}@${props.version}`)\n      .then(({ manifest }) => {\n        setOrb(\n          new OrbImportWithMeta(\n            props.name,\n            props.namespace,\n            props.name,\n            manifest,\n            props.version,\n            props.logo_url,\n            props.url,\n            props.description,\n          ),\n        );\n      })\n      .catch(() => {\n        setError(true);\n      });\n  }, [setOrb, props]);\n\n  const inProject = Object.values(orbs).find(\n    (importedOrb) =>\n      importedOrb.value.namespace === orb?.namespace &&\n      importedOrb.value.name === orb.name,\n  );\n\n  return (\n    <div aria-label=\"Orbs Defintion Menu\" className=\"h-full flex flex-col\">\n      <header className=\"border-b border-circle-gray-300\">\n        <BreadCrumbs />\n        <div className=\"px-6 p-3\">\n          <div className=\"flex flex-row\">\n            <h2 className=\"text-circle-gray-400\">{props.version}</h2>\n            <a\n              className=\"flex ml-auto cursor-pointer tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n              href={orb?.url}\n              target=\"circleci_devhub\"\n              onClick={(e) => {\n                e.stopPropagation();\n              }}\n            >\n              View on Dev Hub\n            </a>\n          </div>\n          <div className=\"flex flex-row mt-3\">\n            <div className=\"rounded-full bg-white shadow flex w-8 h-8 p-px\">\n              <img\n                className=\"rounded-full my-auto\"\n                src={props.logo_url}\n                alt=\"\"\n              />\n            </div>\n            <h1 className=\"ml-2 text-xl font-thin text-circle-gray-500\">\n              {props.namespace}/\n            </h1>\n            <h1 className=\"text-xl\">{props.name}</h1>\n          </div>\n          <p className=\"mr-5 py-3 flex text-sm text-circle-gray-400\">\n            {props.description}\n          </p>\n        </div>\n      </header>\n      {orb ? (\n        <div className=\"px-2 h-full flex flex-col\">\n          <div\n            className=\"flex flex-col overflow-y-scroll h-auto px-4\"\n            style={{ height: `calc(100vh - 321px)` }}\n          >\n            {orbDefinitions.map((component) => {\n              const mapping = typeToMapping(component);\n\n              if (mapping) {\n                return (\n                  <OrbDefinitionContainer\n                    key={component}\n                    dataMapping={mapping.mapping}\n                    data={orb[component]}\n                  />\n                );\n              }\n              return <p>Error</p>;\n            })}\n          </div>\n          <Footer>\n            {inProject ? (\n              <Button\n                onClick={() => {\n                  if (orb) {\n                    unimportOrb(orb);\n                  }\n                }}\n                variant=\"dangerous\"\n              >\n                Remove Orb from Config\n              </Button>\n            ) : (\n              <Button\n                onClick={() => {\n                  if (orb) {\n                    importOrb(orb);\n                  }\n                }}\n                variant=\"primary\"\n              >\n                Import Orb\n              </Button>\n            )}\n          </Footer>\n        </div>\n      ) : error ? (\n        <p className=\"font-medium pl-3 py-4 text-circle-red-dangerous\">\n          Error loading orb. It likely uses an advanced feature not yet\n          supported. Sorry for the inconvenience!\n        </p>\n      ) : (\n        <div className=\"flex m-auto\">\n          <Loading />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst OrbDefinitionMenuNav: NavigationComponent = {\n  Component: OrbDefinitionsMenu,\n  Label: (props: OrbDefinitionProps) => {\n    return <p>{props.name}</p>;\n  },\n  Icon: (props: OrbDefinitionProps) => {\n    return (\n      <div className=\"w-4 h-4 rounded-full flex shadow\">\n        <img className=\"my-auto\" src={props.logo_url} alt=\"\" />\n      </div>\n    );\n  },\n};\n\nexport { OrbDefinitionMenuNav, OrbDefinitionsMenu };\n","import { createTypedHooks } from 'easy-peasy';\nimport { useEffect, useState } from 'react';\nimport { StoreActions, StoreModel } from './Store';\n\nimport { parse } from 'yaml';\nimport { OrbImportManifest } from '@circleci/circleci-config-sdk/dist/src/lib/Orb/types/Orb.types';\nimport { Config, parsers } from '@circleci/circleci-config-sdk';\nimport { loadOrb } from '../components/menus/definitions/OrbDefinitionsMenu';\nconst typedHooks = createTypedHooks<StoreModel & StoreActions>();\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\nexport type CallbackResponse =\n  | {\n      config: Config;\n      manifests: Record<string, OrbImportManifest> | undefined;\n    }\n  | Error;\n\nexport const parseConfigHook = (\n  yml: string,\n  callback: (res: CallbackResponse) => void,\n) => {\n  const setConfig = (\n    yml: string,\n    orbImports?: Record<string, OrbImportManifest>,\n  ) => {\n    let parseResult;\n    try {\n      parseResult = {\n        config: parsers.parseConfig(yml, orbImports),\n        manifests: orbImports,\n      };\n    } catch (e) {\n      parseResult = e as Error;\n    }\n    callback(parseResult);\n  };\n\n  const configBlob = parse(yml);\n\n  if ('orbs' in configBlob) {\n    if (!configBlob.orbs) {\n      setConfig(yml);\n      return;\n    }\n\n    const orbPromises = Object.entries(configBlob.orbs).map(\n      ([alias, stanza]) => {\n        const parsedOrb = parsers.parseOrbImport({ [alias]: stanza });\n        if (!parsedOrb) {\n          throw new Error(`Could not parse orb ${alias}`);\n        }\n        return loadOrb(stanza as string, parsedOrb, alias);\n      },\n    );\n\n    Promise.all(orbPromises).then((loadedOrbs) => {\n      const orbImports: Record<string, OrbImportManifest> = Object.assign(\n        {},\n        ...loadedOrbs.map(({ orb, manifest, alias }) => {\n          if (!alias) {\n            throw new Error(`Could not load orb ${orb}`);\n          }\n          return {\n            [alias]: manifest,\n          };\n        }),\n      );\n      setConfig(yml, orbImports);\n    });\n  } else {\n    setConfig(yml);\n  }\n};\n\nexport const useConfigParser = () => {\n  return parseConfigHook;\n};\n","import { useStoreState } from '../../state/Hooks';\n\nconst Toast = (props: any & { width: number }) => {\n  const toast = useStoreState((state) => state.toast);\n\n  return (\n    <>\n      {toast && (\n        <div {...props}>\n          <div\n            className={`flex flex-row z-1 text-white bg-circle-gray-700 p-3 w-full rounded transition-opacity`}\n            aria-label={toast?.label}\n          >\n            <p className=\"font-bold mx-2 overflow-ellipsis overflow-x-hidden whitespace-nowrap my-auto\">\n              {toast?.label}\n            </p>\n            <p className=\"my-auto\">{toast?.content}</p>\n            {toast.link && (\n              <a\n                className=\"text-circle-blue-light ml-auto font-medium\"\n                href={toast.link.url}\n                target=\"circleci_issue\"\n              >\n                {toast.link.label}\n              </a>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Toast;\n","import { IconProps } from '../IconProps';\n\nexport interface ToolTipProps {\n  size?: number;\n  direction: 'right' | 'left' | 'top' | 'bottom';\n}\n\nconst ToolTipPointerIcon = (props: IconProps & ToolTipProps) => {\n  const size = props.size || 8;\n\n  const direction = {\n    right: `M 0 0 L ${size / 2} ${size / 2} L 0 ${size}`,\n    left: `M 0 ${size} L ${size / 2} ${size / 2} L 0 0`,\n    top: `M 0 ${size / 2} L ${size / 2} 0 L ${size} ${size / 2}`,\n    bottom: `M 0 0 L ${size / 2} ${size / 2} L ${size} 0`,\n  };\n\n  const horizontal = props.direction === 'top' || props.direction === 'bottom';\n\n  return (\n    <svg\n      viewBox={`0 0 ${horizontal ? size : size / 2} ${\n        horizontal ? size : size / 2\n      }`}\n      className={props.className}\n      fill={props.color || '#000000'}\n    >\n      <path d={direction[props.direction]} />\n    </svg>\n  );\n};\n\nexport default ToolTipPointerIcon;\n","import {\n  MutableRefObject,\n  ReactElement,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport ToolTipPointerIcon from '../../icons/ui/ToolTipPointerIcon';\n\nexport type Direction = 'top' | 'bottom' | 'left' | 'right';\nexport interface ToolTipProps {\n  target: MutableRefObject<any>;\n  facing?: 'top' | 'bottom' | 'left' | 'right';\n  children: ReactElement;\n}\n\nconst getPos = (\n  tooltip: HTMLElement | null,\n  target: HTMLElement | null,\n  facing?: Direction,\n) => {\n  const tipRect = tooltip?.getBoundingClientRect();\n  const rect = target?.getBoundingClientRect();\n  let width = 240;\n  let values = {};\n\n  if (tipRect && rect) {\n    if (facing === 'bottom') {\n      values = {\n        top: rect.y - tipRect?.height + 4,\n        left: rect.x - width / 2 + rect.width / 2,\n      };\n    }\n  }\n\n  return { ...values, width };\n};\n\nconst ToolTip = ({ target, facing, children }: ToolTipProps) => {\n  const ref = useRef(null);\n  const [pos, setPos] = useState(getPos(ref.current, target.current, facing));\n  const cur = ref.current;\n  const targetCur = target.current;\n\n  useEffect(() => {\n    setPos(getPos(cur, targetCur, facing));\n  }, [targetCur, cur, facing]);\n\n  return (\n    <div style={pos} ref={ref} className=\"fixed flex z-30 flex-col\">\n      {ref.current && (\n        <>\n          <div className=\"text-white bg-circle-gray-750 text-sm rounded p-2\">\n            {children}\n          </div>\n          <ToolTipPointerIcon\n            color=\"#343434\"\n            className=\"h-3\"\n            direction={facing || 'right'}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { useCallback, useEffect } from 'react';\nimport { FocusScope } from 'react-aria';\nimport DeleteItemIcon from '../../icons/ui/DeleteItemIcon';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport { Button, ButtonVariant } from '../atoms/Button';\n\nexport type ConfirmationType = 'save' | 'delete';\nexport type ConfirmationDialogue = {\n  header: string;\n  body: string;\n  button: string;\n  buttonVariant: ButtonVariant;\n};\n\nexport type ConfirmationModalModel = {\n  modalDialogue: ConfirmationType | ConfirmationDialogue;\n  labels: string[];\n  onConfirm: () => void;\n};\n\nexport type ConfirmationDialogueTemplates = Record<\n  ConfirmationType,\n  ConfirmationDialogue\n>;\n\nconst placeholder = '%s';\nconst confirmDialogue: ConfirmationDialogueTemplates = {\n  save: {\n    header: `Do you want to save changes to ${placeholder}?`,\n    body: 'If you choose not to save, your changes will be lost.',\n    button: 'Save',\n    buttonVariant: 'primary',\n  },\n  delete: {\n    header: `Delete ${placeholder} ${placeholder}?`,\n    body: `When you delete the ${placeholder} named ${placeholder}, it will be removed from each component that uses it. \n    This definition has %s dependent components.`,\n    button: 'Delete',\n    buttonVariant: 'dangerous',\n  },\n};\n\nconst ConfirmationModal = () => {\n  const confirm = useStoreState((state) => state.confirm);\n  const updateConfirmation = useStoreActions(\n    (actions) => actions.triggerConfirmation,\n  );\n\n  const dialogue =\n    typeof confirm?.modalDialogue === 'string'\n      ? confirmDialogue[confirm.modalDialogue]\n      : confirm?.modalDialogue;\n  const dialogueBox = { x: 478, y: 250 }; // TODO: make this dynamic\n\n  const closeHandler = useCallback(() => {\n    updateConfirmation(undefined);\n  }, [updateConfirmation]);\n\n  const handleUserKeyPress = useCallback(\n    (event) => {\n      const { key } = event;\n      if (key === 'Escape') {\n        closeHandler();\n      }\n    },\n    [closeHandler],\n  );\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleUserKeyPress);\n    return () => {\n      window.removeEventListener('keydown', handleUserKeyPress);\n    };\n  }, [handleUserKeyPress]);\n\n  /**\n   * Replace placeholders in the dialogue body with the provided confirmation values.\n   */\n  const populatePlaceholders = (input: string) => {\n    const parts = input.split(placeholder);\n\n    return parts.map((part, index) => (\n      <>\n        {part}\n        {index !== parts.length - 1 && (\n          <strong>{confirm?.labels[index]}</strong>\n        )}\n      </>\n    ));\n  };\n\n  // implement dialog dictionary, make it pretty, functionality first bro, get components to delete\n  return (\n    <>\n      {confirm && dialogue && (\n        <div\n          aria-label=\"Confirmation Modal\"\n          className=\"absolute left-0 top-0 w-full h-full z-50 flex\"\n          style={{ background: 'rgba(20,20,20,.8)' }}\n        >\n          <FocusScope contain autoFocus>\n            <div\n              className=\"bg-white w-min rounded absolute\"\n              style={{\n                left: `calc(50% - ${dialogueBox.x / 2}px`,\n                top: `calc(50% - ${dialogueBox.y / 2}px`,\n              }}\n            >\n              <div className=\"px-8 py-4\">\n                <h3 className=\"font-extrabold py-4 text-2xl\">\n                  {populatePlaceholders(dialogue.header)}\n                </h3>\n                <div className=\"w-96 h-20 pt-2\">\n                  {populatePlaceholders(dialogue.body)}\n                </div>\n              </div>\n              <div className=\"border-t border-circle-gray-400 p-4 py-6 flex\">\n                <div className=\"ml-auto\">\n                  <Button\n                    variant=\"secondary\"\n                    type=\"button\"\n                    onClick={closeHandler}\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    variant={dialogue.buttonVariant}\n                    type=\"button\"\n                    onClick={() => {\n                      confirm.onConfirm();\n                      updateConfirmation(undefined);\n                    }}\n                  >\n                    {dialogue.button}\n                  </Button>\n                </div>\n                <button\n                  className=\"absolute w-14 h-10 top-0 right-0 hover:bg-circle-gray-300 rounded\"\n                  onClick={closeHandler}\n                >\n                  <DeleteItemIcon\n                    className=\"m-auto w-3 h-3\"\n                    color=\"#555555\"\n                  ></DeleteItemIcon>\n                </button>\n              </div>\n            </div>\n          </FocusScope>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ConfirmationModal;\n","import * as React from 'react';\n\nimport {\n  ActionId,\n  ActionImpl,\n  createAction,\n  KBarAnimator,\n  KBarPortal,\n  KBarPositioner,\n  KBarProvider,\n  KBarResults,\n  KBarSearch,\n  useMatches,\n} from 'kbar';\n\nconst KBarList = (props: any) => {\n  const initialActions = [\n    {\n      id: 'Inspector',\n      name: 'Inspector Pane',\n      shortcut: ['n'],\n      keywords: 'core elements',\n      section: 'Commands',\n      subtitle: 'Create and edit config components.',\n      perform: () => {\n        const focus = document.getElementById('Naviagtion-Pane');\n\n        if (focus) {\n          focus.click();\n          focus.scrollIntoView();\n        }\n      },\n    },\n    {\n      id: 'Editor',\n      name: 'Editor Pane',\n      shortcut: ['e'],\n      keywords: 'yaml config',\n\n      perform: () => {\n        const focus = document.getElementById('Editor-Pane');\n\n        if (focus) {\n          focus.scrollIntoView();\n        }\n      },\n    },\n    {\n      id: 'Workflow',\n      name: 'Workflow Pane',\n      subtitle: 'Orchestrate your CI workflow.',\n      shortcut: ['w'],\n      keywords: 'jobs workflow',\n\n      perform: () => {\n        const focus = document.getElementById('Workflows-Pane');\n\n        if (focus) {\n          focus.click();\n          focus.scrollIntoView();\n        }\n      },\n    },\n\n    createAction({\n      name: 'View Source',\n      subtitle: 'View the source on GitHub.',\n      shortcut: ['s'],\n      keywords: 'source code',\n      section: 'Links',\n      perform: () =>\n        window.open(\n          'https://github.com/CircleCI-Public/visual-config-editor',\n          '_blank',\n        ),\n    }),\n    createAction({\n      name: 'Documentation',\n      shortcut: ['d', 'h'],\n      keywords: 'documentation help',\n      subtitle: 'Open CircleCI documentation homepage.',\n      section: 'Links',\n      perform: () => window.open('https://circleci.com/docs', '_blank'),\n    }),\n  ];\n\n  return (\n    <KBarProvider\n      options={{\n        enableHistory: true,\n      }}\n      actions={initialActions}\n    >\n      <KBarPortal>\n        <KBarPositioner className=\"z-50\">\n          <KBarAnimator className=\"px-3 bg-white rounded-lg py-4 w-1/2 box-border overflow-hidden\">\n            <KBarSearch className=\"px-3 py-4 w-full mb-1\" />\n            <RenderResults />\n          </KBarAnimator>\n        </KBarPositioner>\n      </KBarPortal>\n    </KBarProvider>\n  );\n};\n\nfunction RenderResults() {\n  const { results, rootActionId } = useMatches();\n\n  return (\n    <KBarResults\n      items={results}\n      onRender={({ item, active }) =>\n        typeof item === 'string' ? (\n          <div className=\"px-2 py-4 uppercase text-circle-gray-500 text-xs font-semibold\">\n            {item}\n          </div>\n        ) : (\n          <ResultItem\n            action={item}\n            active={active}\n            currentRootActionId={rootActionId || ''}\n          />\n        )\n      }\n    />\n  );\n}\n\nconst ResultItem = React.forwardRef(\n  (\n    {\n      action,\n      active,\n      currentRootActionId,\n    }: {\n      action: ActionImpl;\n      active: boolean;\n      currentRootActionId: ActionId;\n    },\n    ref: React.Ref<HTMLDivElement>,\n  ) => {\n    const ancestors = React.useMemo(() => {\n      if (!currentRootActionId) return action.ancestors;\n      const index = action.ancestors.findIndex(\n        (ancestor) => ancestor.id === currentRootActionId,\n      );\n\n      return action.ancestors.slice(index + 1);\n    }, [action.ancestors, currentRootActionId]);\n\n    return (\n      <div\n        ref={ref}\n        className=\"px-3 py-4 w-full justify-between flex items-center cursor-pointer hover:bg-circle-gray-100\"\n      >\n        <div className=\"flex gap-2 items-center text-sm\">\n          {action.icon && action.icon}\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <div>\n              {ancestors.length > 0 &&\n                ancestors.map((ancestor) => (\n                  <React.Fragment key={ancestor.id}>\n                    <span\n                      style={{\n                        opacity: 0.5,\n                        marginRight: 8,\n                      }}\n                    >\n                      {ancestor.name}\n                    </span>\n                    <span\n                      style={{\n                        marginRight: 8,\n                      }}\n                    ></span>\n                  </React.Fragment>\n                ))}\n              <span>{action.name}</span>\n            </div>\n            {action.subtitle && (\n              <span style={{ fontSize: 12 }}>{action.subtitle}</span>\n            )}\n          </div>\n        </div>\n        {action.shortcut?.length ? (\n          <div\n            aria-hidden\n            style={{ display: 'grid', gridAutoFlow: 'column', gap: '4px' }}\n          >\n            {action.shortcut.map((sc) => (\n              <kbd\n                key={sc}\n                style={{\n                  padding: '4px 6px',\n                  background: 'rgba(0 0 0 / .1)',\n                  borderRadius: '4px',\n                  fontSize: 14,\n                }}\n              >\n                {sc}\n              </kbd>\n            ))}\n          </div>\n        ) : null}\n      </div>\n    );\n  },\n);\n\nexport default KBarList;\n","import { IconProps } from '../IconProps';\n\nconst CopyIcon = (props: IconProps) => (\n  <svg className={props.className} viewBox=\"0 0 16 20\" fill={props.color}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M7 2C6.44772 2 6 2.44772 6 3V13C6 13.5523 6.44772 14 7 14H13C13.5523 14 14 13.5523 14 13V8H11C9.89543 8 9 7.10457 9 6V2H7ZM11 3.5V6H13.381L11 3.5ZM4 3C4 1.34315 5.34315 0 7 0H9.14286C9.96389 0 10.749 0.336495 11.3153 0.931035L15.1724 4.98104C15.7037 5.53886 16 6.27967 16 7.05V13C16 14.6569 14.6569 16 13 16H12V17C12 18.6569 10.6569 20 9 20H3C1.34315 20 0 18.6569 0 17V7C0 5.34315 1.34315 4 3 4H4V3ZM7 16H10V17C10 17.5523 9.55229 18 9 18H3C2.44772 18 2 17.5523 2 17V7C2 6.44772 2.44772 6 3 6H4V13C4 14.6569 5.34315 16 7 16Z\"\n      fill=\"#343434\"\n    />\n  </svg>\n);\n\nexport default CopyIcon;\n","import { IconProps } from '../IconProps';\n\nconst OpenIcon = (props: IconProps) => (\n  <svg className={props.className} viewBox=\"0 0 21 20\">\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      fill={props.color}\n      d=\"M13.2947 5.70711C13.6852 6.09763 14.3184 6.09763 14.7089 5.70711C15.0995 5.31658 15.0995 4.68342 14.7089 4.29289L10.7089 0.292893C10.5214 0.105357 10.267 0 10.0018 0C9.73661 0 9.48226 0.105357 9.29472 0.292893L5.29472 4.29289C4.9042 4.68342 4.9042 5.31658 5.29472 5.70711C5.68525 6.09763 6.31841 6.09763 6.70894 5.70711L9.00183 3.41421L9.00183 14C9.00183 14.5523 9.44954 15 10.0018 15C10.5541 15 11.0018 14.5523 11.0018 14L11.0018 3.41421L13.2947 5.70711ZM2.03125 15C2.03125 14.4477 1.58353 14 1.03125 14C0.478965 14 0.03125 14.4477 0.03125 15V17C0.03125 18.6569 1.3744 20 3.03125 20H17.0312C18.6881 20 20.0312 18.6569 20.0312 17V15C20.0312 14.4477 19.5835 14 19.0312 14C18.479 14 18.0312 14.4477 18.0312 15V17C18.0312 17.5523 17.5835 18 17.0312 18H3.03125C2.47897 18 2.03125 17.5523 2.03125 17V15Z\"\n    />\n  </svg>\n);\n\nexport default OpenIcon;\n","import { useRef } from 'react';\nimport OpenIcon from '../../icons/ui/OpenIcon';\nimport {\n  useConfigParser,\n  useStoreActions,\n  useStoreState,\n} from '../../state/Hooks';\nimport { Button } from '../atoms/Button';\n\nexport const OpenConfig = () => {\n  const inputFile = useRef<HTMLInputElement>(null);\n  const config = useStoreState((state) => state.config);\n  const loadConfig = useStoreActions((actions) => actions.loadConfig);\n  const parseConfig = useConfigParser();\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        accept=\".yml,.yaml\"\n        ref={inputFile}\n        className=\"hidden\"\n        onChange={(e) => {\n          if (!e.target.files) {\n            console.error('File upload failed');\n            return;\n          }\n\n          e.target.files[0].text().then((yml) => {\n            parseConfig(yml, loadConfig);\n          });\n        }}\n      />\n      <Button\n        variant={config ? 'secondary' : 'primary'}\n        margin=\"2\"\n        className=\"w-10 whitespace-nowrap flex ml-auto\"\n        onClick={(e) => {\n          inputFile.current?.click();\n          e.stopPropagation();\n        }}\n      >\n        <OpenIcon className=\"w-5\" color={config ? '#161616' : '#FFFFFF'} />\n      </Button>\n    </>\n  );\n};\n","import blogpost from './blogpost.json';\nimport readme from './readme.json';\n\nconst templates = {\n  blogpost,\n  readme,\n};\n\nexport default templates;\n","import Editor, { DiffEditor } from '@monaco-editor/react';\nimport { useEffect, useState } from 'react';\nimport CopyIcon from '../../icons/ui/CopyIcon';\nimport {\n  useConfigParser,\n  useStoreActions,\n  useStoreState,\n} from '../../state/Hooks';\nimport { version } from '../../version.json';\nimport { Button } from '../atoms/Button';\nimport { OpenConfig } from '../atoms/OpenConfig';\nimport templates from '../../examples';\n\nconst EditorPane = (props: any) => {\n  const config = useStoreState((state) => state.config);\n  const error = useStoreState((state) => state.configError);\n  const [example, setExample] = useState<string | undefined>(undefined);\n  const editingConfig = useStoreState((state) => state.editingConfig);\n  const loadConfig = useStoreActions((actions) => actions.loadConfig);\n  const parseConfig = useConfigParser();\n\n  useEffect(() => {\n    const params = new URLSearchParams(window.location.search);\n\n    if (params.has('example') && !example) {\n      const queryConfig = params.get('example');\n\n      if (!queryConfig) {\n        return;\n      }\n\n      setExample(queryConfig);\n\n      if (queryConfig in templates) {\n        const template = templates[queryConfig as keyof typeof templates];\n\n        parseConfig(JSON.stringify(template, null, 2), loadConfig);\n      }\n    }\n  }, [example, loadConfig, parseConfig]);\n\n  const configYAML = (yml: string) => {\n    const matchSDKComment = yml?.match('# SDK Version: .*\\n');\n\n    if (yml && matchSDKComment && matchSDKComment.index) {\n      const comment = `# VCE Version: ${version}\\n# Modeled with the CircleCI visual config editor.\\n# For more information, see https://github.com/CircleCI-Public/visual-config-editor\\n`;\n      const endOfSDKComment = matchSDKComment.index + matchSDKComment[0].length;\n\n      return (\n        yml.substring(0, endOfSDKComment) +\n        comment +\n        yml.substring(endOfSDKComment, yml.length)\n      );\n    }\n\n    return yml;\n  };\n\n  const editorText = error || (config && configYAML(config));\n\n  return (\n    <div\n      id=\"Editor-Pane\"\n      aria-label=\"Editor Pane\"\n      className=\"bg-circle-gray-900 h-2/5 w-full flex flex-col\"\n    >\n      <div className=\"border-b text-xl border-circle-gray-800 font-bold flex flex-row\">\n        <div className=\"ml-4 border-b-4 px-3 py-2 pt-4 w-max text-sm tracking-wide font-bold text-white border-white\">\n          CONFIG\n        </div>\n        <div className=\"p-2 ml-auto flex flex-row\">\n          <Button\n            variant={'secondary'}\n            disabled={!config}\n            className=\"whitespace-nowrap flex ml-auto w-10\"\n            onClick={() => {\n              if (config) {\n                navigator.clipboard.writeText(configYAML(config));\n              }\n            }}\n          >\n            <CopyIcon className=\"w-4\" color={config ? '#161616' : '#FFFFFF'} />\n          </Button>\n          <OpenConfig />\n        </div>\n      </div>\n      <div className=\"flex-1 overflow-hidden\">\n        {editingConfig ? (\n          <DiffEditor\n            theme=\"vs-dark\"\n            language=\"yaml\"\n            original={config && configYAML(config)}\n            modified={editingConfig && configYAML(editingConfig)}\n          />\n        ) : (\n          <Editor\n            theme=\"vs-dark\"\n            wrapperProps={{ className: 'flex-1 flex-grow' }}\n            language={config ? 'yaml' : 'terminal'}\n            value={editorText}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EditorPane;\n","import { FocusScope } from 'react-aria';\nimport { inspectorWidth } from '../../App';\nimport { useStoreState } from '../../state/Hooks';\n\ninterface NavigationPaneProps {\n  width: number;\n}\n\n/**\n * @see\n * @returns\n */\nconst NavigationPane = (props: any, { width }: NavigationPaneProps) => {\n  const navigation = useStoreState((state) => state.navigation);\n  const NavPage = navigation.component.Component;\n\n  return (\n    <FocusScope contain={false}>\n      <div\n        ref={props.navigationPane}\n        aria-label=\"Navigation Pane\"\n        className=\"h-full border-l border-circle-gray-300 pt-6 bg-white flex flex-col overflow-y-hidden\"\n        style={{ width: inspectorWidth }}\n        id=\"Navigation-Pane\"\n      >\n        <NavPage {...navigation.props} />\n      </div>\n    </FocusScope>\n  );\n};\n\nexport default NavigationPane;\n","import { IconProps } from '../IconProps';\n\nconst Logo = ({ className }: IconProps) => (\n  <svg\n    width=\"24\"\n    height=\"25\"\n    viewBox=\"0 0 24 25\"\n    className={className}\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M6.75043 2.5C5.20317 2.5 4.00907 3.79028 4.00875 5.29917L4 19.698C4 21.2071 5.19421 22.4977 6.74168 22.4977H14.2553C13.7775 21.9186 13.416 21.2401 13.2064 20.4977H6.74168C6.36374 20.4977 6.00013 20.1684 6 19.698L6.00875 5.29977C6.00875 4.82917 6.37242 4.5 6.75043 4.5H12.877V9.29905C12.877 9.57519 13.1008 9.79905 13.377 9.79905H18.0034V13.5221C18.167 13.5075 18.3326 13.5 18.5 13.5C19.0213 13.5 19.5256 13.5725 20.0034 13.708V9.71152C20.0034 8.93031 19.6987 8.17991 19.154 7.61988L15.058 3.40837C14.4932 2.82763 13.7175 2.5 12.9074 2.5H6.75043ZM21.1889 18.762C21.1961 18.8425 21.1997 18.9195 21.1997 19C21.1997 19.0805 21.1961 19.1575 21.1853 19.238L21.8548 19.7315C21.9988 19.84 22.0384 20.0325 21.9484 20.1865L21.2753 21.317C21.1853 21.471 20.9909 21.534 20.8253 21.464L20.0514 21.1455C19.9182 21.2365 19.7779 21.317 19.6303 21.3835L19.5259 22.192C19.5043 22.367 19.3495 22.5 19.1695 22.5H17.8269C17.6469 22.5 17.4921 22.367 17.4705 22.192L17.3661 21.3835C17.2185 21.317 17.0782 21.2365 16.945 21.1455L16.1711 21.464C16.0055 21.534 15.8111 21.471 15.7211 21.317L15.048 20.1865C14.958 20.0325 14.9976 19.8365 15.1416 19.7315L15.8111 19.238C15.8039 19.1575 15.8003 19.0805 15.8003 19C15.8003 18.9195 15.8039 18.8425 15.8111 18.7655L15.1416 18.272C14.9976 18.1635 14.958 17.971 15.048 17.817L15.7211 16.683C15.8111 16.529 16.0055 16.466 16.1711 16.536L16.945 16.8545C17.0782 16.7635 17.2185 16.683 17.3661 16.6165L17.4705 15.808C17.4921 15.633 17.6469 15.5 17.8305 15.5H19.1731C19.3531 15.5 19.5079 15.633 19.5295 15.808L19.6339 16.6165C19.7815 16.683 19.9218 16.7635 20.055 16.8545L20.8289 16.536C20.9945 16.466 21.1889 16.529 21.2789 16.683L21.952 17.8135C22.042 17.9675 22.0024 18.1635 21.8584 18.2685L21.1889 18.762ZM17.2545 19C17.2545 19.6755 17.8197 20.225 18.5144 20.225C19.2091 20.225 19.7743 19.6755 19.7743 19C19.7743 18.3245 19.2091 17.775 18.5144 17.775C17.8197 17.775 17.2545 18.3245 17.2545 19Z\"\n      fill=\"#161616\"\n    />\n  </svg>\n);\n\nexport default Logo;\n","import { IconProps } from '../IconProps';\n\nconst MoreIcon = (props: IconProps) => (\n  <svg width=\"18\" height=\"4\" viewBox=\"0 0 18 4\" className={props.className}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M14 2C14 3.10457 14.8954 4 16 4C17.1046 4 18 3.10457 18 2C18 0.89543 17.1046 0 16 0C14.8954 0 14 0.89543 14 2ZM7 2C7 3.10457 7.89543 4 9 4C10.1046 4 11 3.10457 11 2C11 0.89543 10.1046 0 9 0C7.89543 0 7 0.89543 7 2ZM2 4C0.89543 4 0 3.10457 0 2C0 0.89543 0.89543 0 2 0C3.10457 0 4 0.89543 4 2C4 3.10457 3.10457 4 2 4Z\"\n      fill=\"#343434\"\n    />\n  </svg>\n);\n\nexport default MoreIcon;\n","import MoreIcon from '../../icons/ui/MoreIcon';\nimport DropdownContainer from '../containers/DropdownContainer';\n\nexport const ExternalLinks = () => {\n  const links = [\n    {\n      name: 'Report an Issue',\n      url: 'https://github.com/CircleCI-Public/visual-config-editor/issues/new/choose',\n    },\n    {\n      name: 'Contribute',\n      url: 'https://github.com/CircleCI-Public/visual-config-editor',\n    },\n  ];\n  return (\n    <DropdownContainer alignLeft>\n      <div className=\"flex rounded-md px-4 h-10 items-center justify-center border bg-circle-gray-250 hover:bg-circle-gray-300\">\n        <MoreIcon className=\"w-5 my-auto flex\" />\n      </div>\n      <div className=\"rounded border border-circle-gray-300 p-2 z-30 bg-white flex flex-col\">\n        {links.map((link) => (\n          <a\n            href={link.url}\n            key={link.name}\n            className=\"rounded flex w-full hover:bg-circle-gray-250 border-b border-circle-gray-300 p-2\"\n          >\n            {link.name}\n          </a>\n        ))}\n      </div>\n    </DropdownContainer>\n  );\n};\n","import { useState } from 'react';\nimport ExpandIcon from '../../icons/ui/ExpandIcon';\nimport FilterIcon from '../../icons/ui/FilterIcon';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport { Button } from '../atoms/Button';\nimport { Select } from '../atoms/Select';\nimport DropdownContainer from './DropdownContainer';\n\nexport default function PreviewToolbox() {\n  const toolbox = useStoreState((state) => state.previewToolbox);\n  const updateToolbox = useStoreActions(\n    (actions) => actions.updatePreviewToolBox,\n  );\n  const [expanded, setExpanded] = useState(false);\n  const [filter, setFilter] = useState(toolbox.filter.pattern);\n\n  const updateFilter = (\n    key: 'type' | 'pattern',\n    value: any,\n    preview: boolean,\n  ) => {\n    updateToolbox({ filter: { ...toolbox.filter, [key]: value, preview } });\n  };\n\n  return (\n    <DropdownContainer\n      space={4}\n      dontCollapse\n      alignLeft\n      onClick={() => {\n        setExpanded(!expanded);\n      }}\n    >\n      <div\n        className=\" bg-circle-gray-250 rounded py-2 px-3 flex flex-row hover:bg-circle-gray-300 \"\n        style={{ marginLeft: 0 }}\n      >\n        <FilterIcon className=\"w-6 mr-2\" />\n        <ExpandIcon expanded={expanded} className=\"w-4\" />\n      </div>\n      <div className=\"bg-white w-64 rounded border-circle-gray-300 border shadow-sm\">\n        <div className=\"p-4\">\n          <h4 className=\"text-sm font-medium\">Filter Target</h4>\n          <Select\n            value={toolbox.filter.type}\n            className=\"my-1 w-full\"\n            onChange={(value: 'branches' | 'tags') =>\n              updateFilter('type', value, toolbox.filter.preview)\n            }\n          >\n            <option value=\"branches\">Branch</option>\n            <option value=\"tags\">Tag</option>\n          </Select>\n          <h4 className=\"text-sm font-medium\">Sample</h4>\n          <input\n            className=\"bg-white rounded p-2 px-4 w-full mt-1 shadow-sm border border-circle-gray-300\"\n            placeholder={`Sample ${toolbox.filter.type.toLowerCase()}`}\n            value={filter}\n            onChange={(e) => {\n              setFilter(e.target.value);\n            }}\n          />\n        </div>\n        <div className=\"border-t border-circle-gray-300 py-4 px-1 flex\">\n          <Button\n            className=\"ml-auto\"\n            variant=\"flat\"\n            type=\"button\"\n            onClick={() => {\n              setFilter('');\n              updateFilter('pattern', filter, false);\n            }}\n          >\n            Clear\n          </Button>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            onClick={() => {\n              updateFilter('pattern', filter, true);\n            }}\n          >\n            Preview\n          </Button>\n        </div>\n      </div>\n    </DropdownContainer>\n  );\n}\n","import { ExternalLinks } from './ExternalLinks';\nimport PreviewToolbox from './PreviewToolbox';\n\nexport default function HeaderMenu() {\n  return (\n    <div className=\"ml-auto flex my-auto flex-row p-4 space-x-2\">\n      <PreviewToolbox />\n      <ExternalLinks />\n    </div>\n  );\n}\n","import {\n  ConnectionLineComponentProps,\n  useStoreState as flowState,\n} from 'react-flow-renderer';\nimport { useStoreState } from '../../state/Hooks';\n\nconst getPos = (isSource: boolean, bounds: DOMRect, transform: number[]) => {\n  let x, y;\n\n  if (isSource) {\n    x = (bounds.x + bounds.width - transform[0]) / transform[2];\n  } else {\n    x = (bounds.x - transform[0]) / transform[2];\n  }\n\n  y = (bounds.y + bounds.height / 2 - 60 - transform[1]) / transform[2];\n\n  return { x, y };\n};\n\nconst ConnectionLine = ({ targetX, targetY }: ConnectionLineComponentProps) => {\n  const connecting = useStoreState((state) => state.connecting);\n  const altAction = useStoreState((state) => state.altAction);\n  const transform = flowState((state: any) => state.transform);\n  const handle = connecting?.start?.ref?.current as Element;\n  const isSource = connecting?.start?.id.connectionHandleType === 'source';\n\n  if (!handle) {\n    return null;\n  }\n\n  const bounds = handle.getBoundingClientRect();\n  const start = getPos(isSource, bounds, transform);\n  let end = { x: targetX, y: targetY };\n  const dist = 30 * (isSource ? 1 : -1);\n  const invalid = isSource ? end.x < start.x : end.y > start.x;\n  let color = '#76CDFF';\n\n  if (!invalid && connecting?.end?.ref) {\n    const snapTo = connecting?.end.ref?.current as Element;\n\n    if (snapTo && connecting?.end?.ref.current !== handle) {\n      const snapToBounds = snapTo.getBoundingClientRect();\n      end = getPos(!isSource, snapToBounds, transform);\n      color = '#0078CA';\n    }\n  }\n\n  color = invalid || altAction ? '#F24646' : color;\n\n  return (\n    <g>\n      <path\n        fill=\"none\"\n        stroke={color}\n        strokeWidth={1.5}\n        className=\"animated\"\n        d={`M${start.x},${start.y} ${start.x + dist},${start.y} ${\n          start.x + dist\n        },${start.y} ${end.x - dist},${end.y} ${end.x - dist},${end.y} ${\n          end.x\n        },${end.y}`}\n      />\n      <circle\n        cx={end.x}\n        cy={end.y}\n        fill=\"#fff\"\n        r={3}\n        stroke={color}\n        strokeWidth={1.5}\n      />\n      <circle\n        cx={start.x - 2}\n        cy={start.y}\n        fill=\"#fff\"\n        r={3}\n        stroke={color}\n        strokeWidth={1.5}\n      />\n    </g>\n  );\n};\n\nexport default ConnectionLine;\n","import React from 'react';\nimport { EdgeProps } from 'react-flow-renderer';\n\nexport default function Edge({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}: EdgeProps) {\n  const gap = 45;\n\n  return (\n    <g>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={`M${sourceX - gap * 2},${sourceY} ${sourceX - gap},${sourceY} ${\n          sourceX - gap\n        },${sourceY} ${targetX + gap},${targetY} ${targetX + gap},${targetY} ${\n          targetX + gap * 2\n        },${targetY}`}\n      />\n      {/* <text>\n        <textPath\n          href={`#${id}`}\n          style={{ fontSize: '12px' }}\n          startOffset=\"50%\"\n          textAnchor=\"middle\"\n        >\n          {'requires'}\n        </textPath>\n      </text> */}\n    </g>\n  );\n}\n","import { orb } from '@circleci/circleci-config-sdk';\nimport { WorkflowJobParameters } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow/types/WorkflowJob.types';\nimport { useEffect, useState } from 'react';\nimport ReactFlow, {\n  addEdge,\n  Background,\n  BackgroundVariant,\n  ConnectionLineComponentProps,\n  ConnectionMode,\n  EdgeProps,\n  FlowTransform,\n  isNode,\n  Node,\n  NodeTypesType,\n  useStoreActions as flowActions,\n} from 'react-flow-renderer';\nimport { v4 } from 'uuid';\nimport { dataMappings } from '../../mappings/GenerableMapping';\nimport { JobMapping } from '../../mappings/components/JobMapping';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport ConnectionLine from '../atoms/ConnectionLine';\nimport Edge from '../atoms/Edge';\n\nexport interface ElementProps {\n  className?: string;\n  bgClassName?: string;\n}\n\nconst getTypes = (): NodeTypesType =>\n  Object.assign(\n    {},\n    ...dataMappings.map((component) =>\n      component.mapping.node\n        ? { [component.mapping.key]: component.mapping.node.component }\n        : null,\n    ),\n  );\n\nconst WorkflowContainer = ({ bgClassName, className }: ElementProps) => {\n  const importOrb = useStoreActions((actions) => actions.importOrb);\n  const [transform, setTransform] = useState<FlowTransform>({\n    x: 0,\n    y: 0,\n    zoom: 1,\n  });\n  const [cooldown, setCooldown] = useState(false);\n  const elements = useStoreState(\n    (state) =>\n      state.definitions.workflows[state.selectedWorkflowId].value.elements,\n  );\n  const addWorkflowElement = useStoreActions(\n    (actions) => actions.addWorkflowElement,\n  );\n  const setWorkflowElements = useStoreActions(\n    (actions) => actions.setWorkflowElements,\n  );\n  const dragging = useStoreState((state) => state.dragging);\n  const connecting = useStoreState((state) => state.connecting);\n  const setConnecting = useStoreActions((actions) => actions.setConnecting);\n  const altAction = useStoreState((state) => state.altAction);\n  const setAltAction = useStoreActions((actions) => actions.setAltAction);\n  const [connectingTo, setConnectingTo] = useState({ x: 0, y: 0 });\n\n  window.addEventListener('keydown', (e) => {\n    if (e.shiftKey && !cooldown) {\n      setAltAction(!altAction);\n\n      setCooldown(true);\n\n      setTimeout(() => {\n        setCooldown(false);\n      }, 5);\n    }\n  });\n\n  const updateWorkflowJob = (\n    targetJob: string,\n    applyToData: (parameters: WorkflowJobParameters) => WorkflowJobParameters,\n  ) =>\n    elements.map((element) => {\n      return isNode(element) &&\n        JobMapping.node?.transform &&\n        (element.data.parameters?.name || element.data.job.name) === targetJob\n        ? {\n            ...element,\n            data: JobMapping.node.transform(\n              element.data.job,\n              applyToData(element.data.parameters),\n            ),\n          }\n        : element;\n    });\n\n  const handleMouseUp = () => {\n    if (connecting?.start?.name) {\n      const source =\n        connecting.start.id.connectionHandleType === 'source'\n          ? connecting.start\n          : connecting.end;\n      const target =\n        connecting.start.id.connectionHandleType === 'source'\n          ? connecting.end\n          : connecting.start;\n      const startName = source?.name;\n\n      if (target?.name && startName) {\n        if (\n          connecting.intent === 'creating' &&\n          source.id.connectionNodeId !== target.id.connectionNodeId\n        ) {\n          setWorkflowElements(\n            addEdge(\n              {\n                source: source.id.connectionNodeId,\n                target: target.id.connectionNodeId,\n                type: 'requires',\n                sourceHandle: source.id.connectionHandleId,\n                targetHandle: target.id.connectionNodeId,\n                animated: false,\n                style: { stroke: '#A3A3A3', strokeWidth: '2px' },\n              },\n              updateWorkflowJob(target.name, (parameters) => ({\n                ...parameters,\n                requires: parameters?.requires\n                  ? [...parameters.requires, startName]\n                  : [startName],\n              })),\n            ),\n          );\n        } else {\n          const updated = updateWorkflowJob(target.name, (parameters) => {\n            let requires = undefined;\n\n            if (parameters.requires) {\n              const updatedRequires = parameters?.requires?.filter(\n                (requirement) => requirement !== startName,\n              );\n              requires =\n                updatedRequires.length > 0 ? updatedRequires : undefined;\n            }\n            return {\n              ...parameters,\n              requires,\n            };\n          });\n\n          const filtered = updated.filter((e) => {\n            if (e.type !== 'requires') {\n              return true;\n            }\n\n            const edge = e as EdgeProps;\n\n            return (\n              edge.source !== source.id.connectionNodeId ||\n              edge.target !== target.id.connectionNodeId\n            );\n          });\n\n          setWorkflowElements(filtered);\n        }\n      }\n\n      setConnecting({\n        id: {\n          connectionNodeId: null,\n          connectionHandleType: null,\n          connectionHandleId: null,\n        },\n      });\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('mouseup', handleMouseUp);\n\n    return () => {\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  });\n\n  const gap = 15;\n\n  const NodeGraph = () => {\n    const setConnecting = flowActions((state) => state.setConnectionNodeId);\n    const setConnectingPosition = flowActions(\n      (state) => state.setConnectionPosition,\n    );\n\n    useEffect(() => {\n      setConnecting(connecting?.start?.id);\n      setConnectingPosition({\n        x: connectingTo.x - transform.x,\n        y: connectingTo.y - transform.y,\n      });\n    });\n\n    return null;\n  };\n\n  return (\n    <div\n      className=\"w-full h-full\"\n      onDragOver={(e) => {\n        if (dragging?.dataType?.dragTarget === 'workflow') {\n          e.preventDefault();\n        }\n      }}\n      onDrag={(e) => {}}\n      onMouseMove={(e) => {\n        const containerBounds = (e.target as Element)\n          .closest('.react-flow')\n          ?.getBoundingClientRect();\n\n        if (containerBounds) {\n          setConnectingTo({\n            x: e.clientX + transform.x - containerBounds.left,\n            y: e.clientY + transform.y - containerBounds.top,\n          });\n        }\n      }}\n      onDrop={(e) => {\n        const nodeMapping = dragging?.dataType?.node;\n\n        if (dragging?.dataType?.dragTarget === 'workflow' && nodeMapping) {\n          const pos = {\n            x: e.clientX - 80 - transform.x,\n            y: e.clientY - 120 - transform.y,\n          };\n          const round = (val: number) =>\n            Math.floor(val / transform.zoom / gap) * gap;\n          let data = dragging.data;\n\n          if (nodeMapping.transform) {\n            data = nodeMapping.transform(data, undefined, elements);\n          }\n\n          if (data.job instanceof orb.OrbRef) {\n            importOrb(data.job.orb);\n          }\n\n          const workflowNode: Node<any> = {\n            id: data.parameters?.name || data.name || v4(),\n            data,\n            connectable: true,\n            dragHandle: '.node',\n            type: dragging.dataType.key,\n            position: { x: round(pos.x), y: round(pos.y) },\n          };\n\n          addWorkflowElement(workflowNode);\n        }\n      }}\n    >\n      <ReactFlow\n        elements={elements}\n        className={className}\n        onMove={(e) => {\n          setTransform(e || transform);\n        }}\n        selectNodesOnDrag={false}\n        nodeTypes={getTypes()}\n        edgeTypes={{ requires: Edge }}\n        snapToGrid={true}\n        minZoom={0.1}\n        connectionMode={ConnectionMode.Loose}\n        connectionLineComponent={\n          ConnectionLine as React.ComponentType<ConnectionLineComponentProps>\n        }\n      >\n        <NodeGraph />\n        <Background\n          variant={BackgroundVariant.Dots}\n          gap={gap}\n          color=\"#A3A3A3\"\n          className={bgClassName}\n          size={1}\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default WorkflowContainer;\n","import Logo from '../../icons/ui/Logo';\nimport HeaderMenu from '../containers/HeaderMenu';\nimport WorkflowContainer from '../containers/WorkflowContainer';\n\nconst WorkflowsPane = () => {\n  return (\n    <div\n      arial-label=\"Workflows Pane\"\n      className=\"flex flex-col flex-nowrap flex-1\"\n      id=\"Workflows-Pane\"\n    >\n      <header className=\"flex w-full bg-white h-16\">\n        <div className=\"p-2 flex flex-row my-auto w-full\">\n          <div className=\"my-auto flex flex-row\">\n            <Logo className=\"mx-2\" />\n            <h1 className=\"text-xl font-bold\">Visual Config Editor</h1>\n          </div>\n        </div>\n        <HeaderMenu />\n      </header>\n      <WorkflowContainer\n        bgClassName=\"bg-circle-gray-200\"\n        className=\"border border-r-0 h-full border-b-0 border-circle-gray-300\"\n      />\n    </div>\n  );\n};\n\nexport default WorkflowsPane;\n","import { v4 } from 'uuid';\nimport WorkflowIcon from '../../icons/components/WorkflowIcon';\nimport ExpandIcon from '../../icons/ui/ExpandIcon';\nimport { WorkflowStage } from '../../mappings/components/WorkflowMapping';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport DropdownContainer from '../containers/DropdownContainer';\n\nexport const WorkflowSelector = () => {\n  const workflows = useStoreState((state) => state.definitions.workflows);\n  const selectedWorkflow = useStoreState((state) => state.selectedWorkflowId);\n\n  const selectWorkflow = useStoreActions((actions) => actions.selectWorkflow);\n  const addWorkflow = useStoreActions((actions) => actions.define_workflows);\n\n  return (\n    <DropdownContainer alignLeft className=\"rounded-md mx-3 my-auto px-2 border border-circle-gray-300 hover:bg-circle-gray-250\">\n      <ExpandIcon className=\"w-3 h-6\" expanded={true} />\n      <div className=\"rounded border border-circle-gray-300 p-2 z-30 bg-white flex flex-col\">\n        {Object.keys(workflows).map((workflow) => (\n          <button\n            value={workflow}\n            key={workflow}\n            className={`rounded flex w-full hover:bg-circle-gray-250 border-b border-circle-gray-300 p-2`}\n            type=\"button\"\n            onClick={(e) =>\n              workflow !== selectedWorkflow && selectWorkflow(workflow)\n            }\n          >\n            {workflow === selectedWorkflow && (\n              <WorkflowIcon className=\"w-6 p-1 mr-1\" />\n            )}\n            {workflow}\n          </button>\n        ))}\n        <button\n          className=\"tracking-wide hover:bg-circle-gray-200 leading-6 p-2 text-sm text-circle-blue font-medium\"\n          onClick={() =>\n            addWorkflow(new WorkflowStage('new-workflow', v4(), []))\n          }\n        >\n          Add New Workflow\n        </button>\n      </div>\n    </DropdownContainer>\n  );\n};\n","import { MutableRefObject } from 'react';\nimport InfoIcon from '../../icons/ui/InfoIcon';\nimport { useStoreState } from '../../state/Hooks';\nimport ToolTip from '../atoms/Tooltip';\n\nexport interface GuideContainerProps {\n  target: MutableRefObject<any>;\n  children: string;\n}\n\nconst GuideContainer = (props: GuideContainerProps) => {\n  const guideStep = useStoreState((state) => state.guideStep);\n\n  return (\n    <ToolTip target={props.target}>\n      <div className=\"w-80 p-4 bg-white drop-shadow-lg rounded-lg\">\n        <div className=\"flex flex-row\">\n          <InfoIcon className=\"w-5 h-5\" color=\"#000000\"></InfoIcon>\n          <div className=\"px-3 w-full\">\n            <header className=\"pb-3 font-bold leading-5\">\n              Step {guideStep} of 3\n            </header>\n            <div className=\"font-medium text-sm text-circle-gray-500 whitespace-pre-line\">\n              {props.children}\n            </div>\n            <div className=\"w-full flex flex-row pt-2\">\n              <button className=\" ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\">\n                Dismiss\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ToolTip>\n  );\n};\n\nexport default GuideContainer;\n","import { useRef } from 'react';\nimport InspectableMapping from '../../mappings/InspectableMapping';\nimport { mapDefinitions, NamedGenerable } from '../../state/DefinitionStore';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport AddButton from '../atoms/AddButton';\nimport ComponentInfo from '../atoms/ComponentInfo';\nimport Definition from '../atoms/Definition';\nimport { Empty } from '../atoms/Empty';\nimport {\n  InspectorDefinitionMenu,\n  InspectorDefinitionMenuNav,\n} from '../menus/definitions/InspectorDefinitionMenu';\nimport { navSubTypeMenu } from '../menus/SubTypeMenu';\nimport CollapsibleList from './CollapsibleList';\nimport GuideContainer from './GuideContainer';\n\nexport interface DefinitionsProps {\n  type: InspectableMapping;\n  expanded?: boolean;\n  onChange?: (expanded: boolean) => void;\n}\n\nconst DefinitionsContainer = ({\n  type,\n  expanded,\n  onChange,\n}: DefinitionsProps) => {\n  // the definitions of the current type of inspectable mapping\n  const definitions = useStoreState((store) => store.definitions);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const guideStep = useStoreState((state) => state.guideStep);\n  const ref = useRef(null);\n  const hasDefinitions = Object.values(definitions[type.key]).length > 0;\n  const requirements: string[] = [];\n\n  type.requirements?.forEach((requirement) => {\n    if (!requirement.test(definitions)) {\n      requirements.push(requirement.message);\n    }\n  });\n\n  /**\n   * Navigate to inspector definition menu,\n   * will go to a subtype page if the InspectableMapping type\n   * has subtypes defined.\n   */\n  const navigateToInspector = () => {\n    navigateTo(\n      type.subtypes\n        ? navSubTypeMenu({\n          typePage: type.subtypes?.component,\n          menuPage: InspectorDefinitionMenu,\n          menuProps: { dataType: type, index: -1 },\n        })\n        : {\n          component: InspectorDefinitionMenuNav,\n          props: { dataType: type, index: -1 },\n        },\n    );\n  };\n\n  return (\n    <div ref={ref} className=\"w-full px-4 pb-0\">\n      {type.guide && guideStep === type.guide.step && (\n        <GuideContainer target={ref}>{type.guide.info}</GuideContainer>\n      )}\n      <CollapsibleList\n        title={type.name.plural}\n        expanded={expanded}\n        className=\"py-4\"\n        titleFont=\"font-bold\"\n        classNameExpanded=\"py-4 \"\n        onChange={onChange}\n        pinned={\n          <AddButton\n            disabled={requirements.length > 0}\n            className=\"flex ml-auto\"\n            onClick={navigateToInspector}\n          />\n        }\n        titleExpanded={\n          <>\n            {hasDefinitions && (\n              <div className=\"p-2 px-8\">\n                <ComponentInfo type={type} />\n              </div>\n            )}\n          </>\n        }\n      >\n        <div className=\"w-full pl-2 pt-2\">\n          {hasDefinitions ? (\n            mapDefinitions<NamedGenerable>(\n              definitions[type.key],\n              (definition, index) => (\n                <Definition\n                  data={definition}\n                  key={definition.name}\n                  type={type}\n                  index={index}\n                />\n              ),\n            )\n          ) : (\n            <Empty\n              label={`No ${type.name.plural.toLowerCase()} yet`}\n              Logo={type.components.icon}\n              description={\n                <>\n                  <ComponentInfo type={type} />\n                  <br />\n                  {requirements.length > 0 && requirements}\n                </>\n              }\n            />\n          )}\n        </div>\n      </CollapsibleList>\n      <div className=\"w-full border-b border-circle-gray-300\"></div>\n    </div>\n  );\n};\n\nexport default DefinitionsContainer;\n","import { useState } from 'react';\nimport {\n  Hits,\n  HitsPerPage,\n  InstantSearch,\n  PaginationProps,\n  useInstantSearch,\n  usePagination,\n  useSearchBox,\n  UseSearchBoxProps,\n} from 'react-instantsearch-hooks-web';\nimport { searchClient } from '../../../App';\nimport DeleteItemIcon from '../../../icons/ui/DeleteItemIcon';\nimport Loading from '../../../icons/ui/Loading';\nimport { useStoreActions } from '../../../state/Hooks';\nimport { DataModel, NavigationComponent } from '../../../state/Store';\nimport { Button } from '../../atoms/Button';\nimport Card from '../../atoms/Card';\nimport { Footer } from '../../atoms/Footer';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport { SubTypeMenuPageProps } from '../SubTypeMenu';\nimport TabbedMenu from '../TabbedMenu';\nimport { OrbDefinitionMenuNav, OrbDefinitionProps } from './OrbDefinitionsMenu';\n\ntype InspectorDefinitionProps = DataModel & {\n  values: Record<string, object>;\n  editing?: boolean;\n  passBackKey?: string;\n  activeTab?: number;\n} & SubTypeMenuPageProps<any>;\n\n\n\nfunction Pagination(props: PaginationProps) {\n  const { pages, refine, nbPages } = usePagination(props);\n  const { results } = useInstantSearch();\n\n  return (\n    <>\n      {results.hits.length > 0 && (\n        <div className=\"flex flex-row px-2\">\n          <Button\n            variant=\"secondary\"\n            margin=\"2\"\n            className=\"w-9 h-9 border border-circle-gray-300 mx-1 rounded hover:border-gray-700\"\n            onClick={() => {\n              refine(pages[0] - 1);\n            }}\n            disabled={pages[0] === 0}\n          >\n            {'<'}\n          </Button>\n          {pages.map((page) => (\n            <Button\n              variant=\"secondary\"\n              margin=\"2\"\n              className=\"w-9 h-9 border border-circle-gray-300 mx-1 px-0 rounded hover:border-gray-700\"\n              key={page}\n              onClick={() => {\n                refine(page + 1);\n              }}\n            >\n              {page + 1}\n            </Button>\n          ))}\n          <Button\n            variant=\"secondary\"\n            margin=\"2\"\n            className=\"w-9 h-9 border border-circle-gray-300 mx-1 rounded hover:border-gray-700\"\n            onClick={() => {\n              refine(pages[pages.length - 1] + 1);\n            }}\n            disabled={pages[pages.length - 1] + 1 === nbPages}\n          >\n            {'>'}\n          </Button>\n        </div>\n      )}\n    </>\n  );\n}\n\nconst SearchBox = (\n  props: UseSearchBoxProps & { className?: string; placeholder?: string },\n) => {\n  const { refine, clear } = useSearchBox(props);\n  const [value, setValue] = useState('');\n  const { results } = useInstantSearch();\n\n  return (\n    <>\n      <div\n        aria-label=\"Orbs Search Box\"\n        className=\"my-2 rounded border w-full border-circle-gray-300 hover:border-circle-gray-700 flex flex-row\"\n      >\n        <input\n          value={value}\n          placeholder={props.placeholder}\n          className=\"pl-4 p-2 m-0 flex-grow\"\n          onChange={(e) => {\n            setValue(e.target.value);\n            refine(e.target.value);\n          }}\n        />\n        <button\n          type=\"button\"\n          className=\"mx-4\"\n          onClick={() => {\n            setValue('');\n            clear();\n          }}\n        >\n          <DeleteItemIcon className=\"w-3 h-3\" />\n        </button>\n      </div>\n      {results.hits.length < 1 && <Loading className=\"flex m-auto mt-10\" />}\n    </>\n  );\n};\n\nconst OrbImportMenu = (props: InspectorDefinitionProps) => {\n  const tabs = ['EXPLORE'];\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header>\n        <BreadCrumbs />\n        <div className=\"pl-6 pr-5 py-3 flex text-sm text-circle-gray-500\">\n          Make use of curated definitions from official or community orbs to\n          speed up your pipeline building process.\n        </div>\n      </header>\n      <TabbedMenu tabs={tabs} activeTab={props.activeTab || 0}>\n        <div className=\"p-6\">\n          <InstantSearch searchClient={searchClient} indexName=\"orbs-prod\">\n            {/* <RefinementList attribute=\"brand\" /> */}\n            <p className=\"font-bold leading-5 tracking-wide\">Search Filters</p>\n            {/* <Select className=\"mt-2 w-full\">\n              <option>Recommended Orbs</option> TODO: implement select for recommended orbs\n            </Select> */}\n            <SearchBox placeholder=\"Search Orb Directory...\" />\n            <HitsPerPage\n              hidden\n              items={[{ value: 6, label: '', default: true }]}\n            />\n            <Hits\n              className=\"overflow-y-auto mt-4\"\n              style={{ height: 'calc(100vh - 420px)' }}\n              hitComponent={({ hit }) => {\n                let values = hit as unknown as OrbDefinitionProps;\n\n                return (\n                  <Card\n                    truncate={120}\n                    icon={\n                      <div className=\"rounded-full bg-white shadow mr-2 mb-2 flex w-6 h-6 p-px\">\n                        <img\n                          src={\n                            (hit.logo_url as string) ||\n                            'https://circleci.com/developer/orb-logos/community.png'\n                          }\n                          className=\"rounded-full my-auto bg-white\"\n                          alt={`${hit.name} logo` || 'Orb Logo'}\n                        />\n                      </div>\n                    }\n                    pinned={\n                      <p className=\"bg-circle-gray-300 rounded-full text-xs p-px my-auto px-2\">\n                        {hit.version as string}\n                      </p>\n                    }\n                    key={hit.full_name as string}\n                    title={hit.name as string}\n                    description={hit.description as string}\n                    onClick={() => {\n                      navigateTo({\n                        component: OrbDefinitionMenuNav,\n                        props: values,\n                      });\n                    }}\n                  />\n                );\n              }}\n            />\n\n            <Footer centered>\n              <Pagination padding={1}></Pagination>\n            </Footer>\n          </InstantSearch>\n        </div>\n      </TabbedMenu>\n    </div>\n  );\n};\n\nconst OrbImportMenuNav: NavigationComponent = {\n  Component: OrbImportMenu,\n  Label: (props: InspectorDefinitionProps) => {\n    return <p>Orbs</p>;\n  },\n  Icon: (props: InspectorDefinitionProps) => {\n    let iconComponent = props.dataType?.components.icon;\n\n    if (!iconComponent) {\n      return null;\n    }\n\n    let DefinitionIcon = iconComponent;\n\n    return <DefinitionIcon className=\"w-6 h-8 py-2\" />;\n  },\n};\n\nexport { OrbImportMenuNav, OrbImportMenu };\n","import { useMemo, useRef } from 'react';\nimport OrbIcon from '../../icons/components/OrbIcon';\nimport { mapDefinitions } from '../../state/DefinitionStore';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport AddButton from '../atoms/AddButton';\nimport ComponentInfo from '../atoms/ComponentInfo';\nimport { Empty } from '../atoms/Empty';\nimport { OrbDefinitionMenuNav } from '../menus/definitions/OrbDefinitionsMenu';\nimport { OrbImportMenuNav } from '../menus/definitions/OrbImportMenu';\nimport CollapsibleList from './CollapsibleList';\n\nexport interface OrbImportProps {\n  expanded?: boolean;\n  onChange?: (expanded: boolean) => void;\n}\n\nconst OrbImportsContainer = (props: OrbImportProps) => {\n  const items = useStoreState((state) => state.definitions.orbs);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  // const guideStep = useStoreState((state) => state.guideStep);\n  const ref = useRef(null);\n  const orbDefinitions = useMemo(\n    () =>\n    \n      mapDefinitions(items, (orb) => {\n        return (\n          <button\n            className=\"w-full mb-2 p-4 py-2 text-sm cursor-pointer text-left text-circle-black \n      bg-white border border-circle-gray-300 rounded-md2 flex flex-row hover:border-black\"\n            onClick={() => {\n              navigateTo({\n                component: OrbDefinitionMenuNav,\n                props: {\n                  name: orb.name,\n                  namespace: orb.namespace,\n                  version: orb.version,\n                  description: orb.description,\n                  logo_url: orb.logo_url,\n                },\n              });\n            }}\n            key={orb.name}\n          >\n            <div className='w-6 h-6 flex mr-4 rounded-full shadow-sm'>\n\n            <img className=\"my-auto\" src={orb.logo_url} alt=\"\" />\n            </div>\n            <div className=\"flex flex-row w-full my-auto text-circle-black text-base\">\n              {orb.alias}\n              <div className=\"flex ml-auto text-xs my-auto bg-circle-gray-300 rounded-full p-px px-2\">\n                {orb.namespace}/{orb.name}@{orb.version}\n              </div>\n            </div>\n          </button>\n        );\n      }),\n    [items, navigateTo],\n  );\n\n  return (\n    <div ref={ref} className=\"w-full px-4 pb-0\">\n      <CollapsibleList\n        title=\"Orbs\"\n        expanded={props.expanded}\n        onChange={props.onChange}\n        titleFont=\"font-bold\"\n        className=\"py-4\"\n        classNameExpanded=\"py-4\"\n        pinned={\n          <AddButton\n            className=\"flex ml-auto\"\n            onClick={() => {\n              navigateTo({\n                component: OrbImportMenuNav,\n                props: {},\n              });\n            }}\n          />\n        }\n      >\n        <div className=\"w-full pl-2 pt-2\">\n          {/* <ComponentInfo type={props.type} /> */}\n          {orbDefinitions.length > 0 ? (\n            orbDefinitions\n          ) : (\n            <Empty\n              label={`No imported orbs yet`}\n              Logo={OrbIcon}\n              description={\n                <>\n                  <ComponentInfo\n                    docsInfo={{\n                      description:\n                        'Orbs are curated snippets of config that help automate repeated processes.',\n                      link: 'https://circleci.com/docs/orb-intro',\n                    }}\n                  />\n                  <br />\n                  Import an orb by clicking the button above.\n                </>\n              }\n            />\n          )}\n        </div>\n      </CollapsibleList>\n      <span className=\"w-full flex border-b border-circle-gray-300\" />\n    </div>\n  );\n};\n\nexport default OrbImportsContainer;\n","import { Form, Formik } from 'formik';\nimport WorkflowIcon from '../../../icons/components/WorkflowIcon';\nimport { WorkflowStage } from '../../../mappings/components/WorkflowMapping';\nimport { dataMappings } from '../../../mappings/GenerableMapping';\nimport InspectableMapping from '../../../mappings/InspectableMapping';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { NavigationComponent } from '../../../state/Store';\nimport { Button } from '../../atoms/Button';\nimport { Footer } from '../../atoms/Footer';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport { WorkflowSelector } from '../../atoms/WorkflowSelector';\nimport DefinitionsContainer from '../../containers/DefinitionsContainer';\nimport OrbImportsContainer from '../../containers/OrbImportsContainer';\nimport TabbedMenu from '../TabbedMenu';\n\n/**\n * The main menu for inspecting the app's contents.\n */\nconst DefinitionsMenu = (props: { expanded: boolean[] }) => {\n  const workflowGraphs = useStoreState((state) => state.definitions.workflows);\n  const selectedWorkflowId = useStoreState((state) => state.selectedWorkflowId);\n  const updateWorkflow = useStoreActions((actions) => actions.update_workflows);\n  const config = useStoreState((state) => state.config);\n  const updateConfig = useStoreActions((actions) => actions.generateConfig);\n  const persistProps = useStoreActions((actions) => actions.persistProps);\n  const workflow = workflowGraphs[selectedWorkflowId].value;\n\n  return (\n    <div\n      aria-label=\"Definitions Menu\"\n      className=\"h-full bg-white flex flex-col\"\n    >\n      <header className=\"ml-4 mb-4 flex\">\n        <WorkflowIcon className=\"w-8 h-8 p-1 mr-1\" />\n        <h1 className=\"text-2xl font-bold\">{workflow.name}</h1>\n        <WorkflowSelector />\n      </header>\n      <TabbedMenu tabs={['DEFINITIONS', 'PROPERTIES']}>\n        <div\n          className=\"px-2 flex-1 w-full flex-col overflow-y-scroll\"\n          style={{ height: 'calc(100vh - 200px)' }}\n        >\n          <OrbImportsContainer aria-label=\"Orb Imports\" expanded />\n          {dataMappings.map((mapping, index) => {\n            const dataType = mapping.mapping as InspectableMapping;\n\n            return (\n              <DefinitionsContainer\n                type={dataType}\n                expanded={props.expanded[index]}\n                onChange={(isExpanded) => {\n                  persistProps({\n                    ...props,\n                    expanded: props.expanded.map((expanded, i) =>\n                      i === index ? isExpanded : expanded,\n                    ),\n                  });\n                }}\n                key={dataType.name.plural}\n              />\n            );\n          })}\n          <Footer>\n            {config && (\n              <Button\n                variant=\"primary\"\n                type=\"button\"\n                aria-label=\"Generate Configuration\"\n                className=\" w-min whitespace-nowrap\"\n                onClick={(e) => updateConfig()}\n              >\n                Generate Config\n              </Button>\n            )}\n          </Footer>\n        </div>\n        <div className=\"p-6\">\n          <Formik\n            initialValues={{ name: workflow.name }}\n            enableReinitialize\n            onSubmit={(values) => {\n              updateWorkflow({\n                old: workflow,\n                new: new WorkflowStage(\n                  values.name,\n                  workflow.id,\n                  workflow.jobs,\n                  workflow.when,\n                  workflow.elements,\n                ),\n              });\n            }}\n          >\n            {(formikProps) => (\n              <Form className=\"flex flex-col flex-1\">\n                <InspectorProperty label=\"Name\" name=\"name\" />\n                <Footer>\n                  <Button\n                    variant=\"primary\"\n                    aria-label=\"Generate Configuration\"\n                    className=\" w-min whitespace-nowrap\"\n                    // disabled={!formikProps.dirty}\n                  >\n                    Save Workflow\n                  </Button>\n                </Footer>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </TabbedMenu>\n    </div>\n  );\n};\n\nconst DefinitionsMenuNav: NavigationComponent = {\n  Component: DefinitionsMenu,\n  Label: (props: { expanded: boolean[] }, curProps) => (\n    <h4>{curProps.overrideRoot || 'Definitions'}</h4>\n  ),\n};\n\nexport default DefinitionsMenuNav;\n","import {\n  Config,\n  Job,\n  parameters,\n  workflow,\n} from '@circleci/circleci-config-sdk';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport { WorkflowJobAbstract } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow';\nimport { OrbImportManifest } from '@circleci/circleci-config-sdk/dist/src/lib/Orb/types/Orb.types';\nimport { Action, action, ActionCreator, ThunkOn, thunkOn } from 'easy-peasy';\nimport { MutableRefObject, RefObject } from 'react';\nimport {\n  Connection,\n  ElementId,\n  Elements,\n  FlowElement,\n  SetConnectionId,\n  XYPosition,\n} from 'react-flow-renderer';\nimport { v4 } from 'uuid';\nimport { searchClient, store } from '../App';\nimport { ConfirmationModalModel } from '../components/containers/ConfirmationModal';\nimport DefinitionsMenu from '../components/menus/definitions/DefinitionsMenu';\nimport { OrbImportWithMeta } from '../components/menus/definitions/OrbDefinitionsMenu';\nimport { JobMapping } from '../mappings/components/JobMapping';\nimport {\n  setWorkflowDefinition,\n  WorkflowStage,\n} from '../mappings/components/WorkflowMapping';\nimport InspectableMapping from '../mappings/InspectableMapping';\nimport {\n  AllDefinitionActions,\n  createDefinitionStore,\n  definitionsAsArray,\n  DefinitionsModel,\n  DefinitionsStoreModel,\n  DefinitionStore,\n  DefinitionSubscriptions,\n  DefinitionType,\n  generateLifeCycleMatrix,\n  NamedGenerable,\n} from './DefinitionStore';\n\nexport interface NavigationBack {\n  distance?: number;\n  /**\n   * Apply\n   */\n  applyValues?: (current: any) => any;\n}\n\nexport interface ToastModel {\n  label: string;\n  content: string;\n  link?: { url: string; label: string };\n  duration?: number;\n  status: 'success' | 'failed' | 'warning';\n  timeout?: NodeJS.Timeout;\n}\n\nexport type WithToast<T> = T & { toast?: ToastModel };\n\nexport interface PreviewToolboxModel {\n  filter: {\n    type: 'branches' | 'tags';\n    pattern: string;\n    preview: boolean;\n  };\n}\n\nexport interface DataModel {\n  data?: any;\n  dataType?: InspectableMapping;\n}\n\nexport interface InfoToolTip {\n  description: string;\n  ref: RefObject<any>;\n  facing?: 'top' | 'bottom' | 'left' | 'right';\n}\n\nexport interface NavigationModel extends NavigationStop {\n  jumpedFrom?: NavigationStop;\n  from?: NavigationModel;\n}\n\nexport interface NavigationComponent {\n  Icon?: React.FunctionComponent<any>;\n  Component: React.FunctionComponent<any>;\n  Label: React.FunctionComponent<any>;\n}\nexport interface NavigationStop {\n  component: NavigationComponent;\n  props: { [key: string]: any };\n  origin?: boolean;\n}\n\nexport interface StagedJobMap {\n  workflows: {\n    [workflow: string]: {\n      [job: string]: number;\n    };\n  };\n}\n\nexport type StoreModel = DefinitionsStoreModel & {\n  /** Last generated configuration */\n  config: string | undefined;\n  /** The configuration with proposed changes */\n  editingConfig: string | undefined;\n  /** The current step of the guide */\n  guideStep?: number;\n  /** Node placeholder element info */\n  placeholder?: { index: number; id: string };\n  /** Map to staged workflow jobs, to save on time-space complexity */\n  stagedJobs: StagedJobMap;\n  /** Allows for tracking of components and their props in NavigationPanel */\n  navigation: NavigationModel;\n  /** Staged Job Preview Toolbox state  */\n  previewToolbox: PreviewToolboxModel;\n\n  toast?: ToastModel;\n  confirm?: ConfirmationModalModel;\n  tooltip?: InfoToolTip;\n\n  /** Data being dragged from definition */\n  dragging?: DataModel;\n  altAction?: boolean;\n  connecting?: {\n    intent: 'creating' | 'deleting';\n    start?: {\n      ref?: MutableRefObject<any>;\n      id: SetConnectionId;\n      name?: string;\n    };\n    end?: {\n      id: SetConnectionId;\n      pos?: XYPosition;\n      ref?: MutableRefObject<any>;\n      name?: string;\n    };\n  };\n  /** Currently selected workflow pane index */\n  selectedWorkflowId: string;\n  configError?: string;\n};\n\nexport type UpdateDiff = {\n  type: 'add' | 'remove' | 'update';\n  value: UpdateType<NamedGenerable>;\n};\nexport interface UpdateType<Out, In = Out> {\n  old: Out;\n  new: In;\n  observers?: DefinitionSubscriptions;\n  res?: (value: unknown) => void;\n}\n\nexport type StoreActions = AllDefinitionActions & {\n  persistProps: Action<StoreModel, { [key: string]: object }>;\n  setDragging: Action<StoreModel, DataModel | undefined>;\n  setConnecting: Action<\n    StoreModel,\n    {\n      ref?: MutableRefObject<any>;\n      id: SetConnectionId;\n      name?: string;\n    }\n  >;\n  setAltAction: Action<StoreModel, boolean>;\n  updateConnecting: Action<\n    StoreModel,\n    | {\n        ref?: MutableRefObject<any>;\n        id: SetConnectionId;\n        pos?: XYPosition;\n        name?: string;\n      }\n    | undefined\n  >;\n\n  setGuideStep: Action<StoreModel, number | undefined>;\n\n  navigateTo: Action<StoreModel, NavigationStop & { values?: any }>;\n  navigateBack: Action<StoreModel, WithToast<NavigationBack> | void>;\n  onToastEvent: ThunkOn<StoreActions, WithToast<any> | ToastModel | void>;\n\n  selectWorkflow: Action<StoreModel, string>;\n  addWorkflowElement: Action<StoreModel, FlowElement<any>>;\n  removeWorkflowElement: Action<StoreModel, string>;\n  updateWorkflowElement: Action<StoreModel, { id: string; data: any }>;\n  setWorkflowElements: Action<StoreModel, Elements<any>>;\n  observeWorkflowSources: ThunkOn<StoreActions, UpdateType<Job>>;\n\n  importOrb: Action<StoreModel, OrbImportWithMeta>;\n  unimportOrb: Action<StoreModel, OrbImportWithMeta>;\n\n  loadConfig: Action<\n    StoreModel,\n    { config: Config; manifests?: Record<string, OrbImportManifest> } | Error\n  >;\n  loadDefinitions: ThunkOn<StoreActions, Config | Error>;\n  generateConfig: Action<StoreModel, void | Partial<DefinitionsModel>>;\n  error: Action<StoreModel, any>;\n\n  updatePreviewToolBox: Action<StoreModel, PreviewToolboxModel>;\n  setToast: Action<StoreModel, ToastModel | undefined | void>;\n  triggerToast: Action<StoreModel, ToastModel | undefined | void>;\n  triggerConfirmation: Action<StoreModel, ConfirmationModalModel | undefined>;\n  triggerConfigRefresh: ThunkOn<StoreActions, void>;\n\n  updateTooltip: Action<StoreModel, InfoToolTip | undefined>;\n};\n\nconst Actions: StoreActions = {\n  ...createDefinitionStore(),\n  persistProps: action((state, payload) => {\n    state.navigation = { ...state.navigation, props: payload };\n  }),\n  setAltAction: action((state, payload) => {\n    state.altAction = payload;\n  }),\n  setConnecting: action((state, payload) => {\n    if (payload.ref) {\n      state.connecting = {\n        intent: state.altAction ? 'deleting' : 'creating',\n        start: payload,\n      };\n    } else {\n      state.connecting = undefined;\n    }\n  }),\n  updateConnecting: action((state, payload) => {\n    if (state.connecting?.start) {\n      state.connecting = {\n        ...state.connecting,\n        end: payload,\n      };\n    }\n  }),\n\n  setGuideStep: action((state, payload) => {\n    state.guideStep = payload;\n  }),\n\n  /** TODO: Refactor with context\n   * https://reactjs.org/docs/hooks-reference.html#usecontext\n   */\n  navigateTo: action((state, payload) => {\n    const curNav = state.navigation;\n\n    if (curNav.jumpedFrom) {\n      state.navigation.jumpedFrom = undefined;\n    }\n\n    let root = curNav.from;\n\n    while (root?.from !== undefined) {\n      root = root.from;\n    }\n\n    state.navigation = {\n      ...payload,\n      from:\n        payload.origin && root\n          ? root\n          : {\n              ...curNav,\n              props: {\n                ...curNav.props,\n                values: payload.values,\n              },\n            },\n    };\n  }),\n\n  navigateBack: action((state, payload) => {\n    const distance = payload?.distance || 1;\n\n    if (state.navigation.from) {\n      let travelTo = state.navigation;\n\n      for (let i = 0; i < distance; i++) {\n        if (travelTo.from) {\n          travelTo = travelTo.from;\n        } else {\n          throw new Error('Tried to navigate back to an undefined component!');\n        }\n      }\n\n      const values =\n        payload?.applyValues?.(travelTo.props.values) || travelTo.props.values;\n\n      let props;\n\n      /**\n       * Solution for modifying props on sub menus.\n       */\n      if (travelTo.props?.menuProps) {\n        props = {\n          ...travelTo.props,\n          menuProps: {\n            ...travelTo.props.menuProps,\n            values: values,\n          },\n        };\n      } else {\n        props = {\n          ...travelTo.props,\n          values: values,\n        };\n      }\n\n      state.navigation = {\n        ...travelTo,\n        props: props,\n        jumpedFrom: distance > 1 ? state.navigation : undefined,\n      };\n    } else {\n      state.navigation = { component: DefinitionsMenu, props: {} };\n    }\n  }),\n\n  onToastEvent: thunkOn(\n    (actions) => [actions.navigateBack, actions.triggerToast],\n    (actions, thunk) => {\n      const state = store.getState();\n      const incomingToast = ((thunk.payload &&\n        (thunk.payload as unknown as WithToast<any>).toast) ??\n        thunk.payload) as ToastModel;\n      const currentToast = state.toast;\n\n      if (incomingToast?.content) {\n        if (currentToast && currentToast.timeout) {\n          clearTimeout(currentToast.timeout);\n        }\n\n        const timeout = setTimeout(() => {\n          actions.setToast();\n        }, incomingToast.duration || 3500);\n\n        actions.setToast({ ...incomingToast, timeout });\n      }\n    },\n  ),\n\n  setDragging: action((state, payload) => {\n    state.dragging = payload;\n  }),\n\n  selectWorkflow: action((state, index) => {\n    state.selectedWorkflowId = index;\n  }),\n\n  addWorkflowElement: action((state, payload) => {\n    const workflowDef = state.definitions.workflows[state.selectedWorkflowId];\n    const wf = workflowDef.value;\n    let jobs = wf.jobs;\n\n    if (payload.type === 'jobs') {\n      const jobData = payload.data as WorkflowJobAbstract;\n      const jobName = jobData.name;\n      const stagedJobs = state.stagedJobs.workflows;\n      let curWorkflow = stagedJobs[wf.name];\n\n      if (wf.name in state.stagedJobs.workflows) {\n        if (!curWorkflow[jobName]) {\n          curWorkflow[jobName] = 1;\n        } else {\n          curWorkflow[jobName]++;\n        }\n      } else {\n        stagedJobs[wf.name] = { [jobName]: 1 };\n      }\n\n      jobs = jobs.concat(jobData);\n\n      state.stagedJobs = { workflows: stagedJobs };\n    }\n\n    setWorkflowDefinition(state, wf.name, {\n      ...workflowDef,\n      value: new WorkflowStage(wf.name, wf.id, jobs, wf.when, [\n        ...wf.elements,\n        payload,\n      ]),\n    });\n\n    wf.elements.push(payload);\n  }),\n  removeWorkflowElement: action((state, payload) => {\n    const workflowDef = state.definitions.workflows[state.selectedWorkflowId];\n    const wf = workflowDef.value;\n    const map = state.stagedJobs;\n    const stagedJob = map.workflows[wf.name];\n    let jobs = wf.jobs;\n\n    const elements = wf.elements.filter((element) => {\n      if (element.type === 'requires') {\n        const connection = element as Connection;\n\n        if (connection.source === payload || connection.target === payload) {\n          return false;\n        }\n      }\n\n      if (element.type === 'jobs' && element.id === payload) {\n        const workflowJob = element.data as WorkflowJobAbstract;\n        const name = workflowJob.name;\n        const sameSourceJobs = stagedJob[name];\n\n        if (sameSourceJobs) {\n          stagedJob[name]--;\n\n          if (stagedJob[name] === 0) {\n            delete stagedJob[name];\n          }\n\n          state.stagedJobs = { workflows: map.workflows };\n        }\n\n        jobs = jobs.filter(\n          (job) =>\n            !(job instanceof workflow.WorkflowJob) || job.job.name !== payload,\n        );\n      }\n\n      return element.id !== payload;\n    });\n\n    setWorkflowDefinition(state, wf.name, {\n      ...workflowDef,\n      value: new WorkflowStage(wf.name, wf.id, jobs, wf.when, elements),\n    });\n  }),\n  setWorkflowElements: action((state, payload) => {\n    const workflowDef = state.definitions.workflows[state.selectedWorkflowId];\n    const workflow = workflowDef.value;\n    const jobs = payload\n      .filter((element) => element.type === JobMapping.key)\n      .map((element) => element.data);\n\n    setWorkflowDefinition(state, workflow.name, {\n      ...workflowDef,\n\n      value: new WorkflowStage(\n        workflow.name,\n        workflow.id,\n        jobs,\n        workflow.when,\n        payload,\n      ),\n    });\n  }),\n  // TODO: refactor and handle by DefinitionStore\n  updateWorkflowElement: action((state, payload) => {\n    const workflowDef = state.definitions.workflows[state.selectedWorkflowId];\n    const wf = workflowDef.value;\n    const newName = payload.data.parameters?.name || payload.data.name;\n    const changedName = newName !== payload.data.name;\n\n    const elements = wf.elements.map((element) => {\n      if (element.id === payload.id) {\n        return {\n          ...element,\n          ...payload,\n          id: newName,\n        };\n      } else if (element.type === 'requires' && changedName) {\n        const connection = element as Connection;\n\n        if (connection.source === payload.id) {\n          return {\n            ...element,\n            source: newName,\n            sourceHandle: `${newName}_source`,\n          };\n        } else if (connection.target === payload.id) {\n          return {\n            ...element,\n            target: newName,\n            targetHandle: `${newName}_target`,\n          };\n        }\n      }\n\n      return element;\n    });\n\n    // TODO: optimize this\n    const jobs = wf.jobs.map((staged) => {\n      if (staged.name === payload.id) {\n        return payload.data;\n      }\n\n      if (staged.parameters?.requires && changedName) {\n        const requires = staged.parameters.requires.map((req) => {\n          if (req === payload.id) {\n            return newName;\n          } else {\n            return req;\n          }\n        });\n\n        if (staged instanceof workflow.WorkflowJob) {\n          return new workflow.WorkflowJob(staged.job, {\n            ...staged.parameters,\n            requires,\n          });\n        }\n\n        return new workflow.WorkflowJobApproval(staged.name, {\n          ...staged.parameters,\n          requires,\n        });\n      }\n\n      return staged;\n    });\n\n    setWorkflowDefinition(state, wf.name, {\n      ...workflowDef,\n\n      value: new WorkflowStage(wf.name, wf.id, jobs, wf.when, elements),\n    });\n  }),\n  observeWorkflowSources: thunkOn(\n    (actions) => actions.update_jobs,\n    (actions, thunk) => {\n      const state = store.getState();\n      const payload = thunk.payload;\n\n      Object.values(state.definitions.workflows).forEach((workflowDef) => {\n        const wf = workflowDef.value;\n        const change = payload as unknown as UpdateType<Job>;\n        const oldName = change.old.name;\n        const newName = change.new.name;\n        const changedName = oldName !== newName;\n\n        const elements = wf.elements.map((element) => {\n          if (element.type === 'jobs' && element.data.job.name === oldName) {\n            const wfJob = element.data as workflow.WorkflowJob;\n\n            return {\n              ...element,\n              data: new workflow.WorkflowJob(\n                change.new,\n                wfJob.parameters,\n                wfJob.pre_steps,\n                wfJob.post_steps,\n              ),\n              id: newName,\n            };\n          } else if (element.type === 'requires' && changedName) {\n            const connection = element as Connection;\n\n            if (connection.source === oldName) {\n              return {\n                ...element,\n                source: newName,\n                sourceHandle: `${newName}_source`,\n              };\n            } else if (connection.target === oldName) {\n              return {\n                ...element,\n                target: newName,\n                targetHandle: `${newName}_target`,\n              };\n            }\n          }\n\n          return element;\n        });\n\n        // TODO: optimize this\n        const jobs = wf.jobs.map((staged) => {\n          if (\n            staged.name === oldName &&\n            staged instanceof workflow.WorkflowJob\n          ) {\n            return new workflow.WorkflowJob(\n              change.new,\n              staged.parameters,\n              staged.pre_steps,\n              staged.post_steps,\n            );\n          }\n\n          if (staged.parameters?.requires && changedName) {\n            const requires = staged.parameters.requires.map((req) => {\n              if (req === oldName) {\n                return newName;\n              } else {\n                return req;\n              }\n            });\n\n            if (staged instanceof workflow.WorkflowJob) {\n              return new workflow.WorkflowJob(\n                staged.job,\n                {\n                  ...staged.parameters,\n                  requires,\n                },\n                staged.pre_steps,\n                staged.post_steps,\n              );\n            }\n\n            return new workflow.WorkflowJobApproval(staged.name, {\n              ...staged.parameters,\n              requires,\n            });\n          }\n\n          return staged;\n        });\n\n        actions.update_workflows({\n          old: wf,\n          new: new WorkflowStage(wf.name, wf.id, jobs, wf.when, elements),\n        });\n      });\n    },\n  ),\n  importOrb: action((state, payload) => {\n    const orb = state.definitions.orbs[payload.name];\n    if (!orb) {\n      state.definitions.orbs = {\n        ...state.definitions.orbs,\n        [payload.name]: { observers: {}, value: payload },\n      };\n    }\n  }),\n\n  unimportOrb: action((state, payload) => {\n    state.definitions.orbs = { ...state.definitions.orbs };\n    delete state.definitions.orbs[payload.alias];\n  }),\n\n  error: action((state, payload) => {\n    console.error('An action was not found! ', payload);\n  }),\n\n  loadDefinitions: thunkOn(\n    (actions) => actions.loadConfig,\n    async (actions, target) => {\n      if (target.payload instanceof Error) {\n        actions.triggerToast({\n          label: 'Config',\n          content: 'failed to load.',\n          link: {\n            label: 'Report an issue.',\n            url: 'https://github.com/CircleCI-Public/visual-config-editor/issues',\n          },\n          duration: 25000,\n          status: 'failed',\n        });\n        return;\n      }\n\n      const config = target.payload.config;\n      const manifests = target.payload.manifests;\n      const { parameters: parameterList, orbs, ...rest } = config;\n      const defineAction = (type: DefinitionType) =>\n        actions[`define_${type}`] as unknown as ActionCreator<NamedGenerable>;\n\n      const defineParameter = defineAction('parameters');\n\n      parameterList?.parameters.forEach(defineParameter);\n\n      if (orbs) {\n        Object.values(orbs).forEach(async (orb) => {\n          const manifest = manifests ? manifests[orb.alias] : undefined;\n\n          if (!manifest) {\n            console.warn(`Orb ${orb.alias} is not defined in the manifests.`);\n            return;\n          }\n\n          const agindex = searchClient.initIndex('orbs-prod');\n          const agdata = await agindex.findObject<{\n            logo_url: string;\n            url: string;\n          }>((hit) => hit.objectID === `${orb.namespace}/${orb.name}`);\n          actions.importOrb(\n            new OrbImportWithMeta(\n              orb.alias,\n              orb.namespace,\n              orb.name,\n              manifest,\n              orb.version,\n              agdata.object.logo_url,\n              `${agdata.object.url}?version=${orb.version}`,\n              orb.description,\n              orb.display,\n            ),\n          );\n        });\n      }\n\n      type NonParameterType = Exclude<DefinitionType, 'parameters'>;\n\n      ['commands', 'executors', 'jobs'].forEach((type) => {\n        const gens: NamedGenerable[] | undefined =\n          rest[type as NonParameterType];\n        gens?.forEach((g) => {\n          const define = defineAction(type as NonParameterType);\n          define(g);\n        });\n      });\n    },\n  ),\n\n  loadConfig: action((state, payload) => {\n    if (payload instanceof Error) {\n      state.configError = payload.message;\n\n      console.error(payload);\n      return;\n    }\n\n    state.configError = '';\n\n    const config = payload.config;\n    const nodeWidth = 250; // Make this dynamic\n    const nodeHeight = 60; // Make this dynamic\n\n    const getJobName = (workflowJob: workflow.WorkflowJobAbstract) => {\n      const baseName =\n        workflowJob instanceof workflow.WorkflowJob\n          ? workflowJob.job.name\n          : (workflowJob as workflow.WorkflowJobApproval).name;\n\n      return workflowJob.parameters?.name || baseName;\n    };\n\n    const workflowJobCounts: Record<string, Record<string, number>> = {};\n    const workflows = Object.assign(\n      {},\n      ...config.workflows.map((flow) => {\n        const sourceJobCounts: Record<string, number> = {};\n        const jobTable: Record<string, workflow.WorkflowJobAbstract> = {};\n        const requiredJobs: Record<string, boolean> = {};\n\n        flow.jobs.forEach((workflowJob) => {\n          const jobName = getJobName(workflowJob);\n          jobTable[jobName] = workflowJob;\n\n          if (workflowJob instanceof workflow.WorkflowJob) {\n            const sourceJobName = workflowJob.job.name;\n\n            if (sourceJobCounts[sourceJobName] > 0) {\n              sourceJobCounts[sourceJobName]++;\n            } else {\n              sourceJobCounts[sourceJobName] = 1;\n            }\n          }\n\n          workflowJob.parameters?.requires?.forEach((requiredJob) => {\n            requiredJobs[requiredJob] = true;\n          });\n        });\n\n        workflowJobCounts[flow.name] = sourceJobCounts;\n\n        // Filter down to jobs that are not required by other jobs\n        const endJobs = flow.jobs.filter(\n          (workflowJob) => !(getJobName(workflowJob) in requiredJobs),\n        );\n\n        type JobNodeProps = { col: number; row: number };\n        const elements: Elements = [];\n        const columns: Array<number> = [];\n        const solved: Record<ElementId, JobNodeProps> = {};\n\n        const solve = (workflowJob: workflow.WorkflowJobAbstract) => {\n          const jobName = getJobName(workflowJob);\n\n          if (solved[jobName] !== undefined) {\n            return solved[jobName];\n          }\n\n          const props: JobNodeProps = { col: 0, row: 0 };\n\n          if (workflowJob.parameters?.requires) {\n            let greatestColumn = 0;\n            let greatestRow = 0;\n\n            workflowJob.parameters.requires.forEach((requiredJob) => {\n              let requiredJobProps;\n\n              if (solved[requiredJob] === undefined) {\n                requiredJobProps = solve(jobTable[requiredJob]);\n              } else {\n                requiredJobProps = solved[requiredJob];\n              }\n\n              greatestRow = Math.max(greatestRow, requiredJobProps.row);\n              greatestColumn = Math.max(greatestColumn, requiredJobProps.col);\n\n              // add connection line\n              elements.push({\n                id: v4(),\n                source: requiredJob,\n                target: jobName,\n                type: 'requires',\n                sourceHandle: `${requiredJob}_source`,\n                targetHandle: `${jobName}_target`,\n                animated: false,\n                style: { stroke: '#A3A3A3', strokeWidth: '2px' },\n              });\n            });\n\n            props.col = greatestColumn + 1;\n            props.row = greatestRow;\n          }\n\n          if (columns.length > props.col) {\n            columns[props.col]++;\n          } else {\n            columns.push(1);\n          }\n\n          // assign job to most recent requirement\n          props.row = Math.max(columns[props.col], props.row);\n\n          // add job node\n          elements.push({\n            id: jobName,\n            data: workflowJob,\n            connectable: true,\n            dragHandle: '.node',\n            type: 'jobs',\n            position: { x: props.col * nodeWidth, y: props.row * nodeHeight },\n          });\n\n          solved[jobName] = props;\n\n          return props;\n        };\n\n        // Build workflow and prep requirement connection generation\n        endJobs.forEach((workflowJob) => {\n          solve(workflowJob);\n        });\n\n        return {\n          [flow.name]: {\n            value: new WorkflowStage(\n              flow.name,\n              v4(),\n              flow.jobs,\n              flow.when,\n              elements,\n            ),\n          },\n        };\n      }),\n    );\n\n    state.definitions = {\n      ...state.definitions,\n      workflows,\n    };\n    state.selectedWorkflowId = Object.keys(workflows)[0];\n    state.stagedJobs = { workflows: workflowJobCounts };\n    state.config = config.generate();\n  }),\n  generateConfig: action((state, payload) => {\n    const defs = state.definitions;\n    // This is a merged config preview. TODO: Refactor merging process.\n    const merge = (cur: any, update: any) =>\n      update ? [...cur, ...update] : cur;\n\n    const toArray = (defs: Partial<DefinitionsModel>) =>\n      Object.assign(\n        {},\n        ...Object.entries(defs).map(([type, defRecord]) => ({\n          [type]: definitionsAsArray<NamedGenerable>(defRecord),\n        })),\n      );\n\n    const defArrays = toArray(defs);\n    const payloadArrays = payload ? toArray(payload) : undefined;\n\n    const pipelineParameters: parameters.CustomParameter<PipelineParameterLiteral>[] =\n      merge(defArrays.parameters, defArrays?.parameters);\n\n    const parameterList =\n      pipelineParameters.length > 0\n        ? new parameters.CustomParametersList<PipelineParameterLiteral>(\n            pipelineParameters,\n          )\n        : undefined;\n\n    const config = new Config(\n      false,\n      merge(defArrays.jobs, payloadArrays?.jobs),\n      merge(defArrays.workflows, payloadArrays?.workflows),\n      merge(defArrays.executors, payloadArrays?.executors),\n      merge(defArrays.commands, payloadArrays?.commands),\n      parameterList,\n      merge(defArrays.orbs, payloadArrays?.orbs),\n    );\n\n    if (payload) {\n      state.editingConfig = config.generate();\n    } else {\n      state.config = config.generate();\n      state.editingConfig = undefined;\n    }\n  }),\n\n  updatePreviewToolBox: action((state, payload) => {\n    state.previewToolbox = payload;\n  }),\n  setToast: action((state, payload) => {\n    state.toast = payload ?? undefined;\n  }),\n  // this is just to trigger the set toast action\n  triggerToast: action(() => {}),\n  triggerConfirmation: action((state, payload) => {\n    state.confirm = payload;\n  }),\n  triggerConfigRefresh: thunkOn(\n    (actions) => [\n      actions.importOrb,\n      actions.unimportOrb,\n      actions.addWorkflowElement,\n      actions.setWorkflowElements,\n      actions.removeWorkflowElement,\n      actions.updateWorkflowElement,\n      ...generateLifeCycleMatrix(actions),\n    ],\n    (actions) => {\n      actions.generateConfig();\n    },\n  ),\n  updateTooltip: action((state, payload) => {\n    state.tooltip = payload;\n  }),\n};\n\nconst Store: StoreModel & StoreActions = {\n  selectedWorkflowId: 'build-and-deploy',\n  editingConfig: undefined,\n  config: undefined,\n  guideStep: 1,\n  navigation: {\n    component: DefinitionsMenu,\n    props: { expanded: [true, true, false, false] },\n  },\n  previewToolbox: {\n    filter: {\n      type: 'branches',\n      pattern: '',\n      preview: false,\n    },\n  },\n  ...DefinitionStore,\n  stagedJobs: {\n    workflows: {\n      'build-and-deploy': {},\n    },\n  },\n  ...Actions,\n};\n\nexport default Store;\n","import algoliasearch from 'algoliasearch';\nimport { createStore, StoreProvider } from 'easy-peasy';\nimport { useRef } from 'react';\nimport Toast from './components/atoms/Toast';\nimport ToolTip from './components/atoms/Tooltip';\nimport ConfirmationModal from './components/containers/ConfirmationModal';\nimport KBarList from './components/containers/KBarList';\nimport EditorPane from './components/panes/EditorPane';\nimport NavigationPane from './components/panes/NavigationPane';\nimport WorkflowsPane from './components/panes/WorkflowsPane';\nimport './index.css';\nimport useWindowDimensions, { useStoreState } from './state/Hooks';\nimport Store from './state/Store';\nexport const store = createStore(Store);\nexport const inspectorWidth = 400;\n\nexport const searchClient = algoliasearch(\n  'U0RXNGRK45',\n  '798b0e1407310a2b54b566250592b3fd',\n);\n\nconst Pinned = () => {\n  const tooltip = useStoreState((state) => state.tooltip);\n  return (\n    <div className=\"z-40 fixed\">\n      {tooltip && (\n        <ToolTip target={tooltip.ref} facing={tooltip.facing}>\n          <p>{tooltip.description}</p>\n        </ToolTip>\n      )}\n      <Toast\n        className=\"p-6 fixed bottom-0 right-0 my-20\"\n        style={{ width: inspectorWidth }}\n      />\n    </div>\n  );\n};\n\nconst App = () => {\n  const appWidth = useWindowDimensions();\n  const editorPane = useRef(null);\n\n  return (\n    <StoreProvider store={store}>\n      <Pinned />\n      <section className=\"flex flex-row h-full text-circle-black \">\n        <section\n          className=\"flex flex-col flex-nowrap flex-1\"\n          style={{ width: appWidth.width - inspectorWidth }}\n        >\n          <WorkflowsPane />\n          <EditorPane />\n        </section>\n        <NavigationPane />\n      </section>\n      <div className=\"z-50\">\n        <KBarList reference={editorPane} />\n      </div>\n      <ConfirmationModal />\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}